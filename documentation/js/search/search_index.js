var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.074,1,2.75]],["body/classes/AllExceptionsFilter.html",[0,0.071,1,3.636,2,1.302,3,0.148,4,0.132,5,0.099,6,5.085,7,2.863,8,0.864,9,1.808,10,3.089,11,4.428,12,4.428,13,4.176,14,4.428,15,2.63,16,5.085,17,5.085,18,0.334,19,1.06,20,0.778,21,4.176,22,1.103,23,3.685,24,6.9,25,3.638,26,4.079,27,0.613,28,3.19,29,0.974,30,0.016,31,0.781,32,0.521,33,0.855,34,4.428,35,4.176,36,5.493,37,3.685,38,2.62,39,0.732,40,3.636,41,0.363,42,3.19,43,2.003,44,0.465,45,2.866,46,4.094,47,3.141,48,5.115,49,2.863,50,4.428,51,4.428,52,3.19,53,3.19,54,2.124,55,1.895,56,1.895,57,3.366,58,2.863,59,3.19,60,3.685,61,4.428,62,2.124,63,3.685,64,2.62,65,0.148,66,1.798,67,1.758,68,1.971,69,2.62,70,2.344,71,3.685,72,3.685,73,3.19,74,3.19,75,3.19,76,3.19,77,5.498,78,1.103,79,3.19,80,3.19,81,3.19,82,4.428,83,3.19,84,2.863,85,1.249,86,2.863,87,2.425,88,2.425,89,5.115,90,2.62,91,2.124,92,3.685,93,4.565,94,3.685,95,2.863,96,3.685,97,3.685,98,3.685,99,3.685,100,4.428,101,4.428,102,5.115,103,5.115,104,4.428,105,0.01,106,0.01]],["title/controllers/AppController.html",[107,1.631,108,2.75]],["body/controllers/AppController.html",[0,0.079,3,0.166,4,0.147,5,0.192,10,1.74,18,0.374,19,1.144,20,0.946,21,2.715,22,1.234,25,3.202,27,0.662,29,0.786,30,0.016,31,0.63,32,0.563,33,0.69,39,1.237,41,0.361,44,0.52,46,4.383,47,2.533,65,0.166,67,1.653,68,2.129,70,1.34,85,1.007,105,0.011,106,0.011,107,2.329,108,3.927,109,1.74,110,3.571,111,1.941,112,5.524,113,5.758,114,4.126,115,2.129,116,3.392,117,4.427,118,4.126,119,4.126,120,4.729,121,4.292,122,3.635,123,5.524,124,1.523,125,5.546,126,4.126,127,4.126,128,5.389,129,5.524,130,1.186,131,4.126,132,3.571,133,3.824,134,3.571,135,3.824,136,2.378,137,4.126,138,3.635,139,4.782,140,3.392,141,4.126,142,4.126,143,4.126,144,2.933,145,3.571,146,3.205,147,3.205,148,4.126,149,4.782,150,4.126,151,3.571,152,3.571,153,4.126,154,4.126,155,4.126,156,1.914,157,1.286,158,4.126,159,2.933]],["title/modules/AppModule.html",[160,0.984,161,2.75]],["body/modules/AppModule.html",[0,0.046,1,2.66,3,0.151,4,0.086,5,0.065,10,1.578,30,0.016,35,1.714,41,0.392,42,2.087,44,0.304,49,1.873,55,1.24,56,1.24,57,3.402,59,2.087,62,1.39,65,0.151,70,1.49,79,2.087,85,0.589,88,1.586,90,1.714,91,1.39,105,0.007,106,0.007,108,3.26,109,1.578,122,1.586,130,0.459,133,3.637,134,2.087,138,2.463,146,1.873,157,0.752,160,1.166,161,5.539,162,0.929,163,0.929,164,1.017,165,1.017,166,0.929,167,1.934,168,1.017,169,2.087,170,2.087,171,2.087,172,3.898,173,3.898,174,3.898,175,3.898,176,3.637,177,3.637,178,3.637,179,3.219,180,3.414,181,3.898,182,3.898,183,3.898,184,3.898,185,3.898,186,1.578,187,1.017,188,0.929,189,1.873,190,1.826,191,2.411,192,2.411,193,2.087,194,1.31,195,0.889,196,1.873,197,2.411,198,3.742,199,1.924,200,2.411,201,1.654,202,2.411,203,1.31,204,1.873,205,2.411,206,2.411,207,4.587,208,2.66,209,2.411,210,3.742,211,2.411,212,1.578,213,2.411,214,2.411,215,1.39,216,1.39,217,3.742,218,3.018,219,2.411,220,2.411,221,1.873,222,2.411,223,2.087,224,2.411,225,3.742,226,2.411,227,2.908,228,2.157,229,3.742,230,1.736,231,1.714,232,2.411,233,1.873,234,2.411,235,1.31,236,2.087,237,1.714,238,2.411,239,2.411,240,2.411,241,2.157,242,2.411,243,2.411,244,3.742,245,2.411,246,2.087,247,3.742,248,2.411,249,2.411,250,1.714,251,2.411,252,2.411,253,2.411,254,2.411,255,2.411,256,2.411,257,2.411,258,1.714,259,2.411,260,2.411,261,2.411,262,2.411,263,2.411,264,2.411,265,3.742,266,4.587,267,3.239,268,3.742,269,1.873,270,2.411,271,2.411,272,2.411,273,2.411,274,2.411,275,2.411,276,1.873,277,2.411,278,2.411,279,2.411,280,1.714,281,1.48,282,2.087,283,2.411,284,2.411,285,2.087,286,1.714,287,2.411,288,2.083,289,2.411,290,2.087,291,2.411,292,2.411,293,1.586,294,2.411,295,2.411,296,2.411,297,1.873,298,3.239,299,2.411,300,0.817,301,2.411,302,2.411,303,2.411,304,2.087,305,2.411,306,2.411,307,2.411,308,2.493,309,2.411,310,2.411,311,2.087,312,2.411,313,2.087,314,2.411,315,2.411,316,2.411,317,2.411,318,2.411,319,2.411,320,1.39,321,2.411,322,1.39,323,2.411,324,2.411,325,2.411,326,2.087,327,2.411,328,2.087,329,2.087,330,2.411,331,2.411,332,2.411,333,2.411,334,2.411,335,2.411,336,2.411,337,3.742,338,2.411,339,2.411,340,2.411,341,2.411,342,2.411,343,3.239,344,3.742,345,1.586,346,2.087]],["title/injectables/AppService.html",[133,2.375,347,0.768]],["body/injectables/AppService.html",[0,0.109,3,0.227,4,0.201,5,0.151,18,0.51,19,1.395,20,0.954,27,0.676,30,0.016,39,1.12,41,0.279,44,0.711,65,0.227,70,1.832,85,1.377,105,0.013,106,0.013,113,6.456,128,5.232,130,1.282,133,4.135,347,1.338,348,2.08,349,4.381,350,5.638,351,4.88]],["title/entities/ArticleContentEntity.html",[201,1.709,352,1.631]],["body/entities/ArticleContentEntity.html",[0,0.071,3,0.149,4,0.132,5,0.099,18,0.464,20,1.052,27,0.865,30,0.016,31,1.055,32,0.735,41,0.291,65,0.149,78,1.9,105,0.01,106,0.01,115,2.781,130,1.315,199,3.265,201,2.263,288,2.559,300,2.151,352,1.557,353,2.128,354,4.5,355,3.195,356,1.532,357,2.502,358,5.497,359,2.447,360,3.611,361,3.661,362,2.152,363,2.559,364,3.195,365,5.121,366,3.979,367,3.691,368,3.691,369,3.691,370,4.569,371,3.691,372,3.64,373,5.121,374,5.121,375,3.691,376,1.973,377,4.433,378,3.64,379,4.433,380,4.433,381,4.433,382,3.691,383,2.498,384,3.979,385,4.433,386,3.691,387,4.569,388,3.691,389,2.461,390,3.979,391,3.37,392,3.691,393,3.9,394,3.691,395,4.433,396,4.433,397,1.304,398,3.195,399,1.631,400,3.691,401,3.691,402,3.195,403,3.691,404,3.691,405,3.691,406,3.195]],["title/controllers/ArticleController.html",[107,1.631,407,2.75]],["body/controllers/ArticleController.html",[0,0.033,3,0.07,4,0.062,5,0.19,8,1.374,10,1.547,18,0.157,19,0.594,20,0.913,27,0.611,29,0.971,30,0.016,31,0.779,32,0.645,33,0.853,39,1.303,41,0.345,44,0.218,45,2.082,46,3.316,47,1.76,64,1.229,65,0.19,66,0.844,67,0.857,68,0.666,70,0.562,78,2.041,85,1.319,105,0.006,106,0.006,107,1.208,109,0.729,111,2.148,115,1.965,116,3.132,124,1.747,130,0.699,132,1.497,135,3.316,136,0.997,140,3.132,149,1.497,151,1.497,152,1.497,156,1.329,157,1.33,199,2.195,201,1.886,215,0.997,216,0.997,235,0.94,280,2.037,285,2.48,300,2.146,357,2.712,359,2.565,362,1.827,372,4.295,389,1.574,407,2.037,408,1.497,409,1.138,410,4.009,411,2.48,412,2.851,413,2.48,414,2.866,415,2.48,416,3.694,417,1.497,418,3.113,419,3.839,420,3.356,421,1.994,422,1.729,423,3.176,424,1.702,425,2.253,426,1.729,427,1.729,428,1.729,429,4.503,430,2.866,431,2.227,432,2.866,433,2.227,434,2.433,435,1.729,436,3.316,437,1.729,438,1.729,439,1.497,440,1.729,441,1.729,442,3.316,443,4.268,444,4.414,445,4.017,446,2.48,447,1.729,448,4.167,449,3.363,450,4.675,451,1.729,452,1.729,453,2.037,454,2.866,455,2.48,456,2.866,457,2.037,458,1.886,459,2.48,460,1.557,461,1.473,462,1.497,463,5.23,464,2.115,465,1.729,466,1.729,467,1.729,468,2.082,469,3.694,470,2.48,471,4.268,472,3.316,473,2.866,474,2.866,475,2.866,476,1.497,477,2.195,478,1.557,479,1.729,480,1.729,481,1.729,482,1.729,483,1.652,484,1.344,485,1.229,486,2.381,487,1.229,488,1.497,489,1.229,490,3.67,491,1.344,492,1.344,493,1.497,494,1.729,495,1.062,496,2.253,497,1.497,498,2.415,499,1.229,500,1.497,501,3.356,502,1.229,503,1.497,504,1.062,505,3.034,506,3.67,507,1.138,508,1.229,509,1.497,510,1.729,511,2.115,512,1.497,513,1.344,514,1.729,515,1.138,516,1.497,517,1.886,518,1.344,519,2.608,520,0.94,521,1.344,522,1.344,523,1.062,524,1.062,525,1.138,526,2.037,527,1.497,528,1.344,529,1.229,530,1.138,531,1.729,532,3.694,533,4.268,534,4.268,535,3.034,536,3.694,537,4.268,538,3.694,539,4.268,540,1.729,541,1.729,542,1.729,543,1.229,544,1.414,545,1.729,546,1.729,547,1.497,548,1.729,549,1.729,550,1.729,551,1.729,552,1.729,553,2.227,554,2.866,555,1.729,556,1.729,557,1.729,558,1.497,559,1.729,560,1.497,561,1.497,562,1.497,563,1.729,564,1.729,565,2.433,566,0.844,567,2.866,568,4.268,569,2.227,570,2.48,571,1.229,572,1.729,573,2.866,574,2.866,575,1.729,576,1.729,577,2.866,578,2.866,579,2.866,580,1.497,581,1.138,582,1.062,583,1.729,584,2.866,585,2.866,586,1.557,587,2.48,588,1.557,589,1.729,590,1.729,591,1.729,592,1.729,593,1.729,594,1.729,595,1.729]],["title/classes/ArticleDto.html",[0,0.074,477,1.989]],["body/classes/ArticleDto.html",[0,0.066,2,1.203,3,0.137,4,0.122,5,0.091,18,0.308,20,1.061,22,1.019,27,0.893,29,0.649,30,0.016,31,0.52,32,0.759,33,0.569,41,0.24,65,0.137,78,1.834,105,0.01,106,0.01,120,2.421,130,1.442,201,2.709,203,1.851,300,2.193,308,1.851,354,2.091,356,1.448,357,2.579,359,2.495,360,3.457,361,3.245,362,1.509,363,2.609,372,3.44,376,2.362,383,2.99,424,3.21,433,2.646,434,2.894,445,4.002,464,3.732,477,2.488,483,2.789,596,2.948,597,3.004,598,4.603,599,5.63,600,4.84,601,6.13,602,4.84,603,3.406,604,3.406,605,3.406,606,3.406,607,3.406,608,3.76,609,3.185,610,3.406,611,4.84,612,3.406,613,3.406,614,2.894,615,3.406,616,4.84,617,4.84,618,4.84,619,3.406,620,4.189,621,4.84,622,3.76,623,3.406,624,2.421,625,3.406,626,2.948,627,2.948,628,3.406,629,3.406,630,3.406,631,3.406,632,3.406,633,2.948,634,4.84,635,3.406,636,3.406,637,3.406,638,3.406,639,3.406,640,3.406,641,3.406,642,3.406,643,3.406,644,3.406,645,3.406]],["title/entities/ArticleEntity.html",[199,1.989,352,1.631]],["body/entities/ArticleEntity.html",[0,0.064,3,0.135,4,0.119,5,0.09,9,1.97,18,0.303,20,1.049,27,0.858,30,0.016,31,1.052,32,0.73,33,1.118,41,0.301,65,0.135,78,1.819,105,0.009,106,0.009,115,2.761,199,3.619,201,2.687,203,1.818,212,2.564,288,2.591,300,1.133,352,1.41,353,1.928,356,1.429,357,2.433,362,2.085,364,2.895,366,3.712,370,2.599,376,1.841,378,2.378,383,2.331,384,3.712,387,4.331,390,3.712,391,3.144,393,3.422,395,4.135,396,4.135,397,1.182,406,5.263,418,3.706,424,2.585,433,3.712,434,2.866,464,2.754,495,2.054,597,2.585,598,4.322,646,2.895,647,5.574,648,5.574,649,5.574,650,4.996,651,2.895,652,3.345,653,4.778,654,4.778,655,3.345,656,4.135,657,3.345,658,4.778,659,3.345,660,3.345,661,3.345,662,3.345,663,4.778,664,4.778,665,4.824,666,4.135,667,3.345,668,3.345,669,2.895,670,3.345,671,4.135,672,4.778,673,3.144,674,4.778,675,3.345,676,3.712,677,3.345,678,4.135,679,2.054,680,4.778,681,4.135,682,5.574,683,2.895,684,3.345,685,2.895,686,2.895]],["title/modules/ArticleModule.html",[160,0.984,172,2.545]],["body/modules/ArticleModule.html",[0,0.087,3,0.182,4,0.161,5,0.121,30,0.016,41,0.385,44,0.569,65,0.182,105,0.012,106,0.012,109,2.472,160,1.656,162,1.74,163,1.74,164,1.904,165,1.904,166,1.74,167,2.746,168,1.904,172,5.185,176,4.495,177,4.495,178,4.495,179,3.978,186,2.472,187,1.904,188,1.74,190,2.86,194,2.454,195,1.666,199,3.015,201,2.591,203,2.454,212,2.472,230,2.095,258,3.21,290,3.908,357,1.596,398,3.908,407,4.628,496,4.495,497,3.908,683,3.908,687,3.908,688,4.516,689,3.908,690,4.516,691,4.516,692,4.516,693,4.516,694,2.322,695,4.516]],["title/classes/ArticleRequestDto.html",[0,0.074,420,2.545]],["body/classes/ArticleRequestDto.html",[0,0.106,2,1.458,3,0.166,4,0.147,5,0.111,8,0.967,18,0.374,20,1.048,27,0.855,30,0.016,32,0.755,41,0.204,65,0.166,78,1.653,93,4.292,105,0.011,106,0.011,115,2.4,130,1.411,276,4.292,293,3.635,356,1.653,357,2.618,359,2.4,360,3.824,361,3.59,362,1.722,363,2.509,383,3.482,420,3.635,424,2.889,458,3.635,460,3.002,468,2.695,508,5.182,598,4.93,608,4.292,609,3.635,624,3.927,678,4.782,696,3.571,697,4.292,698,4.782,699,5.524,700,4.782,701,6.31,702,4.126,703,4.126,704,5.524,705,4.126,706,5.524,707,5.524,708,4.126,709,4.126,710,5.524,711,4.292,712,4.782,713,4.126,714,2.715]],["title/controllers/ArticleSearchController.html",[107,1.631,715,2.75]],["body/controllers/ArticleSearchController.html",[0,0.061,3,0.127,4,0.112,5,0.084,8,1.385,18,0.285,19,0.946,20,0.868,27,0.547,29,0.87,30,0.016,31,0.698,32,0.465,33,0.764,39,1.174,41,0.355,44,0.396,65,0.127,66,1.533,67,0.94,78,2.071,85,1.442,105,0.009,106,0.009,107,1.326,109,1.326,115,1.76,116,2.805,124,1.629,130,1.247,135,3.305,136,1.812,140,2.805,215,1.812,216,1.812,300,2.565,357,2.314,359,2.074,361,3.405,362,1.842,363,2.888,389,2.492,399,1.389,409,2.068,410,4.232,418,3.895,429,4.2,434,3.038,448,5.017,449,4.461,457,3.248,458,3.888,461,2.349,468,2.229,477,1.616,484,2.442,486,2.415,492,2.442,495,1.93,498,3.542,499,2.235,500,2.721,501,3.542,502,2.235,503,2.721,504,1.93,505,3.826,507,2.068,521,2.442,522,2.442,523,1.93,524,1.93,525,2.068,529,2.235,530,2.068,553,2.442,558,2.721,560,2.721,561,2.721,562,3.954,565,2.349,586,2.483,679,1.93,715,3.248,716,3.826,717,2.721,718,3.144,719,5.22,720,4.569,721,3.144,722,6.767,723,3.144,724,3.144,725,3.144,726,5.114,727,3.55,728,3.144,729,3.144,730,3.144,731,3.144,732,4.659,733,3.144,734,3.305,735,2.721,736,3.144,737,3.144,738,3.144,739,4.569,740,3.144,741,3.144,742,3.144,743,3.144]],["title/modules/ArticleSearchModule.html",[160,0.984,173,2.545]],["body/modules/ArticleSearchModule.html",[0,0.101,3,0.211,4,0.187,5,0.141,30,0.016,41,0.37,44,0.661,65,0.211,105,0.013,106,0.013,109,2.717,160,1.774,162,2.02,163,2.02,164,2.211,165,2.211,166,2.02,167,2.942,168,2.211,173,5.004,186,2.717,187,2.211,188,2.02,190,2.558,194,2.849,195,1.934,201,2.317,203,2.849,357,2.465,715,4.959,716,3.727,734,4.67,735,4.538,744,4.538,745,4.538,746,5.243,747,5.243,748,5.243]],["title/injectables/ArticleSearchService.html",[347,0.768,734,2.375]],["body/injectables/ArticleSearchService.html",[0,0.05,3,0.104,4,0.092,5,0.069,8,1.122,9,1.393,18,0.234,19,0.817,20,0.806,22,1.18,27,0.642,29,1.02,30,0.016,31,0.818,32,0.546,33,0.896,39,1.209,41,0.324,44,0.325,65,0.104,67,0.772,68,2.065,70,1.281,78,1.954,85,1.409,105,0.008,106,0.008,111,1.897,124,1.478,130,1.322,156,1.197,157,1.492,195,0.952,201,1.742,203,1.402,286,1.834,288,1.588,297,3.718,300,2.484,347,0.783,348,0.952,354,1.584,357,2.307,359,1.519,361,3.508,362,1.799,363,2.838,389,2.336,397,0.912,399,1.14,410,3.764,418,3.65,424,1.197,425,1.584,434,3.256,448,4.642,449,3.809,453,3.402,457,2.803,461,2.027,468,2.614,477,1.327,486,2.336,495,1.584,504,1.584,520,1.402,528,4.729,544,0.994,565,1.327,566,1.923,581,1.698,597,1.197,679,1.584,716,4.103,719,4.936,722,6.842,726,4.996,727,3.064,732,4.142,734,2.421,749,2.233,750,3.943,751,4.786,752,3.943,753,2.58,754,2.912,755,2.58,756,3.413,757,3.943,758,2.58,759,3.064,760,3.943,761,4.786,762,4.786,763,4.786,764,2.58,765,2.58,766,1.588,767,3.327,768,3.402,769,3.943,770,2.58,771,1.487,772,3.943,773,3.943,774,2.233,775,3.943,776,3.718,777,2.58,778,3.943,779,2.58,780,2.58,781,2.58,782,2.58,783,2.58,784,2.58,785,2.58,786,2.58,787,2.58,788,2.58,789,2.58,790,2.58,791,2.58,792,2.58,793,2.58,794,2.58,795,2.58,796,2.58,797,2.58,798,3.413,799,2.58,800,2.233,801,2.233,802,2.58,803,2.58,804,2.005,805,2.58,806,2.233,807,2.58,808,2.58,809,2.58,810,2.58,811,2.233,812,2.233,813,1.487,814,2.58,815,2.233,816,2.58,817,2.005,818,2.005,819,2.58,820,2.58,821,2.58]],["title/injectables/ArticleService.html",[347,0.768,496,2.375]],["body/injectables/ArticleService.html",[0,0.029,3,0.06,4,0.053,5,0.04,8,1.016,9,0.524,18,0.134,19,0.522,20,0.881,22,0.754,26,2.898,27,0.602,29,0.898,30,0.016,31,0.72,32,0.64,33,0.788,39,1.096,41,0.333,43,0.806,44,0.187,45,2.691,54,0.855,55,0.762,56,0.762,65,0.06,67,1.583,68,2.125,69,1.054,70,1.855,78,1.965,85,1.227,105,0.005,106,0.005,111,2.072,124,1.662,130,0.826,144,1.79,156,2.332,157,2.168,159,2.751,195,0.547,199,1.688,201,2.775,203,0.806,212,1.384,215,0.855,216,1.452,230,0.688,288,1.899,300,2.251,347,0.5,348,0.547,352,0.625,354,0.91,357,2.66,359,0.97,362,2.094,363,1.015,372,3.921,376,1.817,383,1.229,389,1.428,397,0.524,399,0.655,410,3.389,411,2.18,412,3.008,413,2.18,415,2.18,416,2.18,417,2.18,418,2.898,420,2.547,421,1.369,423,4.081,424,3.046,431,1.152,434,2.721,439,2.18,444,4.081,445,4.285,448,3.921,449,2.751,450,4.58,453,1.79,457,1.79,458,2.547,459,2.18,460,2.562,461,1.295,462,2.18,463,4.774,464,1.892,468,2.786,469,3.35,476,2.18,477,1.99,478,1.369,483,1.892,486,2.224,495,0.91,496,1.547,504,0.91,508,1.054,509,1.283,511,2.898,512,1.283,520,0.806,523,0.91,524,0.91,525,0.976,526,3.574,528,4.437,535,1.054,544,2.265,565,1.295,566,0.723,581,1.657,586,1.784,587,2.18,588,1.784,597,1.168,608,3.369,609,2.853,622,1.152,626,1.283,673,0.976,679,0.91,694,0.762,711,1.152,712,2.18,719,1.79,727,1.957,754,3.103,756,2.842,766,0.597,767,1.892,768,2.334,771,0.855,774,1.283,776,1.957,798,1.283,800,2.18,801,2.18,811,4.081,812,1.283,815,1.283,817,2.551,818,1.957,822,1.283,823,3.283,824,1.152,825,3.283,826,2.842,827,3.087,828,3.087,829,2.732,830,1.483,831,1.957,832,3.871,833,1.483,834,2.18,835,1.483,836,1.483,837,1.483,838,1.483,839,1.283,840,2.519,841,1.483,842,3.871,843,1.483,844,1.483,845,0.91,846,1.483,847,0.723,848,1.054,849,1.483,850,1.283,851,1.152,852,1.483,853,1.283,854,1.054,855,1.483,856,1.483,857,2.519,858,1.483,859,2.519,860,1.483,861,1.483,862,1.483,863,3.871,864,1.483,865,2.519,866,2.519,867,2.519,868,2.519,869,1.483,870,1.657,871,1.483,872,2.519,873,2.519,874,3.283,875,1.483,876,1.483,877,1.283,878,1.483,879,1.483,880,2.519,881,2.519,882,1.483,883,2.519,884,1.483,885,1.483,886,1.483,887,1.483,888,1.483,889,1.483,890,1.483,891,2.519,892,1.483,893,2.18,894,2.519,895,2.519,896,1.657,897,1.152,898,1.483,899,1.283,900,1.483,901,1.152,902,1.483,903,1.483,904,1.152,905,1.483,906,1.483,907,1.483,908,1.483,909,1.483,910,1.483,911,1.483,912,1.483,913,1.483,914,3.283,915,3.283,916,1.483,917,3.283,918,1.054,919,1.483,920,1.483,921,1.483,922,1.483,923,1.483,924,1.483,925,1.483,926,1.483,927,1.483,928,1.483,929,2.519,930,1.483,931,2.519,932,3.871,933,3.283,934,1.229,935,2.18,936,1.283,937,4.336,938,1.483,939,1.483,940,1.483,941,1.152,942,1.483,943,1.483,944,1.483,945,1.483,946,1.483,947,1.483,948,1.483,949,1.483,950,1.483]],["title/controllers/AuthController.html",[107,1.631,951,2.75]],["body/controllers/AuthController.html",[0,0.047,3,0.099,4,0.088,5,0.066,8,1.609,18,0.223,19,0.788,20,0.923,27,0.627,29,0.996,30,0.016,31,0.799,32,0.533,33,0.874,39,1.278,41,0.296,44,0.311,45,2.758,65,0.099,66,1.202,67,0.737,78,1.391,85,1.277,95,2.957,105,0.008,106,0.008,107,1.039,109,1.039,115,2.015,116,3.212,124,1.774,130,1.373,135,3.471,136,1.42,140,3.212,157,2.006,188,2.302,235,1.339,320,3.258,359,0.949,362,1.186,409,1.621,468,2.758,483,2.194,485,1.751,486,2.298,487,1.751,491,1.914,505,2.705,507,1.621,518,1.914,529,1.751,532,2.133,565,3.203,566,1.202,571,3.305,586,1.339,597,1.765,934,2.551,935,2.133,951,2.705,952,2.133,953,2.133,954,4.025,955,4.025,956,3.294,957,4.025,958,2.464,959,4.527,960,5.966,961,5.415,962,3.809,963,2.464,964,4.025,965,6.179,966,2.464,967,2.464,968,4.064,969,3.621,970,3.806,971,2.133,972,4.303,973,3.806,974,4.279,975,2.464,976,2.464,977,2.464,978,2.464,979,3.718,980,4.019,981,2.464,982,4.65,983,2.464,984,2.464,985,2.133,986,3.932,987,2.705,988,2.464,989,2.464,990,2.464,991,2.464,992,2.464,993,2.68,994,1.914,995,4.428,996,1.914,997,2.464,998,1.513,999,2.464,1000,3.806,1001,3.806,1002,3.294,1003,3.806,1004,5.23,1005,2.464,1006,5.23,1007,1.621,1008,2.504,1009,2.464,1010,3.806,1011,3.806,1012,3.806,1013,2.464,1014,3.305,1015,3.294,1016,1.914,1017,2.464,1018,2.464,1019,1.621,1020,2.464,1021,2.464,1022,2.464,1023,1.914,1024,2.464,1025,2.464,1026,2.504,1027,2.464,1028,2.464,1029,2.464,1030,2.464,1031,2.464,1032,2.464,1033,2.464]],["title/modules/AuthModule.html",[160,0.984,174,2.545]],["body/modules/AuthModule.html",[0,0.097,3,0.204,4,0.181,5,0.136,30,0.016,41,0.374,44,0.639,65,0.204,105,0.012,106,0.012,109,2.66,160,1.747,162,1.952,163,1.952,164,2.136,165,2.136,166,1.952,167,2.897,168,2.897,174,5.033,186,2.66,187,2.136,188,1.952,190,2.471,194,2.753,195,1.868,236,5.46,237,3.601,241,2.92,951,4.883,993,4.57,994,3.936,1034,4.385,1035,4.385,1036,4.385,1037,5.066,1038,5.066,1039,5.066,1040,5.066]],["title/injectables/AuthService.html",[347,0.768,993,2.229]],["body/injectables/AuthService.html",[0,0.032,3,0.067,4,0.06,5,0.045,8,1.355,18,0.151,19,0.576,20,0.874,22,0.832,27,0.734,29,1.136,30,0.016,31,0.911,32,0.608,33,0.998,39,1.371,41,0.296,44,0.21,65,0.067,67,0.832,68,2.606,70,2.036,78,1.249,85,1.56,87,2.747,95,1.297,105,0.005,106,0.005,111,2.233,124,1.843,130,1.432,156,2.768,157,2.131,188,1.072,195,0.616,237,1.186,241,3.611,280,1.978,288,2.019,308,2.723,320,1.604,322,3.21,328,1.445,329,1.445,347,0.553,348,0.616,352,1.76,362,1.86,376,2.048,383,1.745,397,0.59,425,1.025,442,2.162,478,1.512,486,2.397,517,1.831,520,0.907,535,1.186,536,1.445,544,2.541,566,0.814,582,1.025,586,0.907,588,0.907,597,1.937,673,1.098,754,2.269,771,0.962,776,1.297,934,1.357,954,2.408,955,2.408,956,2.408,957,2.408,959,4.6,960,5.597,961,4.327,962,3.623,964,2.408,965,4.6,968,4.636,969,3.796,971,2.408,972,4.214,974,4.266,980,2.968,985,2.408,986,1.831,993,1.604,998,1.025,1007,1.098,1008,1.831,1014,2.543,1016,2.78,1019,1.098,1026,1.831,1041,1.445,1042,2.782,1043,4.175,1044,2.782,1045,2.782,1046,2.782,1047,2.782,1048,1.445,1049,5.315,1050,1.669,1051,2.408,1052,2.782,1053,1.669,1054,2.782,1055,3.614,1056,2.782,1057,2.782,1058,1.669,1059,2.408,1060,1.978,1061,2.782,1062,1.669,1063,2.782,1064,4.639,1065,1.669,1066,2.782,1067,4.175,1068,4.175,1069,2.782,1070,2.782,1071,2.782,1072,2.782,1073,1.669,1074,2.782,1075,1.669,1076,2.782,1077,1.669,1078,2.782,1079,1.669,1080,2.408,1081,1.669,1082,2.782,1083,4.175,1084,1.669,1085,1.831,1086,1.445,1087,1.297,1088,1.297,1089,1.445,1090,1.445,1091,1.669,1092,1.445,1093,3.614,1094,1.669,1095,1.669,1096,1.669,1097,1.297,1098,1.669,1099,1.669,1100,1.669,1101,1.669,1102,1.669,1103,2.782,1104,2.782,1105,2.408,1106,2.782,1107,2.782,1108,2.782,1109,1.669,1110,1.669,1111,1.669,1112,1.669,1113,1.669,1114,1.669,1115,2.782,1116,1.669,1117,3.578,1118,1.669,1119,2.782,1120,1.297,1121,2.782,1122,1.669,1123,1.669,1124,1.445,1125,1.445,1126,2.782,1127,1.669,1128,1.669,1129,1.669,1130,1.669,1131,1.669,1132,1.669,1133,1.669]],["title/classes/BadValidationRequestException.html",[0,0.074,1134,2.75]],["body/classes/BadValidationRequestException.html",[0,0.092,2,1.698,3,0.193,4,0.172,5,0.129,8,1.126,10,3.07,22,1.438,27,0.576,29,1.162,30,0.016,31,0.734,32,0.489,33,0.803,41,0.238,44,0.606,45,3.271,46,2.951,65,0.193,70,1.983,91,3.865,105,0.012,106,0.012,130,1.162,356,1.438,357,2.156,425,4.332,461,2.471,566,3.271,698,4.159,714,4.016,817,5.481,818,3.734,1134,4.338,1135,4.742,1136,4.742,1137,4.159,1138,7.054,1139,6.102,1140,6.102,1141,3.747,1142,6.102,1143,6.303,1144,4.806,1145,4.159,1146,4.806,1147,4.806,1148,4.806,1149,4.806,1150,4.806,1151,4.338,1152,4.806,1153,4.806,1154,3.162]],["title/injectables/BasicStrategy.html",[183,2.545,347,0.768]],["body/injectables/BasicStrategy.html",[0,0.087,3,0.183,4,0.162,5,0.122,8,1.065,13,2.989,18,0.411,19,1.219,20,0.865,22,1.954,27,0.705,29,0.865,30,0.016,31,0.694,32,0.463,33,0.76,39,1.169,41,0.324,44,0.573,65,0.183,85,1.437,105,0.012,106,0.012,111,2.036,124,1.623,130,1.396,183,4.297,235,2.469,288,1.83,308,2.469,347,1.169,348,1.676,486,2.171,972,4.406,974,4.301,1085,4.546,1141,2.79,1154,2.989,1155,3.932,1156,5.652,1157,5.074,1158,6.346,1159,5.979,1160,5.886,1161,4.543,1162,5.095,1163,4.543,1164,3.53,1165,3.229,1166,3.53,1167,5.886,1168,5.886]],["title/classes/CheckArticleTypePipe.html",[0,0.074,498,2.545]],["body/classes/CheckArticleTypePipe.html",[0,0.096,2,1.758,3,0.2,4,0.178,5,0.134,8,1.166,15,3.207,18,0.45,19,1.292,20,0.903,27,0.596,29,0.948,30,0.016,31,0.76,32,0.765,33,0.832,39,0.988,41,0.309,44,0.627,65,0.2,70,1.617,85,1.215,105,0.012,106,0.012,156,2.308,157,1.551,357,2.6,418,4.327,434,3.504,495,3.055,498,4.105,499,4.434,566,3.324,679,3.055,759,4.847,766,2.745,1026,4.105,1169,4.307,1170,4.847,1171,6.238,1172,5.295,1173,4.434,1174,4.847,1175,4.976,1176,4.976,1177,4.976]],["title/modules/CronJobModule.html",[160,0.984,175,2.545]],["body/modules/CronJobModule.html",[0,0.098,3,0.205,4,0.182,5,0.137,30,0.016,41,0.367,44,0.642,65,0.205,105,0.012,106,0.012,160,1.75,162,1.961,163,1.961,164,2.146,165,2.146,166,1.961,167,2.903,168,2.146,175,5.091,179,4.103,186,2.667,187,2.146,188,1.961,190,3.086,194,2.765,195,1.877,228,2.933,230,2.934,231,3.617,250,3.617,258,3.617,847,3.086,1178,4.405,1179,5.089,1180,4.405,1181,4.968,1182,3.954,1183,5.089,1184,3.954,1185,5.089,1186,4.405]],["title/injectables/CronJobService.html",[347,0.768,1181,2.545]],["body/injectables/CronJobService.html",[0,0.095,3,0.199,4,0.176,5,0.132,18,0.447,19,1.285,20,0.899,22,1.476,27,0.743,29,0.939,30,0.016,31,0.753,32,0.502,33,0.825,39,0.98,41,0.336,44,0.622,65,0.199,66,2.406,67,1.476,105,0.012,106,0.012,111,2.116,115,1.9,124,1.711,230,2.288,233,3.832,250,4.824,347,1.232,348,1.819,472,4.82,694,3.19,829,4.071,847,2.406,848,3.506,1181,4.082,1182,5.273,1184,5.273,1187,4.269,1188,7.122,1189,4.932,1190,4.932,1191,6.204,1192,4.932,1193,6.204,1194,4.082,1195,6.204,1196,4.82,1197,5.37,1198,4.082,1199,4.932,1200,4.932]],["title/classes/CustomValidationPipe.html",[0,0.074,515,2.545]],["body/classes/CustomValidationPipe.html",[0,0.104,2,1.906,3,0.217,4,0.193,5,0.145,8,1.264,22,2.114,27,0.646,30,0.016,41,0.325,44,0.68,45,3.199,65,0.217,105,0.013,106,0.013,157,1.682,288,2.173,359,2.526,515,4.315,697,5.095,1026,4.315,1085,4.315,1134,3.835,1135,4.191,1136,4.191,1141,4.026,1143,5.675,1145,4.669,1154,3.55,1173,3.835,1201,4.669,1202,6.557,1203,7.064,1204,5.394,1205,5.394,1206,5.394,1207,5.394]],["title/modules/EmailModule.html",[160,0.984,176,2.375]],["body/modules/EmailModule.html",[0,0.097,3,0.203,4,0.18,5,0.135,30,0.016,41,0.356,44,0.636,65,0.203,105,0.012,106,0.012,160,1.743,162,1.943,163,1.943,164,2.126,165,2.126,166,1.943,167,2.891,168,2.891,176,4.843,179,4.094,180,4.342,186,2.653,187,2.126,188,1.943,190,3.069,230,2.339,258,3.585,827,4.866,847,2.46,1208,4.365,1209,5.043,1210,4.365,1211,4.365,1212,5.043,1213,4.365,1214,5.043]],["title/injectables/EmailService.html",[347,0.768,827,2.375]],["body/injectables/EmailService.html",[0,0.075,3,0.156,4,0.138,5,0.104,8,0.909,10,2.544,18,0.351,19,1.097,20,0.799,21,2.551,22,1.16,25,3.688,26,4.039,27,0.635,29,1.009,30,0.016,31,0.809,32,0.539,33,0.885,39,0.77,41,0.362,43,2.106,44,0.489,54,2.234,55,1.993,56,1.993,65,0.156,67,1.805,68,2.325,84,3.012,105,0.01,106,0.01,111,1.881,117,3.765,124,1.461,138,3.97,144,2.755,145,3.355,146,3.012,157,2.236,218,2.551,221,3.012,311,3.355,345,2.551,347,1.052,348,1.43,357,2.673,359,1.494,360,2.38,361,2.234,363,1.562,376,1.494,477,3.334,486,1.43,504,2.38,517,3.485,544,1.494,827,3.252,854,3.765,896,4.467,897,5.674,1194,3.97,1215,3.355,1216,5.296,1217,2.755,1218,7.173,1219,3.876,1220,5.296,1221,3.876,1222,4.584,1223,3.355,1224,3.355,1225,3.012,1226,5.296,1227,6.033,1228,3.876,1229,3.876,1230,3.876,1231,6.033,1232,3.355,1233,3.876,1234,3.876,1235,3.876,1236,3.876,1237,2.755,1238,5.296,1239,5.296,1240,3.876,1241,3.876,1242,3.876,1243,3.355,1244,3.876,1245,3.876,1246,4.584,1247,3.876]],["title/classes/ErrorResponse.html",[0,0.074,57,2.545]],["body/classes/ErrorResponse.html",[0,0.098,2,1.794,3,0.204,4,0.181,5,0.136,10,3.227,13,4.157,18,0.46,20,1.033,27,0.824,30,0.016,32,0.7,57,4.157,58,5.591,65,0.204,77,4.908,78,1.89,90,4.888,91,3.964,105,0.012,106,0.012,130,1.37,356,1.89,446,5.468,969,3.082,1248,4.395,1249,5.077,1250,7.196,1251,6.317,1252,5.077,1253,5.468,1254,5.468,1255,5.077,1256,6.317]],["title/modules/ExcelModule.html",[160,0.984,177,2.375]],["body/modules/ExcelModule.html",[0,0.104,3,0.218,4,0.194,5,0.146,30,0.016,41,0.326,44,0.683,65,0.218,105,0.013,106,0.013,160,1.8,162,2.089,163,2.089,164,2.286,165,2.286,166,2.089,167,2.985,168,2.985,177,4.764,186,2.773,187,2.286,188,2.089,828,4.911,1257,4.692,1258,4.692,1259,4.692,1260,5.42,1261,5.42]],["title/injectables/ExcelService.html",[347,0.768,828,2.375]],["body/injectables/ExcelService.html",[0,0.05,3,0.105,4,0.093,5,0.129,8,1.13,9,1.406,18,0.236,19,0.824,20,0.639,27,0.695,29,0.918,30,0.016,31,0.736,32,0.719,33,0.806,39,1.215,41,0.315,44,0.329,65,0.234,68,2.721,70,2.182,78,0.781,85,1.493,105,0.008,106,0.008,130,1.211,288,1.602,300,1.826,347,0.79,348,0.963,356,1.19,357,1.406,359,2.356,361,2.778,362,1.24,363,2.463,383,1.94,389,0.963,393,3.31,399,1.153,410,4.12,412,3.091,421,2.619,424,2.692,431,2.028,434,2.045,436,5.611,445,2.828,477,3.581,486,1.988,504,1.603,517,2.617,543,4.125,597,2.5,614,1.342,700,4.666,711,5.786,766,1.602,804,5.322,813,1.504,828,2.443,877,3.443,901,3.091,1159,3.443,1262,2.259,1263,4.82,1264,4.82,1265,3.978,1266,3.978,1267,3.978,1268,2.61,1269,5.39,1270,6.554,1271,7.222,1272,3.978,1273,5.802,1274,3.978,1275,2.61,1276,3.978,1277,6.114,1278,2.61,1279,6.85,1280,5.802,1281,3.978,1282,2.61,1283,4.82,1284,3.091,1285,2.61,1286,1.717,1287,2.61,1288,2.61,1289,4.82,1290,4.172,1291,4.125,1292,3.443,1293,2.61,1294,2.61,1295,2.61,1296,2.61,1297,2.61,1298,2.61,1299,2.61,1300,2.61,1301,2.61,1302,2.61,1303,2.61,1304,2.61,1305,2.61,1306,4.82,1307,2.61,1308,2.61,1309,2.61,1310,2.61,1311,2.61,1312,2.61,1313,2.61,1314,2.61,1315,2.259,1316,2.61,1317,2.259,1318,2.61,1319,2.61,1320,3.978,1321,2.61,1322,2.61,1323,2.259,1324,3.978,1325,2.61,1326,2.61,1327,2.61,1328,2.61]],["title/modules/FileModule.html",[160,0.984,178,2.375]],["body/modules/FileModule.html",[0,0.1,3,0.21,4,0.186,5,0.14,30,0.016,41,0.345,44,0.658,65,0.21,105,0.013,106,0.013,160,1.77,162,2.011,163,2.011,164,2.201,165,2.201,166,2.011,167,2.936,168,2.936,178,4.811,180,4.379,186,2.709,187,2.201,188,2.011,190,3.135,511,4.588,1213,4.517,1329,4.517,1330,4.517,1331,5.219,1332,4.517,1333,5.219,1334,5.219]],["title/injectables/FileService.html",[347,0.768,511,2.229]],["body/injectables/FileService.html",[0,0.049,3,0.102,4,0.091,5,0.193,8,0.915,9,0.899,10,2.811,18,0.23,19,0.808,20,0.861,21,1.675,22,0.761,25,3.112,26,3.632,27,0.725,29,1.092,30,0.016,31,1.057,32,0.617,33,0.959,39,1.252,40,3.782,41,0.348,43,1.383,44,0.321,45,2.595,47,1.563,54,1.467,55,1.308,56,1.308,64,1.809,65,0.102,66,1.241,67,1.167,68,2.05,69,1.809,70,1.542,85,1.628,87,2.567,105,0.008,106,0.008,111,1.887,122,4.387,124,1.467,130,1.368,138,3.775,139,3.377,144,1.809,147,3.687,157,0.793,288,2.311,298,3.377,308,2.891,345,2.567,347,0.775,348,0.939,356,1.167,376,0.981,464,2.249,470,2.203,486,1.75,511,2.735,519,3.373,520,1.383,543,2.774,544,1.503,566,1.241,569,3.032,581,3.501,609,4.387,766,1.025,854,1.809,934,1.241,1059,3.377,1060,3.782,1223,2.203,1224,2.203,1237,2.774,1243,2.203,1292,4.107,1335,2.203,1336,6.054,1337,5.32,1338,3.902,1339,3.902,1340,3.902,1341,2.545,1342,2.545,1343,3.902,1344,4.745,1345,5.737,1346,2.545,1347,2.545,1348,3.902,1349,4.745,1350,6.054,1351,4.745,1352,2.203,1353,3.902,1354,2.545,1355,3.377,1356,3.902,1357,3.902,1358,2.545,1359,3.902,1360,6.302,1361,3.902,1362,2.545,1363,4.745,1364,3.902,1365,3.902,1366,3.902,1367,3.377,1368,4.107,1369,3.377,1370,3.687,1371,4.745,1372,3.902,1373,3.902,1374,3.902,1375,3.902,1376,2.545,1377,4.745,1378,2.545,1379,2.545,1380,2.545,1381,3.902,1382,2.203,1383,2.545,1384,3.377,1385,2.545,1386,2.545,1387,2.545,1388,2.545,1389,2.545,1390,2.545,1391,2.545,1392,2.545,1393,2.545,1394,2.545,1395,2.545,1396,2.545,1397,2.545,1398,2.545,1399,2.545,1400,2.545,1401,2.545,1402,2.545,1403,2.545,1404,2.545,1405,2.545,1406,2.545,1407,4.745,1408,3.902,1409,2.545,1410,2.545,1411,2.545,1412,2.545,1413,2.545,1414,2.545,1415,2.545,1416,2.545]],["title/classes/HttpExceptionFilter.html",[0,0.074,208,2.75]],["body/classes/HttpExceptionFilter.html",[0,0.08,2,1.466,3,0.167,4,0.148,5,0.111,7,3.223,8,0.972,10,2.634,11,4.799,12,4.799,13,4.387,14,4.799,15,2.851,16,5.406,17,5.406,18,0.376,19,1.149,20,0.828,21,4.11,22,1.241,26,4.121,27,0.664,28,3.591,29,1.056,30,0.016,31,0.847,32,0.565,33,0.927,34,4.799,35,4.44,36,5.77,38,2.949,39,0.824,40,3.941,41,0.344,43,2.254,44,0.523,45,3.047,46,4.39,47,2.547,50,4.799,51,4.799,52,3.591,53,3.591,54,2.391,55,2.133,56,2.133,61,4.799,62,2.391,65,0.167,67,1.241,68,1.598,70,2.323,73,3.591,74,3.591,75,3.591,76,3.591,77,5.18,78,1.241,80,3.591,81,3.591,82,4.799,83,3.591,84,3.223,85,1.354,86,4.308,87,2.73,88,2.73,90,2.949,91,2.391,100,4.799,101,3.591,104,3.591,105,0.011,106,0.011,208,3.941,1217,2.949,1225,3.223,1417,5.406,1418,4.148,1419,6.667,1420,4.148,1421,4.148,1422,4.148,1423,5.545,1424,4.148]],["title/interfaces/JwtPayload.html",[322,2.229,1425,2.229]],["body/interfaces/JwtPayload.html",[3,0.238,4,0.211,5,0.159,18,0.536,30,0.015,32,0.603,65,0.238,78,2.199,105,0.014,106,0.014,322,3.995,356,2.074,998,3.636,1105,6.559,1425,3.413,1426,4.209,1427,5.125]],["title/interfaces/JwtRequest.html",[979,2.75,1425,2.229]],["body/interfaces/JwtRequest.html",[3,0.228,4,0.202,5,0.152,18,0.513,30,0.016,32,0.577,41,0.281,45,3.295,65,0.228,105,0.013,106,0.013,276,4.403,320,3.893,322,4.548,356,2.021,979,4.801,980,4.028,998,3.48,1087,4.403,1141,4.147,1425,3.266,1426,4.028,1428,4.905,1429,5.667,1430,4.403,1431,5.667]],["title/injectables/JwtStrategy.html",[184,2.545,347,0.768]],["body/injectables/JwtStrategy.html",[0,0.082,3,0.171,4,0.151,5,0.114,18,0.384,19,1.166,20,0.837,22,1.269,27,0.674,29,1.072,30,0.016,31,0.86,32,0.573,33,0.941,39,0.843,41,0.364,44,0.535,65,0.171,67,1.269,68,1.635,70,1.378,85,1.036,105,0.011,106,0.011,111,1.969,124,1.552,156,3.338,157,1.754,184,3.703,195,1.565,235,2.306,241,3.244,320,3.877,322,3.877,326,3.672,347,1.118,348,1.565,362,1.754,376,1.635,397,1.499,538,3.672,544,1.635,588,3.059,597,3.12,754,3.656,771,2.445,961,3.296,962,2.746,969,3.636,980,4.001,998,2.605,1014,4.49,1016,4.907,1048,3.672,1051,4.871,1085,4.426,1086,3.672,1087,3.296,1093,3.672,1120,3.296,1124,3.672,1125,3.672,1141,2.605,1154,2.792,1157,3.296,1164,3.296,1165,3.016,1166,3.296,1432,3.672,1433,4.243,1434,5.628,1435,4.243,1436,4.243,1437,4.243,1438,4.243,1439,4.243,1440,4.243,1441,4.243,1442,4.243,1443,4.243]],["title/injectables/LocalStrategy.html",[185,2.545,347,0.768]],["body/injectables/LocalStrategy.html",[0,0.075,3,0.158,4,0.14,5,0.105,8,0.918,9,1.885,18,0.355,19,1.105,20,0.804,22,1.172,27,0.639,29,1.394,30,0.016,31,0.815,32,0.543,33,0.892,39,1.06,41,0.323,44,0.494,45,3.177,46,3.275,65,0.158,66,1.911,67,1.172,70,1.272,85,0.956,86,5.06,87,4.285,105,0.011,106,0.011,111,1.891,124,1.471,130,1.339,156,3.021,157,1.663,185,3.51,235,2.129,280,3.792,288,2.444,308,2.899,347,1.06,348,1.445,425,3.275,464,2.258,486,1.967,544,1.509,565,2.743,566,2.602,714,4.285,896,3.51,897,4.144,969,3.177,972,4.532,974,4.278,993,4.052,994,3.043,1014,4.629,1026,3.51,1085,4.285,1092,3.39,1141,2.405,1154,2.577,1157,3.043,1162,4.617,1164,3.043,1165,2.784,1166,3.043,1444,3.39,1445,3.917,1446,3.917,1447,3.917,1448,6.512,1449,5.334,1450,5.334,1451,5.334,1452,5.334,1453,3.39,1454,5.334,1455,3.917,1456,3.917]],["title/classes/Migrations1691261966905.html",[0,0.074,1457,3.005]],["body/classes/Migrations1691261966905.html",[0,0.057,2,1.039,3,0.118,4,0.105,5,0.079,9,2.338,15,2.238,18,0.663,19,0.901,20,0.919,27,0.621,29,0.829,30,0.015,31,0.933,32,0.528,33,0.728,39,0.864,41,0.146,65,0.118,105,0.009,106,0.009,111,1.994,124,1.578,130,0.829,286,2.091,293,3.766,300,2.242,356,1.302,357,2.022,359,1.677,360,1.806,362,1.994,363,2.087,366,4.447,370,5.391,376,2.982,385,3.767,391,4.02,397,1.039,402,2.546,453,2.091,460,2.365,478,3.32,544,2.991,597,1.365,598,3.093,624,4.342,650,2.286,656,2.546,665,3.767,671,5.881,676,4.447,685,4.954,686,4.954,766,1.185,813,1.696,934,2.792,962,2.123,986,2.864,1291,5.204,1457,4.447,1458,4.954,1459,2.091,1460,4.024,1461,3.381,1462,2.286,1463,3.381,1464,5.391,1465,2.942,1466,3.381,1467,2.286,1468,5.287,1469,4.989,1470,4.969,1471,5.536,1472,5.287,1473,5.287,1474,3.767,1475,1.936,1476,2.546,1477,2.546,1478,5.724,1479,5.881,1480,2.942,1481,4.352,1482,4.352,1483,4.352,1484,2.546,1485,2.546,1486,4.352,1487,4.352,1488,5.881,1489,5.724,1490,5.724,1491,4.352,1492,6.794,1493,5.724,1494,5.179,1495,4.352,1496,4.352,1497,4.352,1498,4.352,1499,2.942,1500,5.724,1501,6.197]],["title/classes/Migrations1691666064778.html",[0,0.074,1502,3.005]],["body/classes/Migrations1691666064778.html",[0,0.086,2,1.586,3,0.181,4,0.16,5,0.121,9,2.064,15,3.003,18,0.588,19,1.21,20,1.011,27,0.778,29,1.112,30,0.016,31,1.089,32,0.661,33,0.976,39,1.16,41,0.222,65,0.181,105,0.012,106,0.012,111,2.278,124,1.896,130,1.112,356,1.747,362,1.821,376,2.816,397,1.586,544,2.502,582,2.756,597,2.082,650,3.487,766,1.808,969,3.167,972,2.587,974,3.366,986,3.843,1008,2.953,1151,3.191,1291,3.191,1459,3.191,1460,5.045,1461,4.538,1462,3.487,1463,4.538,1464,5.927,1466,4.538,1467,3.487,1468,3.885,1469,3.843,1470,4.538,1471,3.885,1472,3.885,1473,3.885,1474,3.885,1477,3.885,1501,5.055,1502,5.343,1503,5.952,1504,3.885,1505,3.885,1506,4.488,1507,3.885,1508,5.841]],["title/classes/Migrations1692270732657.html",[0,0.074,1509,3.005]],["body/classes/Migrations1692270732657.html",[0,0.091,2,1.669,3,0.19,4,0.169,5,0.127,9,1.669,15,3.104,18,0.428,19,1.25,20,1.02,27,0.797,29,1.15,30,0.016,31,1.107,32,0.678,33,1.009,39,1.199,41,0.234,65,0.19,105,0.012,106,0.012,111,2.309,124,1.933,130,1.15,356,1.806,360,3.707,376,2.326,381,5.225,397,1.669,544,2.326,766,1.903,986,3.972,1459,3.358,1460,5.169,1461,4.691,1462,3.671,1463,4.691,1464,5.983,1466,4.691,1467,3.671,1469,3.972,1470,4.691,1479,5.225,1488,5.225,1504,4.089,1509,5.447,1510,6.068,1511,6.037]],["title/controllers/PushNotificationController.html",[107,1.631,1512,2.75]],["body/controllers/PushNotificationController.html",[0,0.078,3,0.163,4,0.145,5,0.109,8,1.281,18,0.367,19,1.132,20,0.941,27,0.655,29,1.04,30,0.016,31,0.835,32,0.557,33,0.913,39,1.085,41,0.342,44,0.512,65,0.163,66,1.98,67,1.214,85,1.334,105,0.011,106,0.011,107,1.711,109,1.711,111,2.214,115,2.105,116,3.355,124,1.822,135,3.793,136,2.339,140,3.355,230,2.865,235,2.205,359,1.564,409,2.671,485,2.885,486,2.015,487,2.885,491,3.153,507,2.671,518,3.153,571,2.885,694,3.886,829,3.357,847,3.223,848,2.885,934,3.541,962,3.851,1198,4.857,1512,3.884,1513,3.513,1514,4.729,1515,4.729,1516,3.513,1517,4.777,1518,4.058,1519,4.058,1520,3.513,1521,6.149,1522,4.058,1523,4.058,1524,5.464,1525,2.885,1526,3.513,1527,4.058,1528,4.058,1529,4.058,1530,4.058,1531,4.058,1532,4.058,1533,4.058,1534,4.058,1535,4.058]],["title/modules/PushNotificationModule.html",[160,0.984,179,2.102]],["body/modules/PushNotificationModule.html",[0,0.098,3,0.205,4,0.182,5,0.137,30,0.016,41,0.367,44,0.643,65,0.205,105,0.012,106,0.012,109,2.671,160,1.752,162,1.965,163,1.965,164,2.151,165,2.151,166,1.965,167,2.906,168,2.906,179,4.162,186,2.671,187,2.151,188,1.965,190,2.488,194,2.772,195,1.881,228,2.94,230,2.366,231,3.625,694,3.543,829,4.313,847,2.488,848,3.625,1186,4.415,1512,4.898,1536,4.415,1537,4.415,1538,4.415,1539,5.1,1540,5.1]],["title/injectables/PushNotificationService.html",[347,0.768,829,2.102]],["body/injectables/PushNotificationService.html",[0,0.049,3,0.102,4,0.09,5,0.068,8,0.909,9,0.892,10,1.991,18,0.229,19,0.803,20,0.929,22,0.755,26,3.478,27,0.685,29,1.009,30,0.016,31,0.809,32,0.54,33,0.886,39,1.052,41,0.342,43,1.372,44,0.318,54,1.455,55,1.298,56,1.298,65,0.102,67,1.413,68,2.041,70,1.857,85,0.616,91,2.235,105,0.008,106,0.008,111,2.185,120,2.757,124,1.788,130,0.481,157,1.651,195,0.931,201,2.341,203,1.372,218,1.661,227,4.117,228,2.722,230,2.915,231,1.795,281,2.381,300,2.34,347,0.77,348,0.931,354,1.55,357,2.399,358,2.185,359,2.041,363,1.562,380,2.185,383,1.232,389,1.954,397,0.892,399,1.116,429,1.795,434,1.298,468,2.584,486,1.954,527,2.185,535,1.795,544,2.041,580,2.185,581,1.661,694,3.649,754,3.107,771,1.455,829,2.108,847,3.164,854,2.757,870,1.661,896,4.612,901,1.962,904,5.627,918,1.795,934,1.892,962,3.533,969,2.584,987,1.795,1015,3.357,1060,2.757,1089,2.185,1097,3.013,1151,1.795,1194,1.661,1198,3.486,1217,1.795,1225,1.962,1232,2.185,1246,2.185,1291,1.795,1430,3.013,1514,3.357,1515,3.357,1516,3.357,1517,4.135,1520,3.357,1521,4.586,1525,1.795,1526,2.185,1541,2.185,1542,5.298,1543,3.878,1544,4.722,1545,5.298,1546,2.525,1547,2.525,1548,2.525,1549,2.525,1550,2.757,1551,3.013,1552,3.878,1553,2.525,1554,5.717,1555,2.381,1556,3.878,1557,3.878,1558,3.013,1559,2.525,1560,2.525,1561,2.525,1562,2.525,1563,3.878,1564,2.525,1565,2.185,1566,2.525,1567,2.525,1568,5.298,1569,2.525,1570,2.525,1571,2.185,1572,2.525,1573,3.878,1574,2.525,1575,2.525,1576,2.525,1577,3.357,1578,2.525,1579,2.525,1580,2.525,1581,3.878,1582,3.878,1583,3.878,1584,3.878,1585,2.525,1586,3.878,1587,3.878,1588,4.722,1589,2.525,1590,2.525,1591,3.878,1592,2.525,1593,3.878,1594,2.525,1595,4.722,1596,2.525,1597,2.525,1598,2.525,1599,2.525,1600,2.525]],["title/classes/PushTokenDto.html",[0,0.074,1517,2.545]],["body/classes/PushTokenDto.html",[0,0.102,2,1.87,3,0.213,4,0.189,5,0.142,18,0.479,20,1.01,27,0.777,30,0.016,32,0.66,41,0.262,65,0.213,105,0.013,106,0.013,130,1.234,300,2.537,356,1.939,389,2.584,493,4.581,694,3.332,847,3.417,962,3.654,1517,4.265,1525,4.98,1550,5.19,1601,4.581,1602,5.293,1603,5.293,1604,6.481,1605,5.61]],["title/entities/PushTokenEntity.html",[228,2.229,352,1.631]],["body/entities/PushTokenEntity.html",[0,0.07,3,0.147,4,0.13,5,0.098,8,0.854,9,2.43,18,0.33,20,1,27,0.757,30,0.016,31,0.965,32,0.643,41,0.289,65,0.147,105,0.01,106,0.01,115,2.433,117,3.607,130,0.966,228,2.925,230,3.08,281,3.116,300,1.978,352,2.462,353,2.1,356,1.518,383,3.081,384,4.907,389,2.449,390,3.943,391,3.339,393,3.586,397,1.287,399,1.61,468,2.476,478,3.736,520,1.98,530,4.524,666,5.466,676,5.342,694,3.535,767,3.366,804,3.943,847,3.239,870,3.339,896,3.339,904,3.943,941,3.943,962,3.565,969,3.081,1060,3.607,1194,3.339,1196,3.943,1197,4.392,1198,3.339,1484,4.392,1485,4.392,1550,4.489,1551,3.943,1565,5.054,1606,3.154,1607,5.075,1608,4.392,1609,5.075,1610,5.075,1611,5.075,1612,4.392,1613,5.075,1614,5.839,1615,3.643,1616,3.643,1617,5.054,1618,3.643,1619,3.643,1620,6.315,1621,5.951,1622,4.392,1623,5.075,1624,5.075,1625,5.075,1626,5.075,1627,5.075,1628,3.643]],["title/classes/RequiredParameterPipe.html",[0,0.074,995,2.75]],["body/classes/RequiredParameterPipe.html",[0,0.097,2,1.782,3,0.203,4,0.18,5,0.135,8,1.182,15,3.234,18,0.457,19,1.303,20,0.908,27,0.604,29,0.96,30,0.016,31,0.77,32,0.514,33,0.843,39,1.002,41,0.25,44,0.636,65,0.203,85,1.231,105,0.012,106,0.012,130,1.407,156,2.339,157,1.572,376,1.943,425,3.097,458,4.139,566,2.46,673,3.318,759,4.888,766,2.892,995,4.472,996,4.888,1023,4.888,1170,4.888,1172,5.327,1173,4.472,1174,4.888,1629,4.365,1630,6.856,1631,5.327,1632,6.213,1633,5.043,1634,5.043,1635,5.043]],["title/modules/SentryModule.html",[160,0.984,180,2.229]],["body/modules/SentryModule.html",[0,0.104,3,0.218,4,0.194,5,0.146,25,4.112,30,0.016,41,0.326,44,0.683,65,0.218,105,0.013,106,0.013,160,1.8,162,2.089,163,2.089,164,2.286,165,2.286,166,2.089,167,2.985,168,2.985,180,4.471,186,2.773,187,2.286,188,2.089,1636,4.692,1637,4.692,1638,4.692,1639,5.42,1640,5.42]],["title/injectables/SentryService.html",[25,1.989,347,0.768]],["body/injectables/SentryService.html",[0,0.095,3,0.199,4,0.177,5,0.133,10,2.865,18,0.448,19,1.287,20,0.9,22,1.859,25,3.194,26,4.32,27,0.744,29,1.183,30,0.016,31,0.949,32,0.633,33,1.039,38,3.514,39,0.982,40,4.416,41,0.337,43,2.686,44,0.623,54,2.849,55,2.542,56,2.542,65,0.199,67,1.479,68,1.905,69,3.514,91,3.581,105,0.012,106,0.012,130,1.427,347,1.234,348,1.823,839,4.278,918,5.22,1217,3.514,1641,4.278,1642,6.212,1643,4.943,1644,6.212,1645,4.943,1646,4.278,1647,4.278,1648,6.212,1649,4.943,1650,4.943,1651,4.943]],["title/classes/StringToNumberPipe.html",[0,0.074,501,2.545]],["body/classes/StringToNumberPipe.html",[0,0.098,2,1.806,3,0.206,4,0.183,5,0.137,8,1.198,15,3.262,18,0.463,19,1.314,20,0.914,27,0.612,29,0.973,30,0.016,31,0.781,32,0.521,33,0.855,39,1.015,41,0.253,44,0.644,65,0.206,70,1.661,78,2.219,85,1.549,105,0.013,106,0.013,130,1.412,501,4.174,502,4.509,673,4.539,766,2.059,1170,4.929,1172,5.36,1173,4.509,1174,4.929,1631,5.36,1632,6.243,1652,4.425,1653,6.344,1654,5.112,1655,6.344,1656,5.112,1657,5.112]],["title/controllers/TagController.html",[107,1.631,1658,2.75]],["body/controllers/TagController.html",[0,0.061,3,0.128,4,0.113,5,0.085,8,1.476,18,0.287,19,0.952,20,0.975,27,0.711,29,1.129,30,0.016,31,0.906,32,0.604,33,0.992,39,1.346,41,0.344,44,0.4,65,0.128,66,1.546,67,0.948,85,1.448,105,0.009,106,0.009,107,1.337,109,1.337,111,2.293,115,2.285,116,3.642,124,1.913,135,3.867,136,1.827,140,3.642,157,2.163,215,1.827,216,1.827,281,2.823,300,2.133,359,1.221,362,1.433,389,2.188,399,1.401,409,2.086,421,3.223,424,2.751,460,4.334,461,2.363,478,2.498,483,2.65,484,2.463,485,2.253,486,1.995,487,3.268,488,3.979,492,2.463,505,3.268,507,2.086,515,2.086,516,2.744,521,2.463,522,2.463,523,1.947,524,1.947,525,2.086,529,2.253,530,2.086,553,2.463,565,2.363,571,2.253,582,3.867,586,1.723,588,2.498,614,3.693,934,3.385,1002,3.979,1007,2.086,1019,3.559,1286,2.086,1555,2.823,1658,3.268,1659,2.744,1660,3.268,1661,3.572,1662,3.572,1663,3.572,1664,2.463,1665,3.17,1666,3.17,1667,3.17,1668,4.202,1669,3.17,1670,3.17,1671,3.17,1672,2.463,1673,3.17,1674,3.17,1675,3.17,1676,3.17,1677,3.17,1678,3.17,1679,3.117,1680,2.253,1681,3.17,1682,3.17,1683,3.17,1684,3.17,1685,3.17,1686,3.17,1687,3.17,1688,3.17,1689,3.17,1690,3.17]],["title/classes/TagDto.html",[0,0.074,614,1.989]],["body/classes/TagDto.html",[0,0.106,2,1.46,3,0.166,4,0.148,5,0.111,18,0.374,20,1.021,22,1.237,27,0.831,29,0.787,30,0.016,31,0.952,32,0.707,33,0.691,41,0.33,62,2.382,65,0.166,78,1.655,105,0.011,106,0.011,115,2.565,120,4.431,130,1.36,212,3.011,288,2.228,293,2.72,300,2.351,356,1.655,362,1.943,363,2.511,378,2.938,389,2.299,399,1.827,460,4.028,614,2.844,627,3.577,633,3.577,701,5.762,714,2.72,813,4,845,2.538,969,2.698,1008,3.64,1253,4.787,1475,2.72,1691,3.577,1692,5.531,1693,5.531,1694,6.234,1695,4.133,1696,5.531,1697,4.133,1698,4.787,1699,4.133,1700,4.133,1701,5.392,1702,5.531,1703,6.234,1704,4.133,1705,4.133,1706,4.133,1707,4.133,1708,4.133,1709,4.133]],["title/entities/TagEntity.html",[212,1.631,352,1.631]],["body/entities/TagEntity.html",[0,0.085,3,0.178,4,0.158,5,0.119,9,1.561,18,0.4,20,1.045,27,0.85,30,0.016,32,0.722,33,0.966,41,0.339,62,2.546,65,0.178,78,1.729,105,0.011,106,0.011,115,2.733,130,1.301,199,3.514,212,2.437,286,4.109,300,2.182,352,1.863,353,2.546,356,1.729,362,2.268,363,2.596,389,2.616,391,3.804,393,3.956,397,1.561,399,1.952,410,3.713,669,3.824,681,5.003,813,3.713,1617,5.003,1701,5.006,1710,3.824,1711,5.78,1712,5.78,1713,4.418,1714,6.834,1715,4.418,1716,4.418,1717,4.418,1718,4.418,1719,4.418,1720,4.418,1721,4.418,1722,4.418,1723,4.418,1724,5.78,1725,4.418,1726,4.418]],["title/modules/TagGQLModule.html",[160,0.984,181,2.545]],["body/modules/TagGQLModule.html",[0,0.102,3,0.214,4,0.19,5,0.143,30,0.016,41,0.372,44,0.67,65,0.214,105,0.013,106,0.013,160,1.785,162,2.049,163,2.049,164,2.242,165,2.242,166,2.049,167,2.96,168,2.242,181,5.021,186,2.741,187,2.242,188,2.049,190,2.594,194,2.89,195,1.961,212,2.242,845,3.265,1680,3.78,1727,4.603,1728,4.603,1729,4.686,1730,5.318,1731,5.318,1732,4.62,1733,5.318,1734,4.603]],["title/injectables/TagGQLService.html",[347,0.768,1729,2.375]],["body/injectables/TagGQLService.html",[0,0.06,3,0.126,4,0.111,5,0.084,8,0.732,9,1.103,18,0.283,19,0.942,20,0.972,22,1.36,27,0.75,29,1.192,30,0.016,31,0.956,32,0.637,33,1.046,39,1.339,41,0.334,44,0.394,65,0.126,67,0.934,68,1.203,70,1.477,85,1.309,105,0.009,106,0.009,111,2.286,124,1.905,156,2.109,157,2.154,195,1.151,212,2.483,281,2.791,300,2.34,347,0.903,348,1.151,362,2.036,363,1.258,376,1.751,389,2.172,397,1.103,399,1.38,421,2.47,424,2.109,460,4.257,461,2.337,478,2.47,483,2.62,486,1.977,520,1.696,544,2.517,565,2.337,582,3.616,586,2.47,588,2.47,614,3.68,754,3.2,766,1.258,767,3.09,771,1.799,813,3.09,824,2.425,831,3.532,845,1.917,851,2.425,934,2.615,1007,2.991,1019,2.991,1286,2.054,1555,2.791,1660,3.231,1661,3.532,1662,3.532,1663,3.532,1664,3.532,1668,4.575,1672,3.532,1729,2.791,1735,2.702,1736,3.122,1737,3.122,1738,4.546,1739,3.122,1740,3.122,1741,3.934,1742,3.122,1743,2.702,1744,5.097,1745,5.097,1746,2.702,1747,3.934,1748,2.702,1749,3.934,1750,3.934,1751,2.702,1752,2.702,1753,2.702,1754,2.702,1755,2.702,1756,2.702,1757,2.702,1758,2.702,1759,2.702]],["title/modules/TagModule.html",[160,0.984,182,2.545]],["body/modules/TagModule.html",[0,0.102,3,0.213,4,0.189,5,0.142,30,0.016,41,0.371,44,0.667,65,0.213,105,0.013,106,0.013,109,2.733,160,1.781,162,2.039,163,2.039,164,2.232,165,2.232,166,2.039,167,2.954,168,2.232,182,5.016,186,2.733,187,2.232,188,2.039,190,2.582,194,2.876,195,1.952,212,2.232,1658,4.98,1679,4.393,1680,3.762,1734,4.581,1760,4.581,1761,4.581,1762,5.293,1763,5.293,1764,5.293]],["title/classes/TagResolver.html",[0,0.074,1732,2.75]],["body/classes/TagResolver.html",[0,0.09,2,1.659,3,0.189,4,0.168,5,0.126,18,0.425,19,1.245,20,0.98,22,1.405,27,0.795,29,1.145,30,0.016,31,0.918,32,0.612,33,1.005,39,1.194,41,0.347,62,2.706,65,0.189,66,2.29,67,1.405,85,1.468,105,0.012,106,0.012,111,2.306,115,2.317,124,1.929,212,3.049,489,4.274,544,2.317,614,3.803,845,2.883,1286,3.089,1571,4.064,1660,4.274,1679,3.466,1680,3.337,1729,4.295,1732,4.274,1765,4.064,1766,6.994,1767,4.695,1768,4.695,1769,4.695,1770,4.695,1771,4.695,1772,4.695,1773,4.695,1774,5.204,1775,4.695,1776,4.695,1777,4.695,1778,4.695,1779,4.695]],["title/injectables/TagService.html",[347,0.768,1679,2.229]],["body/injectables/TagService.html",[0,0.056,3,0.118,4,0.105,5,0.079,8,0.688,9,1.037,18,0.266,19,0.9,20,0.96,22,1.299,27,0.731,29,1.162,30,0.016,31,0.932,32,0.622,33,1.02,39,1.313,41,0.35,43,1.594,44,0.37,65,0.118,67,0.878,68,1.674,70,1.68,85,1.263,105,0.009,106,0.009,111,2.258,124,1.872,156,2.015,157,2.199,195,1.082,212,2.573,215,1.691,216,2.503,281,2.667,300,2.3,347,0.863,348,1.082,362,1.992,363,1.182,376,1.674,389,2.108,397,1.037,399,1.297,421,2.36,424,2.831,460,4.229,461,2.233,478,2.36,483,2.503,486,1.907,520,1.594,523,1.802,524,1.802,525,1.931,526,4.7,544,2.462,565,2.233,582,3.51,586,2.36,588,2.36,614,3.627,754,3.106,766,1.182,767,2.981,771,1.691,813,2.981,824,2.28,826,4.476,831,3.375,845,1.802,850,2.54,851,2.28,853,2.54,893,3.759,934,2.523,1007,2.858,1019,2.858,1286,1.931,1555,2.667,1660,3.087,1661,3.375,1662,3.375,1663,3.375,1664,3.375,1668,4.018,1672,3.375,1679,2.503,1741,3.759,1743,2.54,1744,4.476,1745,4.476,1746,2.54,1747,2.54,1748,2.54,1749,3.759,1750,3.759,1751,2.54,1752,2.54,1753,2.54,1754,2.54,1755,2.54,1756,2.54,1757,2.54,1758,3.759,1759,2.54,1780,2.54,1781,2.934,1782,2.934,1783,4.343,1784,2.934,1785,2.934,1786,2.934,1787,2.934,1788,4.343,1789,2.934,1790,2.934,1791,2.934,1792,2.934]],["title/interfaces/UploadedFileDto.html",[419,2.75,1425,2.229]],["body/interfaces/UploadedFileDto.html",[3,0.166,4,0.147,5,0.212,8,0.965,18,0.373,30,0.016,31,1.09,32,0.789,65,0.166,78,1.862,105,0.011,106,0.011,130,1.517,138,4.374,356,1.651,419,3.922,421,2.238,442,3.2,513,3.2,543,5.331,569,5.543,570,4.776,622,4.287,697,3.2,941,4.287,1237,4.725,1355,5.753,1368,6.175,1369,6.175,1425,3.18,1426,2.927,1701,4.287,1793,3.564,1794,6.223,1795,4.118,1796,7.134,1797,6.647,1798,6.647,1799,5.518,1800,5.518,1801,5.518,1802,5.518,1803,5.518,1804,5.518,1805,5.518,1806,5.518,1807,5.518]],["title/entities/UserEntity.html",[241,2.229,352,1.631]],["body/entities/UserEntity.html",[0,0.077,3,0.16,4,0.142,5,0.107,9,1.406,18,0.36,20,1.044,27,0.846,30,0.016,31,1.001,32,0.719,33,0.901,41,0.197,65,0.16,78,1.613,105,0.011,106,0.011,115,2.721,130,1.345,241,3.108,288,2.845,308,3.562,352,1.678,353,2.294,356,1.613,362,1.906,376,2.526,377,4.667,378,4.659,379,4.667,383,3.198,387,4.751,393,4.025,397,1.406,464,3.108,597,2.837,651,3.444,936,5.674,960,5.488,962,3.198,968,4.751,969,2.63,972,3.525,974,3.525,1008,2.618,1080,4.667,1120,3.092,1469,3.548,1505,4.667,1507,4.667,1550,4.659,1555,3.311,1608,4.667,1621,4.667,1808,3.444,1809,6.115,1810,3.979,1811,5.392,1812,3.979,1813,3.979,1814,3.979,1815,3.979,1816,4.667,1817,3.979,1818,5.392,1819,4.667,1820,5.392,1821,3.979,1822,3.979,1823,3.979]],["title/coverage.html",[1824,4.578]],["body/coverage.html",[0,0.146,1,2.13,5,0.08,6,2.594,7,3.428,25,1.541,30,0.016,32,0.305,57,1.972,58,2.328,105,0.009,106,0.009,107,2.715,108,2.13,110,2.594,133,1.84,157,0.934,166,1.155,183,1.972,184,1.972,185,1.972,189,2.328,196,2.328,199,1.541,201,1.95,204,2.328,208,2.13,212,1.86,228,1.727,230,2.429,241,1.727,250,2.13,269,2.328,322,1.727,345,1.972,347,1.483,349,3.428,352,2.596,354,2.709,355,3.818,357,1.059,407,2.13,408,2.594,419,2.13,420,1.972,477,1.541,496,1.84,498,1.972,499,2.13,501,1.972,502,2.13,508,2.13,511,1.727,513,2.328,515,1.972,519,2.13,596,2.594,614,1.541,646,2.594,696,2.594,715,2.13,716,3.136,717,2.594,734,1.84,749,2.594,767,1.727,768,2.13,806,6.222,822,2.594,827,1.84,828,1.84,829,1.628,847,2.817,951,2.13,952,2.594,979,2.13,993,1.727,995,2.13,996,2.328,998,2.709,1041,2.594,1088,2.328,1134,2.13,1135,2.328,1136,2.328,1137,2.594,1151,5.529,1155,2.594,1169,2.594,1181,1.972,1182,2.328,1187,2.594,1201,2.594,1215,2.594,1248,2.594,1262,2.594,1284,5.003,1335,2.594,1352,2.594,1370,2.328,1417,2.594,1425,3.018,1427,2.594,1428,2.594,1432,2.594,1444,2.594,1457,2.328,1458,2.594,1459,3.722,1469,1.972,1502,2.328,1503,2.594,1509,2.328,1510,2.594,1512,2.13,1513,2.594,1517,1.972,1525,2.13,1541,2.594,1601,2.594,1606,2.594,1629,2.594,1641,2.594,1652,2.594,1658,2.13,1659,2.594,1679,1.727,1691,2.594,1710,3.818,1729,1.84,1732,2.13,1735,2.594,1765,2.594,1780,2.594,1793,2.594,1808,2.594,1824,2.594,1825,2.997,1826,2.997,1827,6.972,1828,6.156,1829,7.468,1830,5.236,1831,2.594,1832,2.594,1833,2.594,1834,5.236,1835,4.412,1836,2.594,1837,3.818,1838,2.594,1839,5.328,1840,2.997,1841,2.997,1842,2.997,1843,2.997,1844,2.997,1845,2.997,1846,4.412,1847,4.412,1848,2.997,1849,2.997,1850,2.997,1851,2.997,1852,4.412,1853,4.412,1854,2.997,1855,2.997,1856,6.438,1857,6.438,1858,5.775,1859,2.997,1860,5.775,1861,3.428,1862,2.997,1863,2.997,1864,2.997,1865,6.156,1866,2.997,1867,2.997,1868,2.997]],["title/dependencies.html",[163,1.793,1869,2.792]],["body/dependencies.html",[0,0.108,5,0.114,13,3.699,30,0.016,44,0.534,47,2.6,49,3.29,55,2.177,56,3.244,62,2.441,64,3.01,88,4.152,105,0.011,106,0.011,122,2.786,136,2.441,163,1.632,193,3.665,195,1.562,215,2.441,216,3.24,218,3.699,221,3.29,223,3.665,227,3.29,233,3.29,235,2.301,237,3.01,246,3.665,320,3.24,397,1.496,489,3.01,517,2.786,526,3.01,714,2.786,962,2.066,987,3.01,1055,3.665,1090,3.665,1165,4.778,1196,3.29,1290,3.665,1382,3.665,1384,3.665,1453,4.865,1558,3.29,1631,3.29,1647,3.665,1870,4.234,1871,4.234,1872,4.234,1873,5.621,1874,4.234,1875,4.234,1876,7.191,1877,4.234,1878,4.234,1879,4.234,1880,4.234,1881,4.234,1882,4.234,1883,4.234,1884,4.234,1885,4.234,1886,4.234,1887,6.31,1888,4.234,1889,4.234,1890,4.234,1891,4.234,1892,4.234,1893,4.234,1894,4.234,1895,4.234,1896,4.234,1897,4.234,1898,4.234,1899,4.234,1900,4.234,1901,4.234,1902,4.234,1903,4.234,1904,4.234,1905,4.234,1906,4.234,1907,4.234,1908,4.234,1909,4.234,1910,4.234,1911,4.234,1912,4.234,1913,4.234,1914,4.234,1915,4.234,1916,4.234,1917,3.665,1918,4.234,1919,4.234,1920,4.234,1921,4.234,1922,4.234,1923,4.234,1924,4.234,1925,4.234,1926,4.234,1927,4.234,1928,4.234]],["title/miscellaneous/enumerations.html",[1929,1.981,1930,4.029]],["body/miscellaneous/enumerations.html",[18,0.505,30,0.016,105,0.013,106,0.013,293,4.405,389,2.469,410,3.858,418,3.858,424,3.105,523,4.11,524,3.428,624,4.758,679,3.428,719,4.758,766,3.144,1475,4.405,1476,5.794,1929,3.428,1930,4.832,1931,5.582,1932,6.694,1933,5.582,1934,6.694,1935,5.582,1936,5.582]],["title/miscellaneous/functions.html",[1929,1.981,1937,4.029]],["body/miscellaneous/functions.html",[18,0.555,30,0.015,39,1.218,105,0.014,106,0.014,124,1.691,166,2.873,1861,4.764,1929,3.765,1937,5.307,1938,5.307]],["title/index.html",[18,0.292,159,2.293,1939,2.792]],["body/index.html",[4,0.129,5,0.193,10,1.519,15,1.852,30,0.01,38,2.561,41,0.179,88,2.371,93,3.912,105,0.01,106,0.01,117,3.579,121,2.799,122,2.371,125,5.969,147,3.912,159,2.561,218,3.819,267,3.118,269,4.51,282,5.024,297,2.799,320,2.076,343,3.118,397,1.273,421,3.154,429,3.579,436,2.799,461,1.852,468,2.456,472,2.799,489,2.561,530,4.135,588,3.822,609,4.135,694,1.852,754,2.736,834,3.118,870,3.819,918,4.126,953,3.118,987,2.561,1023,4.51,1097,5.464,1156,3.118,1158,3.118,1184,2.799,1194,2.371,1198,2.371,1222,3.118,1254,3.118,1367,3.118,1430,2.799,1475,4.627,1551,4.51,1555,2.212,1558,3.912,1577,3.118,1605,3.118,1612,3.118,1622,3.118,1646,3.118,1698,3.118,1774,3.118,1819,3.118,1939,3.118,1940,3.603,1941,5.804,1942,3.603,1943,5.035,1944,3.603,1945,3.603,1946,3.603,1947,6.284,1948,3.603,1949,3.118,1950,3.603,1951,5.804,1952,6.284,1953,5.035,1954,3.603,1955,5.035,1956,3.603,1957,3.603,1958,3.603,1959,5.024,1960,3.603,1961,3.603,1962,3.603,1963,3.603,1964,3.603,1965,3.603,1966,3.603,1967,3.603,1968,3.603,1969,3.603,1970,3.603,1971,3.603,1972,3.603,1973,3.603,1974,3.603,1975,3.603,1976,4.358,1977,4.358,1978,5.035,1979,3.603,1980,3.603,1981,6.612,1982,3.603,1983,6.284,1984,6.612,1985,3.603,1986,3.603,1987,3.603,1988,5.804,1989,5.804,1990,3.603,1991,5.804,1992,5.035,1993,3.603,1994,3.603,1995,3.603,1996,3.603,1997,3.603,1998,3.603,1999,3.603,2000,3.603,2001,3.603,2002,3.603,2003,3.603,2004,3.603,2005,3.603,2006,3.603,2007,5.035,2008,3.603,2009,3.603,2010,3.603,2011,3.603,2012,5.035,2013,5.804,2014,3.603,2015,3.603,2016,3.603,2017,3.603,2018,3.912,2019,3.603,2020,3.603,2021,3.603,2022,3.603,2023,3.603,2024,3.603,2025,3.603,2026,3.603,2027,3.603,2028,3.603,2029,5.035,2030,3.603,2031,3.603,2032,3.603,2033,3.603,2034,3.603]],["title/modules.html",[162,2.038]],["body/modules.html",[30,0.013,105,0.013,106,0.013,161,3.835,162,2.078,172,3.55,173,3.55,174,3.55,175,3.55,176,3.312,177,3.312,178,3.312,179,2.931,180,3.109,181,3.55,182,3.55,1949,6.918,2035,7.992,2036,7.992,2037,7.992]],["title/overview.html",[2038,4.578]],["body/overview.html",[2,1.247,25,3.595,30,0.016,105,0.01,106,0.01,109,1.488,133,3.525,160,0.897,161,5.698,162,1.36,163,1.36,164,1.488,165,1.488,166,1.36,167,1.488,168,1.488,169,3.054,170,3.054,171,3.054,172,4.976,173,4.318,174,4.478,175,4.6,176,4.564,177,4.293,178,4.455,179,3.943,180,4.114,181,4.318,182,4.318,183,3.777,184,3.777,185,3.777,186,2.093,187,1.488,188,1.36,348,1.302,353,2.034,455,3.054,496,3.525,511,4.03,687,3.054,689,3.054,734,3.525,744,3.054,745,3.054,827,4.293,828,4.293,829,3.799,993,4.03,1034,3.054,1035,3.054,1036,3.054,1178,3.054,1180,3.054,1181,3.777,1208,3.054,1210,3.054,1211,3.054,1257,3.054,1258,3.054,1259,3.054,1323,3.054,1329,3.054,1330,3.054,1332,3.054,1426,2.508,1536,3.054,1537,3.054,1538,3.054,1636,3.054,1637,3.054,1638,3.054,1679,3.308,1727,3.054,1728,3.054,1729,3.525,1760,3.054,1761,3.054,2038,3.054,2039,3.529,2040,3.529,2041,3.054,2042,3.529]],["title/properties.html",[356,1.393,1869,2.792]],["body/properties.html",[8,1.418,30,0.015,105,0.014,106,0.014,121,4.699,125,4.699,128,4.699,356,1.81,1475,3.98,1917,5.235,2043,6.048,2044,6.048,2045,6.048,2046,6.048,2047,6.048]],["title/miscellaneous/variables.html",[1929,1.981,2018,3.617]],["body/miscellaneous/variables.html",[9,2.631,10,2.107,18,0.323,30,0.016,32,0.75,35,2.532,78,1.726,85,1.409,105,0.01,106,0.01,130,0.951,157,1.949,189,2.768,196,3.882,204,3.882,288,2.824,304,3.084,308,3.135,313,4.994,345,3.287,346,3.084,349,2.768,351,4.324,353,2.053,389,1.314,468,1.738,519,3.551,547,4.324,620,4.994,766,3,767,2.879,768,3.551,870,2.344,899,3.084,972,2.053,974,2.053,1088,3.882,1237,3.551,1284,2.768,1315,4.324,1317,4.324,1370,3.882,1816,3.084,1831,3.084,1832,4.324,1833,4.324,1836,3.084,1837,5.413,1838,3.084,1839,3.084,1861,2.768,1929,2.188,1938,3.084,1959,3.084,1976,3.084,1977,3.084,2018,2.768,2041,3.084,2048,3.563,2049,3.563,2050,6.585,2051,3.563,2052,3.563,2053,3.563,2054,3.563,2055,3.563,2056,3.563,2057,3.563,2058,3.563,2059,3.563,2060,3.563,2061,3.563,2062,3.563,2063,3.563,2064,3.563,2065,3.563,2066,3.563,2067,3.563,2068,3.563,2069,3.563,2070,3.563,2071,3.563,2072,3.563,2073,4.996,2074,3.563,2075,3.563,2076,3.563,2077,4.996,2078,4.996,2079,4.996,2080,4.996,2081,4.996,2082,4.996,2083,4.996,2084,4.996,2085,4.996,2086,4.996,2087,4.996,2088,5.769,2089,4.996,2090,5.769,2091,5.769,2092,5.769,2093,5.769,2094,5.769,2095,5.769,2096,5.769,2097,5.769,2098,5.769,2099,3.563,2100,3.563]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"classes/CustomValidationPipe.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/ErrorResponse.html":{},"modules/ExcelModule.html":{},"injectables/ExcelService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"modules/SentryModule.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"modules/TagModule.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"interfaces/UploadedFileDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1151,"title":{},"body":{"classes/BadValidationRequestException.html":{},"classes/Migrations1691666064778.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":129,"title":{},"body":{"controllers/AppController.html":{}}}],["0.1.13",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["0.12.0",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["0.18.5",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["0.3.9",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["0.32.4",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1829,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":453,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"classes/Migrations1691261966905.html":{}}}],["1.0.0",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1917,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["1.0.35",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":1872,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArticleSearchService.html":{},"classes/Migrations1691261966905.html":{},"entities/TagEntity.html":{}}}],["10.0.0",{"_index":1876,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":1878,"title":{},"body":{"dependencies.html":{}}}],["10.2.6",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["1024",{"_index":2073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10m",{"_index":2084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["11.10.1",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1323,"title":{},"body":{"injectables/ExcelService.html":{},"overview.html":{}}}],["12.0.3",{"_index":1873,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":2041,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["16.6.0",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":2042,"title":{},"body":{"overview.html":{}}}],["1d",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["1s",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["2",{"_index":454,"title":{},"body":{"controllers/ArticleController.html":{}}}],["2.0.0",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1874,"title":{},"body":{"dependencies.html":{}}}],["2.29.4",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1283,"title":{},"body":{"injectables/ExcelService.html":{}}}],["25",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["252",{"_index":1573,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["255",{"_index":380,"title":{},"body":{"entities/ArticleContentEntity.html":{},"injectables/PushNotificationService.html":{}}}],["3",{"_index":455,"title":{},"body":{"controllers/ArticleController.html":{},"overview.html":{}}}],["3.0.0",{"_index":1877,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1879,"title":{},"body":{"dependencies.html":{}}}],["3.0.9",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["3.5.2",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":1816,"title":{},"body":{"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["33",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["3306",{"_index":2059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["360",{"_index":1399,"title":{},"body":{"injectables/FileService.html":{}}}],["360px",{"_index":1364,"title":{},"body":{"injectables/FileService.html":{}}}],["4.0.0",{"_index":1880,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["4.9.3",{"_index":1871,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":1451,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["5",{"_index":2040,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":1884,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["5.2.3",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1284,"title":{},"body":{"injectables/ExcelService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["53",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":2039,"title":{},"body":{"overview.html":{}}}],["6.9.4",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["7.1.4",{"_index":1881,"title":{},"body":{"dependencies.html":{}}}],["7.61.0",{"_index":1882,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["7/13",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["7d",{"_index":2086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["80",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":1892,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["_req",{"_index":1351,"title":{},"body":{"injectables/FileService.html":{}}}],["abstracthttpadapter",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["acceptfile",{"_index":1387,"title":{},"body":{"injectables/FileService.html":{}}}],["accepts",{"_index":430,"title":{},"body":{"controllers/ArticleController.html":{}}}],["access",{"_index":961,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["accesstoken",{"_index":1107,"title":{},"body":{"injectables/AuthService.html":{}}}],["according",{"_index":1202,"title":{},"body":{"classes/CustomValidationPipe.html":{}}}],["accounts",{"_index":1609,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["action",{"_index":1496,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["activated",{"_index":1100,"title":{},"body":{"injectables/AuthService.html":{}}}],["active",{"_index":597,"title":{},"body":{"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExcelService.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"entities/UserEntity.html":{}}}],["active.'})@useguards(undefined)@httpcode(200)@post('sign",{"_index":976,"title":{},"body":{"controllers/AuthController.html":{}}}],["activity",{"_index":463,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["activity.'})@apinotfoundresponse({description",{"_index":465,"title":{},"body":{"controllers/ArticleController.html":{}}}],["adapter",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["add",{"_index":1489,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["added",{"_index":1429,"title":{},"body":{"interfaces/JwtRequest.html":{}}}],["admin",{"_index":987,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PushNotificationService.html":{},"dependencies.html":{},"index.html":{}}}],["admin/lib/messaging/messaging",{"_index":1559,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["administration",{"_index":475,"title":{},"body":{"controllers/ArticleController.html":{}}}],["administrator",{"_index":97,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["administrators",{"_index":1443,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["allowed",{"_index":1349,"title":{},"body":{"injectables/FileService.html":{}}}],["allowedfiletypes",{"_index":1388,"title":{},"body":{"injectables/FileService.html":{}}}],["allowedfiletypes.includes(file.mimetype",{"_index":1391,"title":{},"body":{"injectables/FileService.html":{}}}],["already",{"_index":1019,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["android",{"_index":1577,"title":{},"body":{"injectables/PushNotificationService.html":{},"index.html":{}}}],["andwhere('(content.title",{"_index":794,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["andwhere('article.active",{"_index":792,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["andwhere('article.articletype",{"_index":793,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["another",{"_index":1820,"title":{},"body":{"entities/UserEntity.html":{}}}],["api",{"_index":429,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/PushNotificationService.html":{},"index.html":{}}}],["api/documentation",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["apibadrequestresponse",{"_index":1000,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibasicauth",{"_index":1524,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["apibearerauth",{"_index":1001,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconflictresponse",{"_index":1002,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TagController.html":{}}}],["apiforbiddenresponse",{"_index":1003,"title":{},"body":{"controllers/AuthController.html":{}}}],["apinotfoundresponse",{"_index":505,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/AuthController.html":{},"controllers/TagController.html":{}}}],["apioperation",{"_index":135,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/AuthController.html":{},"controllers/PushNotificationController.html":{},"controllers/TagController.html":{}}}],["apioperation({summary",{"_index":116,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/AuthController.html":{},"controllers/PushNotificationController.html":{},"controllers/TagController.html":{}}}],["apipayloadtoolargeresponse",{"_index":506,"title":{},"body":{"controllers/ArticleController.html":{}}}],["apitags",{"_index":507,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/AuthController.html":{},"controllers/PushNotificationController.html":{},"controllers/TagController.html":{}}}],["apitags('administration",{"_index":529,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/AuthController.html":{},"controllers/TagController.html":{}}}],["apitags('application",{"_index":1527,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["apiunauthorizedresponse",{"_index":1004,"title":{},"body":{"controllers/AuthController.html":{}}}],["apk",{"_index":1998,"title":{},"body":{"index.html":{}}}],["apollo/server",{"_index":1870,"title":{},"body":{"dependencies.html":{}}}],["apollodriver",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriverconfig",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":1097,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PushNotificationService.html":{},"index.html":{}}}],["app's",{"_index":1950,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":134,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_filter",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":108,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appdatasource",{"_index":1833,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":530,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"entities/PushTokenEntity.html":{},"controllers/TagController.html":{},"index.html":{}}}],["application/vnd.openxmlformats",{"_index":550,"title":{},"body":{"controllers/ArticleController.html":{}}}],["appmodule",{"_index":161,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":133,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":1571,"title":{},"body":{"injectables/PushNotificationService.html":{},"classes/TagResolver.html":{}}}],["argumentmetadata",{"_index":1632,"title":{},"body":{"classes/RequiredParameterPipe.html":{},"classes/StringToNumberPipe.html":{}}}],["argumentshost",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":711,"title":{},"body":{"classes/ArticleRequestDto.html":{},"injectables/ArticleService.html":{},"injectables/ExcelService.html":{}}}],["arrays",{"_index":1270,"title":{},"body":{"injectables/ExcelService.html":{}}}],["article",{"_index":357,"title":{},"body":{"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"classes/BadValidationRequestException.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"classes/Migrations1691261966905.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["article.'})@apinotfoundresponse({description",{"_index":422,"title":{},"body":{"controllers/ArticleController.html":{}}}],["article.article.articletype",{"_index":1576,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["article.articlecontentid",{"_index":1227,"title":{},"body":{"injectables/EmailService.html":{}}}],["article.articlecontents",{"_index":365,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["article.body",{"_index":1232,"title":{},"body":{"injectables/EmailService.html":{},"injectables/PushNotificationService.html":{}}}],["article.body.length",{"_index":1572,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["article.body.substring(0",{"_index":1574,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["article.childrenarticles",{"_index":663,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["article.controller",{"_index":691,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.coverimage",{"_index":1233,"title":{},"body":{"injectables/EmailService.html":{}}}],["article.entity",{"_index":398,"title":{},"body":{"entities/ArticleContentEntity.html":{},"modules/ArticleModule.html":{}}}],["article.id",{"_index":1575,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["article.language",{"_index":1296,"title":{},"body":{"injectables/ExcelService.html":{}}}],["article.parentarticle",{"_index":658,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["article.service",{"_index":497,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{}}}],["article.tags",{"_index":948,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.title",{"_index":1231,"title":{},"body":{"injectables/EmailService.html":{}}}],["article/article.entity",{"_index":1723,"title":{},"body":{"entities/TagEntity.html":{}}}],["article=${json.stringify(newarticledto",{"_index":856,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article\\`(\\`id",{"_index":1494,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["article__tag",{"_index":671,"title":{},"body":{"entities/ArticleEntity.html":{},"classes/Migrations1691261966905.html":{}}}],["article_content",{"_index":1479,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1692270732657.html":{}}}],["article_id",{"_index":370,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{},"classes/Migrations1691261966905.html":{}}}],["article_type",{"_index":656,"title":{},"body":{"entities/ArticleEntity.html":{},"classes/Migrations1691261966905.html":{}}}],["articleattributes",{"_index":1302,"title":{},"body":{"injectables/ExcelService.html":{}}}],["articleattributes.map((key",{"_index":1305,"title":{},"body":{"injectables/ExcelService.html":{}}}],["articlecontent",{"_index":433,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{}}}],["articlecontent.article",{"_index":654,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["articlecontent.article.active",{"_index":638,"title":{},"body":{"classes/ArticleDto.html":{}}}],["articlecontent.article.articletype",{"_index":632,"title":{},"body":{"classes/ArticleDto.html":{}}}],["articlecontent.article.parent",{"_index":640,"title":{},"body":{"classes/ArticleDto.html":{}}}],["articlecontent.article.tags",{"_index":911,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articlecontent.article.tags?.filter(tag",{"_index":644,"title":{},"body":{"classes/ArticleDto.html":{}}}],["articlecontent.body",{"_index":636,"title":{},"body":{"classes/ArticleDto.html":{}}}],["articlecontent.coverimage",{"_index":642,"title":{},"body":{"classes/ArticleDto.html":{}}}],["articlecontent.dateofpublication",{"_index":630,"title":{},"body":{"classes/ArticleDto.html":{}}}],["articlecontent.id",{"_index":626,"title":{},"body":{"classes/ArticleDto.html":{},"injectables/ArticleService.html":{}}}],["articlecontent.id)?.article.tags",{"_index":913,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articlecontent.language",{"_index":634,"title":{},"body":{"classes/ArticleDto.html":{}}}],["articlecontent.title",{"_index":628,"title":{},"body":{"classes/ArticleDto.html":{}}}],["articlecontententities",{"_index":800,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{}}}],["articlecontententities.foreach(articlecontent",{"_index":910,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articlecontententities.map(articlecontent",{"_index":815,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{}}}],["articlecontententity",{"_index":201,"title":{"entities/ArticleContentEntity.html":{}},"body":{"modules/AppModule.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["articlecontententity.body",{"_index":785,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["articlecontententity.name}.body",{"_index":810,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["articlecontententity.name}.title",{"_index":809,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["articlecontententity.title",{"_index":784,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["articlecontentid",{"_index":445,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"injectables/ArticleService.html":{},"injectables/ExcelService.html":{}}}],["articlecontentrepository",{"_index":756,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{}}}],["articlecontents",{"_index":647,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["articlecontroller",{"_index":407,"title":{"controllers/ArticleController.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"coverage.html":{}}}],["articledto",{"_index":477,"title":{"classes/ArticleDto.html":{}},"body":{"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"coverage.html":{}}}],["articledto(article",{"_index":950,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articledto(articlecontent",{"_index":798,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{}}}],["articledto(articlecontententity",{"_index":916,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articledto(newarticlecontententities[0",{"_index":903,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articledto(newarticlecontententity",{"_index":946,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articleentity",{"_index":199,"title":{"entities/ArticleEntity.html":{}},"body":{"modules/AppModule.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"entities/TagEntity.html":{},"coverage.html":{}}}],["articleid",{"_index":358,"title":{},"body":{"entities/ArticleContentEntity.html":{},"injectables/PushNotificationService.html":{}}}],["articlemodule",{"_index":172,"title":{"modules/ArticleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["articlerepository",{"_index":825,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articlerequestdto",{"_index":420,"title":{"classes/ArticleRequestDto.html":{}},"body":{"controllers/ArticleController.html":{},"classes/ArticleRequestDto.html":{},"injectables/ArticleService.html":{},"coverage.html":{}}}],["articles",{"_index":410,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/ExcelService.html":{},"entities/TagEntity.html":{},"miscellaneous/enumerations.html":{}}}],["articles.map((content",{"_index":1304,"title":{},"body":{"injectables/ExcelService.html":{}}}],["articles/search",{"_index":718,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["articlesearchcontroller",{"_index":715,"title":{"controllers/ArticleSearchController.html":{}},"body":{"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"coverage.html":{}}}],["articlesearchmodule",{"_index":173,"title":{"modules/ArticleSearchModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["articlesearchservice",{"_index":734,"title":{"injectables/ArticleSearchService.html":{}},"body":{"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"coverage.html":{},"overview.html":{}}}],["articleservice",{"_index":496,"title":{"injectables/ArticleService.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"coverage.html":{},"overview.html":{}}}],["articlestoaoa",{"_index":1265,"title":{},"body":{"injectables/ExcelService.html":{}}}],["articlestoaoa(articles",{"_index":1267,"title":{},"body":{"injectables/ExcelService.html":{}}}],["articleswithtags.find(tag",{"_index":912,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articletype",{"_index":434,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/ExcelService.html":{},"injectables/PushNotificationService.html":{}}}],["articletypeenum",{"_index":418,"title":{},"body":{"controllers/ArticleController.html":{},"entities/ArticleEntity.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"classes/CheckArticleTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["asc",{"_index":1752,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["assets",{"_index":146,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/EmailService.html":{}}}],["associated",{"_index":616,"title":{},"body":{"classes/ArticleDto.html":{}}}],["async",{"_index":111,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{}}}],["atd",{"_index":456,"title":{},"body":{"controllers/ArticleController.html":{}}}],["attachment",{"_index":152,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{}}}],["attachments",{"_index":1236,"title":{},"body":{"injectables/EmailService.html":{}}}],["attribute",{"_index":1139,"title":{},"body":{"classes/BadValidationRequestException.html":{}}}],["attributes",{"_index":1147,"title":{},"body":{"classes/BadValidationRequestException.html":{}}}],["auth",{"_index":953,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":1039,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":994,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["authcontroller",{"_index":951,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":1430,"title":{},"body":{"interfaces/JwtRequest.html":{},"injectables/PushNotificationService.html":{},"index.html":{}}}],["authguard",{"_index":518,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthController.html":{},"controllers/PushNotificationController.html":{}}}],["authguard('local",{"_index":1021,"title":{},"body":{"controllers/AuthController.html":{}}}],["authmodule",{"_index":174,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2045,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1158,"title":{},"body":{"injectables/BasicStrategy.html":{},"index.html":{}}}],["authservice",{"_index":993,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["auto_increment",{"_index":1474,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{}}}],["autocomplete",{"_index":732,"title":{},"body":{"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{}}}],["autocomplete.'})@apinotfoundresponse({description",{"_index":729,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["autoschemafile",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":1698,"title":{},"body":{"classes/TagDto.html":{},"index.html":{}}}],["await",{"_index":544,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"injectables/PushNotificationService.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{}}}],["backend",{"_index":125,"title":{},"body":{"controllers/AppController.html":{},"index.html":{},"properties.html":{}}}],["backend.git",{"_index":2011,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":566,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/FileService.html":{},"injectables/LocalStrategy.html":{},"classes/RequiredParameterPipe.html":{}}}],["badrequestexception('email",{"_index":1092,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["badrequestexception('missing",{"_index":816,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["badrequestexception('only",{"_index":1393,"title":{},"body":{"injectables/FileService.html":{}}}],["badrequestexception(`cannot",{"_index":868,"title":{},"body":{"injectables/ArticleService.html":{}}}],["badrequestexception(`missing",{"_index":891,"title":{},"body":{"injectables/ArticleService.html":{}}}],["badrequestexception(`required",{"_index":1634,"title":{},"body":{"classes/RequiredParameterPipe.html":{}}}],["badrequestexception(`unsupported",{"_index":1177,"title":{},"body":{"classes/CheckArticleTypePipe.html":{}}}],["badvalidationrequestexception",{"_index":1134,"title":{"classes/BadValidationRequestException.html":{}},"body":{"classes/BadValidationRequestException.html":{},"classes/CustomValidationPipe.html":{},"coverage.html":{}}}],["badvalidationrequestexception(errors",{"_index":1207,"title":{},"body":{"classes/CustomValidationPipe.html":{}}}],["basic",{"_index":1156,"title":{},"body":{"injectables/BasicStrategy.html":{},"index.html":{}}}],["basics",{"_index":1966,"title":{},"body":{"index.html":{}}}],["basicstrategy",{"_index":183,"title":{"injectables/BasicStrategy.html":{}},"body":{"modules/AppModule.html":{},"injectables/BasicStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["bcrypt",{"_index":1055,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare(plainpassword",{"_index":1133,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt",{"_index":1132,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(newpassword",{"_index":1131,"title":{},"body":{"injectables/AuthService.html":{}}}],["belongs",{"_index":373,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["best",{"_index":1238,"title":{},"body":{"injectables/EmailService.html":{}}}],["body",{"_index":359,"title":{},"body":{"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"classes/CustomValidationPipe.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"classes/Migrations1691261966905.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"controllers/TagController.html":{}}}],["body('active",{"_index":594,"title":{},"body":{"controllers/ArticleController.html":{}}}],["body('password",{"_index":1012,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('refreshtoken",{"_index":1031,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('userid",{"_index":1032,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('username",{"_index":1011,"title":{},"body":{"controllers/AuthController.html":{}}}],["body(customvalidationpipe",{"_index":576,"title":{},"body":{"controllers/ArticleController.html":{}}}],["body).catch((error",{"_index":584,"title":{},"body":{"controllers/ArticleController.html":{}}}],["body.'})@apinotfoundresponse({description",{"_index":723,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["body.coverimage",{"_index":578,"title":{},"body":{"controllers/ArticleController.html":{}}}],["boolean",{"_index":464,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"injectables/ArticleService.html":{},"injectables/FileService.html":{},"injectables/LocalStrategy.html":{},"entities/UserEntity.html":{}}}],["bootstrap",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"modules/AuthModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/ExcelModule.html":{},"modules/FileModule.html":{},"modules/PushNotificationModule.html":{},"modules/SentryModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":2037,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2035,"title":{},"body":{"modules.html":{}}}],["buckovsky",{"_index":2047,"title":{},"body":{"properties.html":{}}}],["buffer",{"_index":543,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"interfaces/UploadedFileDto.html":{}}}],["built",{"_index":1947,"title":{},"body":{"index.html":{}}}],["bytes",{"_index":570,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/UploadedFileDto.html":{}}}],["cache",{"_index":526,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/TagService.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":850,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/TagService.html":{}}}],["cacheinterceptor",{"_index":521,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/TagController.html":{}}}],["cachekey",{"_index":522,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/TagController.html":{}}}],["cachekey(cachekeyenum.articles",{"_index":554,"title":{},"body":{"controllers/ArticleController.html":{}}}],["cachekey(cachekeyenum.search",{"_index":736,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["cachekey(cachekeyenum.tags",{"_index":1681,"title":{},"body":{"controllers/TagController.html":{}}}],["cachekeyenum",{"_index":523,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"miscellaneous/enumerations.html":{}}}],["cachemanager",{"_index":826,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/TagService.html":{}}}],["cachemodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["can't",{"_index":1450,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["capture",{"_index":1649,"title":{},"body":{"injectables/SentryService.html":{}}}],["captureexception",{"_index":1642,"title":{},"body":{"injectables/SentryService.html":{}}}],["captureexception(message",{"_index":1644,"title":{},"body":{"injectables/SentryService.html":{}}}],["cascade",{"_index":366,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{},"classes/Migrations1691261966905.html":{}}}],["case",{"_index":807,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["catch",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch((error",{"_index":1598,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["catch(e",{"_index":865,"title":{},"body":{"injectables/ArticleService.html":{}}}],["catch(exception",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":1420,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catching",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["cb",{"_index":1345,"title":{},"body":{"injectables/FileService.html":{}}}],["cb(new",{"_index":1392,"title":{},"body":{"injectables/FileService.html":{}}}],["cb(null",{"_index":1371,"title":{},"body":{"injectables/FileService.html":{}}}],["celldates",{"_index":1313,"title":{},"body":{"injectables/ExcelService.html":{}}}],["cellstyles",{"_index":1312,"title":{},"body":{"injectables/ExcelService.html":{}}}],["change",{"_index":1511,"title":{},"body":{"classes/Migrations1692270732657.html":{}}}],["changed",{"_index":1627,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["characters",{"_index":1570,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["charset",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkandsendpushnotificationscronjob",{"_index":1188,"title":{},"body":{"injectables/CronJobService.html":{}}}],["checkarticletypepipe",{"_index":498,"title":{"classes/CheckArticleTypePipe.html":{}},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"classes/CheckArticleTypePipe.html":{},"coverage.html":{}}}],["checked",{"_index":1020,"title":{},"body":{"controllers/AuthController.html":{}}}],["checking",{"_index":759,"title":{},"body":{"injectables/ArticleSearchService.html":{},"classes/CheckArticleTypePipe.html":{},"classes/RequiredParameterPipe.html":{}}}],["checks",{"_index":1140,"title":{},"body":{"classes/BadValidationRequestException.html":{}}}],["checksearchpattern",{"_index":750,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["checksearchpattern(pattern",{"_index":757,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["childrenarticles",{"_index":648,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["cid",{"_index":1244,"title":{},"body":{"injectables/EmailService.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/ArticleDto.html":{},"classes/ArticleRequestDto.html":{},"classes/BadValidationRequestException.html":{},"classes/CheckArticleTypePipe.html":{},"classes/CustomValidationPipe.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"classes/PushTokenDto.html":{},"classes/RequiredParameterPipe.html":{},"classes/StringToNumberPipe.html":{},"classes/TagDto.html":{},"classes/TagResolver.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"classes/CustomValidationPipe.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/ErrorResponse.html":{},"modules/ExcelModule.html":{},"injectables/ExcelService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"modules/SentryModule.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"modules/TagModule.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArticleDto.html":{},"classes/ArticleRequestDto.html":{},"classes/BadValidationRequestException.html":{},"classes/CheckArticleTypePipe.html":{},"classes/CustomValidationPipe.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"classes/PushTokenDto.html":{},"classes/RequiredParameterPipe.html":{},"classes/StringToNumberPipe.html":{},"classes/TagDto.html":{},"classes/TagResolver.html":{},"overview.html":{}}}],["clickaction",{"_index":1581,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["clone",{"_index":2007,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1969,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlemodule",{"_index":687,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_imports",{"_index":688,"title":{},"body":{"modules/ArticleModule.html":{}}}],["cluster_articlemodule_providers",{"_index":689,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlesearchmodule",{"_index":744,"title":{},"body":{"modules/ArticleSearchModule.html":{},"overview.html":{}}}],["cluster_articlesearchmodule_providers",{"_index":745,"title":{},"body":{"modules/ArticleSearchModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":1034,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":1035,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":1036,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cronjobmodule",{"_index":1178,"title":{},"body":{"modules/CronJobModule.html":{},"overview.html":{}}}],["cluster_cronjobmodule_imports",{"_index":1179,"title":{},"body":{"modules/CronJobModule.html":{}}}],["cluster_cronjobmodule_providers",{"_index":1180,"title":{},"body":{"modules/CronJobModule.html":{},"overview.html":{}}}],["cluster_emailmodule",{"_index":1208,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_exports",{"_index":1211,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_imports",{"_index":1209,"title":{},"body":{"modules/EmailModule.html":{}}}],["cluster_emailmodule_providers",{"_index":1210,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_excelmodule",{"_index":1257,"title":{},"body":{"modules/ExcelModule.html":{},"overview.html":{}}}],["cluster_excelmodule_exports",{"_index":1259,"title":{},"body":{"modules/ExcelModule.html":{},"overview.html":{}}}],["cluster_excelmodule_providers",{"_index":1258,"title":{},"body":{"modules/ExcelModule.html":{},"overview.html":{}}}],["cluster_filemodule",{"_index":1329,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_exports",{"_index":1330,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_imports",{"_index":1331,"title":{},"body":{"modules/FileModule.html":{}}}],["cluster_filemodule_providers",{"_index":1332,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_pushnotificationmodule",{"_index":1536,"title":{},"body":{"modules/PushNotificationModule.html":{},"overview.html":{}}}],["cluster_pushnotificationmodule_exports",{"_index":1537,"title":{},"body":{"modules/PushNotificationModule.html":{},"overview.html":{}}}],["cluster_pushnotificationmodule_providers",{"_index":1538,"title":{},"body":{"modules/PushNotificationModule.html":{},"overview.html":{}}}],["cluster_sentrymodule",{"_index":1636,"title":{},"body":{"modules/SentryModule.html":{},"overview.html":{}}}],["cluster_sentrymodule_exports",{"_index":1638,"title":{},"body":{"modules/SentryModule.html":{},"overview.html":{}}}],["cluster_sentrymodule_providers",{"_index":1637,"title":{},"body":{"modules/SentryModule.html":{},"overview.html":{}}}],["cluster_taggqlmodule",{"_index":1727,"title":{},"body":{"modules/TagGQLModule.html":{},"overview.html":{}}}],["cluster_taggqlmodule_providers",{"_index":1728,"title":{},"body":{"modules/TagGQLModule.html":{},"overview.html":{}}}],["cluster_tagmodule",{"_index":1760,"title":{},"body":{"modules/TagModule.html":{},"overview.html":{}}}],["cluster_tagmodule_providers",{"_index":1761,"title":{},"body":{"modules/TagModule.html":{},"overview.html":{}}}],["code",{"_index":1256,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["codes",{"_index":1994,"title":{},"body":{"index.html":{}}}],["colinfo",{"_index":1287,"title":{},"body":{"injectables/ExcelService.html":{}}}],["collection",{"_index":2030,"title":{},"body":{"index.html":{}}}],["column",{"_index":393,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{},"injectables/ExcelService.html":{},"entities/PushTokenEntity.html":{},"entities/TagEntity.html":{},"entities/UserEntity.html":{}}}],["column('datetime",{"_index":384,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{},"entities/PushTokenEntity.html":{}}}],["column('enum",{"_index":390,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{},"entities/PushTokenEntity.html":{}}}],["column('longtext",{"_index":374,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["column('timestamp",{"_index":1811,"title":{},"body":{"entities/UserEntity.html":{}}}],["column('varchar",{"_index":377,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/UserEntity.html":{}}}],["column({default",{"_index":651,"title":{},"body":{"entities/ArticleEntity.html":{},"entities/UserEntity.html":{}}}],["column({name",{"_index":369,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["column({nullable",{"_index":661,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["column({select",{"_index":1814,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({unique",{"_index":1821,"title":{},"body":{"entities/UserEntity.html":{}}}],["columnnames",{"_index":1277,"title":{},"body":{"injectables/ExcelService.html":{}}}],["columns",{"_index":804,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ExcelService.html":{},"entities/PushTokenEntity.html":{}}}],["coming",{"_index":621,"title":{},"body":{"classes/ArticleDto.html":{}}}],["commented",{"_index":533,"title":{},"body":{"controllers/ArticleController.html":{}}}],["common",{"_index":1962,"title":{},"body":{"index.html":{}}}],["compare",{"_index":1066,"title":{},"body":{"injectables/AuthService.html":{}}}],["complexity",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":1942,"title":{},"body":{"index.html":{}}}],["compose",{"_index":1990,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1806,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["condition",{"_index":777,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["conditions",{"_index":781,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["config",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["config.ts",{"_index":1837,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/database",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["config/logger",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":1007,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["conflictexception('tag",{"_index":1746,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["conflictexception(`user",{"_index":1094,"title":{},"body":{"injectables/AuthService.html":{}}}],["connected",{"_index":1995,"title":{},"body":{"index.html":{}}}],["const",{"_index":70,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PushNotificationService.html":{},"classes/StringToNumberPipe.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["constraint",{"_index":1490,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"classes/ArticleDto.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"injectables/CronJobService.html":{},"classes/CustomValidationPipe.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{},"classes/TagDto.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{}}}],["constructor(@inject(winston_module_provider",{"_index":1225,"title":{},"body":{"injectables/EmailService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PushNotificationService.html":{}}}],["constructor(@injectrepository(userentity",{"_index":1437,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(articlecontent",{"_index":600,"title":{},"body":{"classes/ArticleDto.html":{}}}],["constructor(articlecontentrepository",{"_index":753,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["constructor(authservice",{"_index":1445,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(errors",{"_index":1142,"title":{},"body":{"classes/BadValidationRequestException.html":{}}}],["constructor(httpadapterhost",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(logger",{"_index":1217,"title":{},"body":{"injectables/EmailService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{}}}],["constructor(private",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/AuthController.html":{},"injectables/CronJobService.html":{},"injectables/FileService.html":{},"injectables/LocalStrategy.html":{},"controllers/PushNotificationController.html":{},"controllers/TagController.html":{},"classes/TagResolver.html":{}}}],["constructor(pushnotificationservice",{"_index":1189,"title":{},"body":{"injectables/CronJobService.html":{}}}],["constructor(sentryservice",{"_index":1341,"title":{},"body":{"injectables/FileService.html":{}}}],["constructor(tagentity",{"_index":1692,"title":{},"body":{"classes/TagDto.html":{}}}],["constructor(tagrepository",{"_index":824,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["constructor(tagservice",{"_index":1767,"title":{},"body":{"classes/TagResolver.html":{}}}],["constructor(userentityrepository",{"_index":1048,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["consume",{"_index":1957,"title":{},"body":{"index.html":{}}}],["contact",{"_index":96,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["contain",{"_index":1160,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["container",{"_index":1985,"title":{},"body":{"index.html":{}}}],["containing",{"_index":459,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["contains",{"_index":2028,"title":{},"body":{"index.html":{}}}],["content",{"_index":372,"title":{},"body":{"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"injectables/ArticleService.html":{}}}],["content.body",{"_index":795,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["content.entity",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/PushNotificationService.html":{}}}],["content.entity.ts",{"_index":355,"title":{},"body":{"entities/ArticleContentEntity.html":{},"coverage.html":{}}}],["content.entity.ts:13",{"_index":388,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["content.entity.ts:19",{"_index":371,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["content.entity.ts:22",{"_index":392,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["content.entity.ts:25",{"_index":394,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["content.entity.ts:28",{"_index":375,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["content.entity.ts:31",{"_index":382,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["content.entity.ts:34",{"_index":386,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["content.entity.ts:38",{"_index":368,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["content[key",{"_index":1306,"title":{},"body":{"injectables/ExcelService.html":{}}}],["content[key]?.tostring",{"_index":1310,"title":{},"body":{"injectables/ExcelService.html":{}}}],["contenttype",{"_index":1242,"title":{},"body":{"injectables/EmailService.html":{}}}],["context",{"_index":84,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/EmailService.html":{},"classes/HttpExceptionFilter.html":{}}}],["contexttype",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["controller",{"_index":107,"title":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/AuthController.html":{},"controllers/PushNotificationController.html":{},"controllers/TagController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/AuthController.html":{},"controllers/PushNotificationController.html":{},"controllers/TagController.html":{},"coverage.html":{}}}],["controller('articles",{"_index":531,"title":{},"body":{"controllers/ArticleController.html":{}}}],["controller('articles/search",{"_index":737,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["controller('auth",{"_index":1005,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('push",{"_index":1529,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["controller('tags",{"_index":1682,"title":{},"body":{"controllers/TagController.html":{}}}],["controllers",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["convert",{"_index":1269,"title":{},"body":{"injectables/ExcelService.html":{}}}],["cookie",{"_index":1197,"title":{},"body":{"injectables/CronJobService.html":{},"entities/PushTokenEntity.html":{}}}],["copy",{"_index":780,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["correct",{"_index":1015,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PushNotificationService.html":{}}}],["correct.'})@apiforbiddenresponse({description",{"_index":975,"title":{},"body":{"controllers/AuthController.html":{}}}],["count",{"_index":449,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{}}}],["cover",{"_index":608,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleRequestDto.html":{},"injectables/ArticleService.html":{}}}],["cover_image",{"_index":381,"title":{},"body":{"entities/ArticleContentEntity.html":{},"classes/Migrations1692270732657.html":{}}}],["coverage",{"_index":1824,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coverimage",{"_index":360,"title":{},"body":{"entities/ArticleContentEntity.html":{},"classes/ArticleDto.html":{},"classes/ArticleRequestDto.html":{},"injectables/EmailService.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1692270732657.html":{}}}],["coverimagetodelete",{"_index":932,"title":{},"body":{"injectables/ArticleService.html":{}}}],["create",{"_index":421,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/ExcelService.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"interfaces/UploadedFileDto.html":{},"index.html":{}}}],["createarticle",{"_index":411,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["createarticle(@param('articletype",{"_index":575,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createarticle(articletype",{"_index":417,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["created",{"_index":1555,"title":{},"body":{"injectables/PushNotificationService.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"entities/UserEntity.html":{},"index.html":{}}}],["created_at",{"_index":1484,"title":{},"body":{"classes/Migrations1691261966905.html":{},"entities/PushTokenEntity.html":{}}}],["createdat",{"_index":1614,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["createquerybuilder('content",{"_index":788,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["creates",{"_index":432,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createtag",{"_index":1660,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{}}}],["createtag(@args('tag",{"_index":1778,"title":{},"body":{"classes/TagResolver.html":{}}}],["createtag(@body(customvalidationpipe",{"_index":1683,"title":{},"body":{"controllers/TagController.html":{}}}],["createtag(newtag",{"_index":1664,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["createtag(tagdto",{"_index":1769,"title":{},"body":{"classes/TagResolver.html":{}}}],["creating",{"_index":834,"title":{},"body":{"injectables/ArticleService.html":{},"index.html":{}}}],["creation",{"_index":678,"title":{},"body":{"entities/ArticleEntity.html":{},"classes/ArticleRequestDto.html":{}}}],["cron",{"_index":1184,"title":{},"body":{"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"index.html":{}}}],["cron(cronexpression.every_day_at_noon",{"_index":1191,"title":{},"body":{"injectables/CronJobService.html":{}}}],["cronexpression",{"_index":1199,"title":{},"body":{"injectables/CronJobService.html":{}}}],["cronjobmodule",{"_index":175,"title":{"modules/CronJobModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CronJobModule.html":{},"modules.html":{},"overview.html":{}}}],["cronjobservice",{"_index":1181,"title":{"injectables/CronJobService.html":{}},"body":{"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"coverage.html":{},"overview.html":{}}}],["crud",{"_index":1964,"title":{},"body":{"index.html":{}}}],["crypt",{"_index":1054,"title":{},"body":{"injectables/AuthService.html":{}}}],["crypted",{"_index":1057,"title":{},"body":{"injectables/AuthService.html":{}}}],["cryptnewpassword",{"_index":1042,"title":{},"body":{"injectables/AuthService.html":{}}}],["cryptnewpassword(newpassword",{"_index":1052,"title":{},"body":{"injectables/AuthService.html":{}}}],["cs",{"_index":624,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleRequestDto.html":{},"classes/Migrations1691261966905.html":{},"miscellaneous/enumerations.html":{}}}],["ctx",{"_index":73,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":76,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":75,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["current",{"_index":707,"title":{},"body":{"classes/ArticleRequestDto.html":{}}}],["current_timestamp",{"_index":676,"title":{},"body":{"entities/ArticleEntity.html":{},"classes/Migrations1691261966905.html":{},"entities/PushTokenEntity.html":{}}}],["customvalidationpipe",{"_index":515,"title":{"classes/CustomValidationPipe.html":{}},"body":{"controllers/ArticleController.html":{},"classes/CustomValidationPipe.html":{},"controllers/TagController.html":{},"coverage.html":{}}}],["d",{"_index":1613,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["d').todate",{"_index":1129,"title":{},"body":{"injectables/AuthService.html":{}}}],["daily",{"_index":1196,"title":{},"body":{"injectables/CronJobService.html":{},"entities/PushTokenEntity.html":{},"dependencies.html":{}}}],["dailyrotatefile",{"_index":2077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":918,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{},"index.html":{}}}],["database",{"_index":870,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":2054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource(databaseconfig",{"_index":2055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":2057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":383,"title":{},"body":{"entities/ArticleContentEntity.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"classes/ArticleRequestDto.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/ExcelService.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"entities/UserEntity.html":{}}}],["date%.log",{"_index":2079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date_of_publication",{"_index":385,"title":{},"body":{"entities/ArticleContentEntity.html":{},"classes/Migrations1691261966905.html":{}}}],["date_of_publication_idx",{"_index":1481,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["datenf",{"_index":1314,"title":{},"body":{"injectables/ExcelService.html":{}}}],["dateofpublication",{"_index":361,"title":{},"body":{"entities/ArticleContentEntity.html":{},"classes/ArticleDto.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{}}}],["datepattern",{"_index":2082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datetime",{"_index":1478,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["dd",{"_index":1315,"title":{},"body":{"injectables/ExcelService.html":{},"miscellaneous/variables.html":{}}}],["dd')}_articles.xlsx",{"_index":548,"title":{},"body":{"controllers/ArticleController.html":{}}}],["deactivated",{"_index":471,"title":{},"body":{"controllers/ArticleController.html":{}}}],["deactivation",{"_index":474,"title":{},"body":{"controllers/ArticleController.html":{}}}],["debug",{"_index":2078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"modules/AuthModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/ExcelModule.html":{},"modules/FileModule.html":{},"modules/PushNotificationModule.html":{},"modules/SentryModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["decorators",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"entities/ArticleEntity.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"controllers/AuthController.html":{},"injectables/CronJobService.html":{},"controllers/PushNotificationController.html":{},"entities/PushTokenEntity.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"classes/TagResolver.html":{},"entities/UserEntity.html":{}}}],["default",{"_index":9,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/ArticleEntity.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"entities/TagEntity.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["default_language",{"_index":767,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"entities/PushTokenEntity.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultstrategy",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["defined",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/CronJobService.html":{},"classes/CustomValidationPipe.html":{},"injectables/EmailService.html":{},"classes/ErrorResponse.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"entities/UserEntity.html":{}}}],["delete",{"_index":934,"title":{},"body":{"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"classes/Migrations1691261966905.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["delete('token",{"_index":1533,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["deleted",{"_index":470,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/FileService.html":{}}}],["deletetag",{"_index":1661,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["deletetag(@body",{"_index":1689,"title":{},"body":{"controllers/TagController.html":{}}}],["deletetag(newtag",{"_index":1738,"title":{},"body":{"injectables/TagGQLService.html":{}}}],["deletetag(oldtag",{"_index":1783,"title":{},"body":{"injectables/TagService.html":{}}}],["deletetag(tag",{"_index":1669,"title":{},"body":{"controllers/TagController.html":{}}}],["deletetoken",{"_index":1514,"title":{},"body":{"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{}}}],["deletetoken(@body",{"_index":1534,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["deletetoken(token",{"_index":1516,"title":{},"body":{"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{}}}],["deliver",{"_index":1945,"title":{},"body":{"index.html":{}}}],["demo",{"_index":1981,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":163,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"modules/AuthModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/ExcelModule.html":{},"modules/FileModule.html":{},"modules/PushNotificationModule.html":{},"modules/SentryModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":814,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/ArticleController.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"classes/CustomValidationPipe.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"interfaces/UploadedFileDto.html":{},"properties.html":{}}}],["designed",{"_index":1944,"title":{},"body":{"index.html":{}}}],["destination",{"_index":1369,"title":{},"body":{"injectables/FileService.html":{},"interfaces/UploadedFileDto.html":{}}}],["detail",{"_index":446,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ErrorResponse.html":{}}}],["details",{"_index":444,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["developers",{"_index":1251,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["developing",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["device",{"_index":1550,"title":{},"body":{"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"entities/UserEntity.html":{}}}],["dimatest01@gmail.com",{"_index":1229,"title":{},"body":{"injectables/EmailService.html":{}}}],["dir",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["directory",{"_index":1989,"title":{},"body":{"index.html":{}}}],["directory_images",{"_index":1370,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dirname",{"_index":2080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk",{"_index":123,"title":{},"body":{"controllers/AppController.html":{}}}],["diskstorage",{"_index":1368,"title":{},"body":{"injectables/FileService.html":{},"interfaces/UploadedFileDto.html":{}}}],["disposition",{"_index":151,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{}}}],["dmitrij",{"_index":2046,"title":{},"body":{"properties.html":{}}}],["docker",{"_index":1984,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":1987,"title":{},"body":{"index.html":{}}}],["dockerization",{"_index":1974,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{}}}],["down",{"_index":1461,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{}}}],["down(queryrunner",{"_index":1463,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{}}}],["downloaded",{"_index":1996,"title":{},"body":{"index.html":{}}}],["downloads",{"_index":1973,"title":{},"body":{"index.html":{}}}],["driver",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["drop",{"_index":1500,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["dto",{"_index":697,"title":{},"body":{"classes/ArticleRequestDto.html":{},"classes/CustomValidationPipe.html":{},"interfaces/UploadedFileDto.html":{}}}],["during",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"classes/ArticleRequestDto.html":{},"interfaces/JwtRequest.html":{}}}],["e",{"_index":867,"title":{},"body":{"injectables/ArticleService.html":{}}}],["each",{"_index":431,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/ExcelService.html":{}}}],["easier",{"_index":534,"title":{},"body":{"controllers/ArticleController.html":{}}}],["eg",{"_index":782,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["email",{"_index":897,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/EmailService.html":{},"injectables/LocalStrategy.html":{}}}],["email.service",{"_index":1214,"title":{},"body":{"modules/EmailModule.html":{}}}],["email_service",{"_index":1226,"title":{},"body":{"injectables/EmailService.html":{}}}],["emailmodule",{"_index":176,"title":{"modules/EmailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/EmailModule.html":{},"modules.html":{},"overview.html":{}}}],["emails",{"_index":1971,"title":{},"body":{"index.html":{}}}],["emailservice",{"_index":827,"title":{"injectables/EmailService.html":{}},"body":{"injectables/ArticleService.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"coverage.html":{},"overview.html":{}}}],["en",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"classes/ArticleRequestDto.html":{},"classes/Migrations1691261966905.html":{},"classes/TagDto.html":{},"miscellaneous/enumerations.html":{}}}],["encoding",{"_index":1796,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["endpoint",{"_index":538,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/JwtStrategy.html":{}}}],["endpoints",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["endpoints/**/*.entity{.ts,.js",{"_index":2063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoints/article/article",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints/article/article.entity",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints/article/article.module",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints/article/search/article",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints/auth/auth.module",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints/auth/strategies/basic.strategy",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints/auth/strategies/jwt.strategy",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints/auth/strategies/local.strategy",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints/auth/user.entity",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints/push",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints/tag/tag.entity",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["endpoints/tag/tag.module",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["engine=innodb",{"_index":1473,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{}}}],["enough",{"_index":799,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["entire",{"_index":1799,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["entities",{"_index":353,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{},"entities/PushTokenEntity.html":{},"entities/TagEntity.html":{},"entities/UserEntity.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/**/*.entity{.ts,.js",{"_index":2064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":352,"title":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{},"entities/PushTokenEntity.html":{},"entities/TagEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"entities/PushTokenEntity.html":{},"entities/TagEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["entity('article",{"_index":684,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["entity('article_content",{"_index":405,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["entity('push_token",{"_index":1628,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["entity('tag",{"_index":1725,"title":{},"body":{"entities/TagEntity.html":{}}}],["entity('user",{"_index":1823,"title":{},"body":{"entities/UserEntity.html":{}}}],["entity.name",{"_index":805,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["enum",{"_index":391,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{},"classes/Migrations1691261966905.html":{},"entities/PushTokenEntity.html":{},"entities/TagEntity.html":{}}}],["enumerations",{"_index":1930,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":2015,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":2020,"title":{},"body":{"index.html":{}}}],["environment",{"_index":2017,"title":{},"body":{"index.html":{}}}],["equal",{"_index":1071,"title":{},"body":{"injectables/AuthService.html":{}}}],["error",{"_index":10,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"classes/BadValidationRequestException.html":{},"injectables/EmailService.html":{},"classes/ErrorResponse.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error.extensions?.originalerror",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["error.message",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["errorresponse",{"_index":57,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ErrorResponse.html":{},"coverage.html":{}}}],["errors",{"_index":1145,"title":{},"body":{"classes/BadValidationRequestException.html":{},"classes/CustomValidationPipe.html":{}}}],["errors.foreach((error",{"_index":1148,"title":{},"body":{"classes/BadValidationRequestException.html":{}}}],["example",{"_index":120,"title":{},"body":{"controllers/AppController.html":{},"classes/ArticleDto.html":{},"injectables/PushNotificationService.html":{},"classes/TagDto.html":{}}}],["excel",{"_index":436,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ExcelService.html":{},"index.html":{}}}],["excel.service",{"_index":1261,"title":{},"body":{"modules/ExcelModule.html":{}}}],["excelbuffer",{"_index":542,"title":{},"body":{"controllers/ArticleController.html":{}}}],["excelmodule",{"_index":177,"title":{"modules/ExcelModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ExcelModule.html":{},"modules.html":{},"overview.html":{}}}],["excelservice",{"_index":828,"title":{"injectables/ExcelService.html":{}},"body":{"injectables/ArticleService.html":{},"modules/ExcelModule.html":{},"injectables/ExcelService.html":{},"coverage.html":{},"overview.html":{}}}],["exception",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"injectables/SentryService.html":{},"index.html":{}}}],["exception.filter",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["exception.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:11",{"_index":1418,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:15",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:21",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":1421,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":1423,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception['message",{"_index":98,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception['stack",{"_index":103,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfactory",{"_index":1206,"title":{},"body":{"classes/CustomValidationPipe.html":{}}}],["exceptionfilter",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exceptions",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exist",{"_index":587,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["exists",{"_index":582,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/AuthService.html":{},"classes/Migrations1691666064778.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["exists.'})@apiconflictresponse({description",{"_index":1665,"title":{},"body":{"controllers/TagController.html":{}}}],["exists.'})@httpcode(200)@post",{"_index":1666,"title":{},"body":{"controllers/TagController.html":{}}}],["exitonerror",{"_index":2075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiration",{"_index":1080,"title":{},"body":{"injectables/AuthService.html":{},"entities/UserEntity.html":{}}}],["expiration_date",{"_index":1507,"title":{},"body":{"classes/Migrations1691666064778.html":{},"entities/UserEntity.html":{}}}],["expirationdate",{"_index":1809,"title":{},"body":{"entities/UserEntity.html":{}}}],["expiresin",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"classes/CustomValidationPipe.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/ErrorResponse.html":{},"modules/ExcelModule.html":{},"injectables/ExcelService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"modules/SentryModule.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"modules/TagModule.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"interfaces/UploadedFileDto.html":{},"entities/UserEntity.html":{}}}],["exportarticles",{"_index":412,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/ExcelService.html":{}}}],["exportarticles(@res",{"_index":541,"title":{},"body":{"controllers/ArticleController.html":{}}}],["exportarticles(articles",{"_index":1274,"title":{},"body":{"injectables/ExcelService.html":{}}}],["exportarticles(response",{"_index":435,"title":{},"body":{"controllers/ArticleController.html":{}}}],["exporting",{"_index":1972,"title":{},"body":{"index.html":{}}}],["exports",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"modules/AuthModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/ExcelModule.html":{},"modules/FileModule.html":{},"modules/PushNotificationModule.html":{},"modules/SentryModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["express",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":1344,"title":{},"body":{"injectables/FileService.html":{}}}],["express/multer/interfaces/multer",{"_index":1378,"title":{},"body":{"injectables/FileService.html":{}}}],["expressadapter",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["extends",{"_index":1141,"title":{},"body":{"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CustomValidationPipe.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["extension",{"_index":1350,"title":{},"body":{"injectables/FileService.html":{}}}],["extname",{"_index":1383,"title":{},"body":{"injectables/FileService.html":{}}}],["extractjwt",{"_index":1436,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1439,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["fallbacklanguage",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["false",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"classes/ArticleDto.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/FileService.html":{},"injectables/LocalStrategy.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["fcm",{"_index":1605,"title":{},"body":{"classes/PushTokenDto.html":{},"index.html":{}}}],["feature",{"_index":898,"title":{},"body":{"injectables/ArticleService.html":{}}}],["features",{"_index":1951,"title":{},"body":{"index.html":{}}}],["field",{"_index":1701,"title":{},"body":{"classes/TagDto.html":{},"entities/TagEntity.html":{},"interfaces/UploadedFileDto.html":{}}}],["field()@column",{"_index":1721,"title":{},"body":{"entities/TagEntity.html":{}}}],["field()@column({default",{"_index":1719,"title":{},"body":{"entities/TagEntity.html":{}}}],["field(type",{"_index":1714,"title":{},"body":{"entities/TagEntity.html":{}}}],["field({nullable",{"_index":1699,"title":{},"body":{"classes/TagDto.html":{}}}],["fieldname",{"_index":1797,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"classes/CustomValidationPipe.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/ErrorResponse.html":{},"modules/ExcelModule.html":{},"injectables/ExcelService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"modules/SentryModule.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"modules/TagModule.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"interfaces/UploadedFileDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["file.'})@get('export",{"_index":437,"title":{},"body":{"controllers/ArticleController.html":{}}}],["file.'})@get('public/sample",{"_index":118,"title":{},"body":{"controllers/AppController.html":{}}}],["file.destination}/${file.filename",{"_index":579,"title":{},"body":{"controllers/ArticleController.html":{}}}],["file.dto",{"_index":514,"title":{},"body":{"controllers/ArticleController.html":{}}}],["file.dto.ts",{"_index":1793,"title":{},"body":{"interfaces/UploadedFileDto.html":{},"coverage.html":{}}}],["file.service",{"_index":1334,"title":{},"body":{"modules/FileModule.html":{}}}],["filefilter",{"_index":1337,"title":{},"body":{"injectables/FileService.html":{}}}],["filefilter(_req",{"_index":1343,"title":{},"body":{"injectables/FileService.html":{}}}],["fileinterceptor",{"_index":510,"title":{},"body":{"controllers/ArticleController.html":{}}}],["filemodule",{"_index":178,"title":{"modules/FileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/FileModule.html":{},"modules.html":{},"overview.html":{}}}],["filename",{"_index":1237,"title":{},"body":{"injectables/EmailService.html":{},"injectables/FileService.html":{},"interfaces/UploadedFileDto.html":{},"miscellaneous/variables.html":{}}}],["filename=${moment().format('yyyy",{"_index":546,"title":{},"body":{"controllers/ArticleController.html":{}}}],["filename=sample.pdf",{"_index":153,"title":{},"body":{"controllers/AppController.html":{}}}],["files",{"_index":147,"title":{},"body":{"controllers/AppController.html":{},"injectables/FileService.html":{},"index.html":{}}}],["fileservice",{"_index":511,"title":{"injectables/FileService.html":{}},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"coverage.html":{},"overview.html":{}}}],["fileservice.filefilter",{"_index":1373,"title":{},"body":{"injectables/FileService.html":{}}}],["fileservice.getrandomname(file.originalname",{"_index":1372,"title":{},"body":{"injectables/FileService.html":{}}}],["fileservice.multeroptions",{"_index":574,"title":{},"body":{"controllers/ArticleController.html":{}}}],["filesize",{"_index":1375,"title":{},"body":{"injectables/FileService.html":{}}}],["fileurl",{"_index":1360,"title":{},"body":{"injectables/FileService.html":{}}}],["fileurl.replace(server_url",{"_index":1410,"title":{},"body":{"injectables/FileService.html":{}}}],["fileurl.startswith(server_url",{"_index":1409,"title":{},"body":{"injectables/FileService.html":{}}}],["fill",{"_index":2016,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1348,"title":{},"body":{"injectables/FileService.html":{}}}],["filtered",{"_index":840,"title":{},"body":{"injectables/ArticleService.html":{}}}],["filtering",{"_index":618,"title":{},"body":{"classes/ArticleDto.html":{}}}],["filters",{"_index":1979,"title":{},"body":{"index.html":{}}}],["filters/all",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["filters/http",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["find",{"_index":776,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{}}}],["finding",{"_index":1624,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["firebase",{"_index":1558,"title":{},"body":{"injectables/PushNotificationService.html":{},"dependencies.html":{},"index.html":{}}}],["firebaseadmin",{"_index":1560,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["firebaseadmin.messaging().send(message",{"_index":1587,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["first",{"_index":901,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ExcelService.html":{},"injectables/PushNotificationService.html":{}}}],["fit",{"_index":1400,"title":{},"body":{"injectables/FileService.html":{}}}],["fk_5a8ded7416c4f8d2ec4c0d6b1f4",{"_index":1498,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["fk_695e2a3fb3e8f1995d703d5b91c",{"_index":1495,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["fk_74fd901c12ea1b6d4eea6885d2c",{"_index":1497,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["fk_c27e451a84c599d6164080b0f7a",{"_index":1491,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["flutter",{"_index":1943,"title":{},"body":{"index.html":{}}}],["flutter_notification_click",{"_index":1582,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["folder",{"_index":1801,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["following",{"_index":2001,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":1016,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["forbiddenexception(`user",{"_index":1125,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["foreign",{"_index":1492,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["form",{"_index":622,"title":{},"body":{"classes/ArticleDto.html":{},"injectables/ArticleService.html":{},"interfaces/UploadedFileDto.html":{}}}],["format",{"_index":620,"title":{},"body":{"classes/ArticleDto.html":{},"miscellaneous/variables.html":{}}}],["format.colorize",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.combine",{"_index":2088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.printf(msg",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.timestamp",{"_index":2090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["format.uncolorize",{"_index":2089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formaterror",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":588,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"index.html":{}}}],["found.'})@apipayloadtoolargeresponse({description",{"_index":480,"title":{},"body":{"controllers/ArticleController.html":{}}}],["found.'})@put",{"_index":1677,"title":{},"body":{"controllers/TagController.html":{}}}],["found.'})@put(':id/activity",{"_index":466,"title":{},"body":{"controllers/ArticleController.html":{}}}],["framework",{"_index":1954,"title":{},"body":{"index.html":{}}}],["free",{"_index":1195,"title":{},"body":{"injectables/CronJobService.html":{}}}],["friendly",{"_index":1253,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/TagDto.html":{}}}],["fs",{"_index":139,"title":{},"body":{"controllers/AppController.html":{},"injectables/FileService.html":{}}}],["fs.createreadstream(file).pipe(response",{"_index":154,"title":{},"body":{"controllers/AppController.html":{}}}],["fs.unlink(olddatarelativeurl",{"_index":1413,"title":{},"body":{"injectables/FileService.html":{}}}],["fulltext",{"_index":402,"title":{},"body":{"entities/ArticleContentEntity.html":{},"classes/Migrations1691261966905.html":{}}}],["function",{"_index":1352,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["functionality",{"_index":1948,"title":{},"body":{"index.html":{}}}],["functions",{"_index":1937,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":820,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["generate",{"_index":1059,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileService.html":{}}}],["generated",{"_index":1604,"title":{},"body":{"classes/PushTokenDto.html":{}}}],["generaterefreshtoken",{"_index":1043,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':articletype",{"_index":558,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{}}}],["get('autocomplete/:articletype",{"_index":741,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["get('detail/:articlecontentid",{"_index":555,"title":{},"body":{"controllers/ArticleController.html":{}}}],["get('export",{"_index":540,"title":{},"body":{"controllers/ArticleController.html":{}}}],["get('public/sample",{"_index":142,"title":{},"body":{"controllers/AppController.html":{}}}],["get('sign",{"_index":1027,"title":{},"body":{"controllers/AuthController.html":{}}}],["getactiveuser",{"_index":1044,"title":{},"body":{"injectables/AuthService.html":{}}}],["getactiveuser(username",{"_index":1061,"title":{},"body":{"injectables/AuthService.html":{}}}],["getalltags",{"_index":1662,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["getalltags(@headers('x",{"_index":1685,"title":{},"body":{"controllers/TagController.html":{}}}],["getalltags(language",{"_index":1672,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["getarticlebyid",{"_index":413,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["getarticlebyid(@param('articlecontentid",{"_index":556,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getarticlebyid(articlecontentid",{"_index":439,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["getarticles",{"_index":414,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getarticles(@param('articletype",{"_index":559,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getarticles(articletype",{"_index":447,"title":{},"body":{"controllers/ArticleController.html":{}}}],["getarticlesbytypeandfilter",{"_index":823,"title":{},"body":{"injectables/ArticleService.html":{}}}],["getarticlesbytypeandfilter(articletype",{"_index":837,"title":{},"body":{"injectables/ArticleService.html":{}}}],["getrandomname",{"_index":1338,"title":{},"body":{"injectables/FileService.html":{}}}],["getrandomname(originalname",{"_index":1353,"title":{},"body":{"injectables/FileService.html":{}}}],["getsample",{"_index":112,"title":{},"body":{"controllers/AppController.html":{}}}],["getsample(@res",{"_index":143,"title":{},"body":{"controllers/AppController.html":{}}}],["getsample(response",{"_index":114,"title":{},"body":{"controllers/AppController.html":{}}}],["gettags",{"_index":1766,"title":{},"body":{"classes/TagResolver.html":{}}}],["getting",{"_index":159,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/ArticleService.html":{},"index.html":{}}}],["getversion",{"_index":113,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gif",{"_index":1397,"title":{},"body":{"injectables/FileService.html":{}}}],["git",{"_index":2009,"title":{},"body":{"index.html":{}}}],["git@github.com:belligerator/news",{"_index":2010,"title":{},"body":{"index.html":{}}}],["gql.module",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["gql.module.ts",{"_index":1731,"title":{},"body":{"modules/TagGQLModule.html":{}}}],["gqlargumentshost",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["gqlargumentshost.create(host",{"_index":81,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["gqlcontext",{"_index":82,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["gqlexceptionfilter",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["gqlhost",{"_index":80,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["gqlhost.getinfo().fieldname",{"_index":104,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["gqlhost.gettype",{"_index":83,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["graphql",{"_index":88,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"dependencies.html":{},"index.html":{}}}],["graphql/tag",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlerror",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlformattederror",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["guaranteed",{"_index":1626,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["guarded",{"_index":539,"title":{},"body":{"controllers/ArticleController.html":{}}}],["handlebars",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["handleexceptions",{"_index":2097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handler",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["handlerejections",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashed",{"_index":1068,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashedpassword",{"_index":1064,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":1159,"title":{},"body":{"injectables/BasicStrategy.html":{},"injectables/ExcelService.html":{}}}],["headerresolver",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["headers",{"_index":484,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/TagController.html":{}}}],["headers('x",{"_index":562,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{}}}],["here",{"_index":1018,"title":{},"body":{"controllers/AuthController.html":{}}}],["high",{"_index":1579,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["higher",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["host",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["host.interface",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":74,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["hpx",{"_index":1326,"title":{},"body":{"injectables/ExcelService.html":{}}}],["http",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/BasicStrategy.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"dependencies.html":{}}}],["http://localhost:3000",{"_index":2026,"title":{},"body":{"index.html":{}}}],["httpadapter",{"_index":71,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(response",{"_index":99,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpargumentshost",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpcode",{"_index":485,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthController.html":{},"controllers/PushNotificationController.html":{},"controllers/TagController.html":{}}}],["httpcode(200",{"_index":571,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthController.html":{},"controllers/PushNotificationController.html":{},"controllers/TagController.html":{}}}],["httpexception",{"_index":1419,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":208,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://belligerator.cz/downloads",{"_index":1997,"title":{},"body":{"index.html":{}}}],["https://github.com/belligerator/news",{"_index":1992,"title":{},"body":{"index.html":{}}}],["https://github.com/typeorm/typeorm/issues/2869",{"_index":779,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["https://hub.docker.com/r/belligerator/news",{"_index":1986,"title":{},"body":{"index.html":{}}}],["https://news.belligerator.cz/api",{"_index":1982,"title":{},"body":{"index.html":{}}}],["https://news.belligerator.cz/api/documentation",{"_index":2034,"title":{},"body":{"index.html":{}}}],["https://news.belligerator.cz/api/swagger",{"_index":2033,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["httpstatus.internal_server_error",{"_index":79,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["i18n",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"injectables/PushNotificationService.html":{},"dependencies.html":{}}}],["i18nmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nmodule.forroot",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["i18nservice",{"_index":1545,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["icon",{"_index":1583,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["id",{"_index":362,"title":{},"body":{"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ExcelService.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"entities/UserEntity.html":{}}}],["id)@primarycolumn",{"_index":1715,"title":{},"body":{"entities/TagEntity.html":{}}}],["id)@primarycolumn('enum",{"_index":1717,"title":{},"body":{"entities/TagEntity.html":{}}}],["id.'})@apinotfoundresponse({description",{"_index":479,"title":{},"body":{"controllers/ArticleController.html":{}}}],["id.'})@useinterceptors(cacheinterceptor)@cachekey(cachekeyenum.articles)@get('detail/:articlecontentid",{"_index":440,"title":{},"body":{"controllers/ArticleController.html":{}}}],["identifier",{"_index":1825,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":712,"title":{},"body":{"classes/ArticleRequestDto.html":{},"injectables/ArticleService.html":{}}}],["idx_5a8ded7416c4f8d2ec4c0d6b1f",{"_index":1487,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["idx_74fd901c12ea1b6d4eea6885d2",{"_index":1486,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["idx_78a916df40e02a9deb1c4b75ed",{"_index":1508,"title":{},"body":{"classes/Migrations1691666064778.html":{}}}],["idx_fulltext",{"_index":1482,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["ignoretls",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["ilike(`%${pattern",{"_index":783,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["image",{"_index":609,"title":{},"body":{"classes/ArticleDto.html":{},"classes/ArticleRequestDto.html":{},"injectables/ArticleService.html":{},"injectables/FileService.html":{},"index.html":{}}}],["image/gif",{"_index":1390,"title":{},"body":{"injectables/FileService.html":{}}}],["image/jpeg",{"_index":1389,"title":{},"body":{"injectables/FileService.html":{}}}],["image/png",{"_index":1243,"title":{},"body":{"injectables/EmailService.html":{},"injectables/FileService.html":{}}}],["images",{"_index":1241,"title":{},"body":{"injectables/EmailService.html":{}}}],["implements",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CheckArticleTypePipe.html":{},"classes/HttpExceptionFilter.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"classes/RequiredParameterPipe.html":{},"classes/StringToNumberPipe.html":{},"index.html":{}}}],["import",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"classes/CustomValidationPipe.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"modules/ExcelModule.html":{},"injectables/ExcelService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"modules/SentryModule.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"modules/TagModule.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"entities/UserEntity.html":{},"index.html":{}}}],["imports",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"modules/AuthModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/FileModule.html":{},"modules/PushNotificationModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{}}}],["in(tagsfromdto.map(tag",{"_index":873,"title":{},"body":{"injectables/ArticleService.html":{}}}],["in.'})@httpcode(200)@post('refresh",{"_index":966,"title":{},"body":{"controllers/AuthController.html":{}}}],["inactive",{"_index":1098,"title":{},"body":{"injectables/AuthService.html":{}}}],["included",{"_index":1585,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["incorrect",{"_index":1448,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"classes/ErrorResponse.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"interfaces/UploadedFileDto.html":{},"entities/UserEntity.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index('article_id",{"_index":400,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["index('date_of_publication_idx",{"_index":403,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["index('idx_fulltext",{"_index":401,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["index('language",{"_index":404,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"classes/CustomValidationPipe.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/ErrorResponse.html":{},"modules/ExcelModule.html":{},"injectables/ExcelService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"modules/SentryModule.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"modules/TagModule.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"interfaces/UploadedFileDto.html":{},"entities/UserEntity.html":{}}}],["information",{"_index":443,"title":{},"body":{"controllers/ArticleController.html":{}}}],["inject",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ArticleService.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{},"injectables/TagService.html":{}}}],["inject(cache_manager",{"_index":853,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/TagService.html":{}}}],["inject(winston_module_provider",{"_index":69,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ArticleService.html":{},"injectables/FileService.html":{},"injectables/SentryService.html":{}}}],["injectable",{"_index":347,"title":{"injectables/AppService.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["injectables",{"_index":348,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"overview.html":{}}}],["injectrepository",{"_index":771,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PushNotificationService.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["injectrepository(articlecontententity",{"_index":774,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{}}}],["injectrepository(articleentity",{"_index":852,"title":{},"body":{"injectables/ArticleService.html":{}}}],["injectrepository(pushtokenentity",{"_index":1561,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["injectrepository(tagentity",{"_index":851,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["injectrepository(userentity",{"_index":1091,"title":{},"body":{"injectables/AuthService.html":{}}}],["innerjoinandselect('content.article",{"_index":789,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["inputtype",{"_index":1702,"title":{},"body":{"classes/TagDto.html":{}}}],["inside",{"_index":1401,"title":{},"body":{"injectables/FileService.html":{}}}],["install",{"_index":2012,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2006,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1795,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["int",{"_index":1471,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{}}}],["intended",{"_index":1250,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["interacts",{"_index":1960,"title":{},"body":{"index.html":{}}}],["interface",{"_index":1425,"title":{"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"interfaces/UploadedFileDto.html":{}},"body":{"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"interfaces/UploadedFileDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":1426,"title":{},"body":{"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"interfaces/UploadedFileDto.html":{},"overview.html":{}}}],["internal",{"_index":92,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["internal_server_error",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["internalservererrorexception",{"_index":131,"title":{},"body":{"controllers/AppController.html":{}}}],["internalservererrorexception('error",{"_index":158,"title":{},"body":{"controllers/AppController.html":{}}}],["invalid",{"_index":964,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["invalidate",{"_index":893,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/TagService.html":{}}}],["inversejoincolumns",{"_index":674,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["isglobal",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["isnan(numbervalue",{"_index":1657,"title":{},"body":{"classes/StringToNumberPipe.html":{}}}],["isnotempty",{"_index":701,"title":{},"body":{"classes/ArticleRequestDto.html":{},"classes/TagDto.html":{}}}],["isnotempty()@field",{"_index":1694,"title":{},"body":{"classes/TagDto.html":{}}}],["item",{"_index":1711,"title":{},"body":{"entities/TagEntity.html":{}}}],["item.language",{"_index":907,"title":{},"body":{"injectables/ArticleService.html":{}}}],["item.tags",{"_index":1712,"title":{},"body":{"entities/TagEntity.html":{}}}],["job",{"_index":1193,"title":{},"body":{"injectables/CronJobService.html":{}}}],["job.module",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["job.module.ts",{"_index":1183,"title":{},"body":{"modules/CronJobModule.html":{}}}],["job.service",{"_index":1185,"title":{},"body":{"modules/CronJobModule.html":{}}}],["job.service.ts",{"_index":1187,"title":{},"body":{"injectables/CronJobService.html":{},"coverage.html":{}}}],["job.service.ts:13",{"_index":1192,"title":{},"body":{"injectables/CronJobService.html":{}}}],["job.service.ts:6",{"_index":1190,"title":{},"body":{"injectables/CronJobService.html":{}}}],["job/cron",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"coverage.html":{}}}],["jobs",{"_index":1975,"title":{},"body":{"index.html":{}}}],["join",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["joincolumn",{"_index":395,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{}}}],["joincolumns",{"_index":672,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["jointable",{"_index":680,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["jpeg",{"_index":1395,"title":{},"body":{"injectables/FileService.html":{}}}],["jpg",{"_index":1394,"title":{},"body":{"injectables/FileService.html":{}}}],["json",{"_index":86,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{}}}],["json.parse(newarticledto.tags",{"_index":864,"title":{},"body":{"injectables/ArticleService.html":{}}}],["json.parse(updatedarticle.updatedtags",{"_index":930,"title":{},"body":{"injectables/ArticleService.html":{}}}],["json.stringify(message",{"_index":1597,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["jwt",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwtfromrequest",{"_index":1438,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtpayload",{"_index":322,"title":{"interfaces/JwtPayload.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtpayload.sub",{"_index":1109,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtpayload.userid",{"_index":982,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwtrequest",{"_index":979,"title":{"interfaces/JwtRequest.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/JwtRequest.html":{},"coverage.html":{}}}],["jwtservice",{"_index":1049,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":184,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":1291,"title":{},"body":{"injectables/ExcelService.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"injectables/PushNotificationService.html":{}}}],["key.enum",{"_index":525,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["key.enum.ts",{"_index":1934,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["keyof",{"_index":877,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ExcelService.html":{}}}],["lang",{"_index":1568,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["language",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/ExcelService.html":{},"classes/Migrations1691261966905.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["language.'})@apipayloadtoolargeresponse({description",{"_index":426,"title":{},"body":{"controllers/ArticleController.html":{}}}],["languageenum",{"_index":389,"title":{},"body":{"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/ExcelService.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["languageenum.en",{"_index":2071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languages",{"_index":857,"title":{},"body":{"injectables/ArticleService.html":{}}}],["languages.map((language",{"_index":876,"title":{},"body":{"injectables/ArticleService.html":{}}}],["large",{"_index":568,"title":{},"body":{"controllers/ArticleController.html":{}}}],["last",{"_index":1620,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["latest",{"_index":1946,"title":{},"body":{"index.html":{}}}],["leftjoinandselect('article.tags",{"_index":790,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["legend",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"modules/AuthModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/ExcelModule.html":{},"modules/FileModule.html":{},"modules/PushNotificationModule.html":{},"modules/SentryModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["length",{"_index":379,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/UserEntity.html":{}}}],["level",{"_index":2087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":2043,"title":{},"body":{"properties.html":{}}}],["limit(count",{"_index":796,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["limits",{"_index":1374,"title":{},"body":{"injectables/FileService.html":{}}}],["list",{"_index":461,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"classes/BadValidationRequestException.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"index.html":{}}}],["literal",{"_index":700,"title":{},"body":{"classes/ArticleRequestDto.html":{},"injectables/ExcelService.html":{}}}],["loaderoptions",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":1453,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy.ts",{"_index":1022,"title":{},"body":{"controllers/AuthController.html":{}}}],["locally",{"_index":2000,"title":{},"body":{"index.html":{}}}],["localstrategy",{"_index":185,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AppModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":1807,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["log",{"_index":1819,"title":{},"body":{"entities/UserEntity.html":{},"index.html":{}}}],["logged",{"_index":1818,"title":{},"body":{"entities/UserEntity.html":{}}}],["logger",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ArticleService.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{}}}],["loggerconfig",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":1976,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":1968,"title":{},"body":{"index.html":{}}}],["logs",{"_index":2081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longtext",{"_index":1480,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["made",{"_index":1961,"title":{},"body":{"index.html":{}}}],["mailermodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule.forroot",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":1218,"title":{},"body":{"injectables/EmailService.html":{}}}],["make",{"_index":1610,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["manager",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"dependencies.html":{}}}],["managing",{"_index":1980,"title":{},"body":{"index.html":{}}}],["mandatory",{"_index":817,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"classes/BadValidationRequestException.html":{}}}],["manually",{"_index":1623,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["manytomany",{"_index":681,"title":{},"body":{"entities/ArticleEntity.html":{},"entities/TagEntity.html":{}}}],["manytomany(undefined",{"_index":669,"title":{},"body":{"entities/ArticleEntity.html":{},"entities/TagEntity.html":{}}}],["manytoone",{"_index":396,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{}}}],["manytoone(undefined",{"_index":364,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{}}}],["map",{"_index":909,"title":{},"body":{"injectables/ArticleService.html":{}}}],["matching",{"_index":106,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"classes/CustomValidationPipe.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/ErrorResponse.html":{},"modules/ExcelModule.html":{},"injectables/ExcelService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"modules/SentryModule.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"modules/TagModule.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"interfaces/UploadedFileDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{}}}],["max_file_size",{"_index":519,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/FileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":2085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxsize",{"_index":2083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memorystorage",{"_index":1800,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["message",{"_index":91,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/BadValidationRequestException.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{}}}],["messageid",{"_index":1586,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["messaging",{"_index":1970,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":1631,"title":{},"body":{"classes/RequiredParameterPipe.html":{},"classes/StringToNumberPipe.html":{},"dependencies.html":{}}}],["metadata.data",{"_index":1635,"title":{},"body":{"classes/RequiredParameterPipe.html":{}}}],["method",{"_index":528,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{}}}],["methods",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"classes/RequiredParameterPipe.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{}}}],["migration",{"_index":1977,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["migrationinterface",{"_index":1460,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{}}}],["migrations",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations.ts",{"_index":1459,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"coverage.html":{}}}],["migrations.ts:10",{"_index":1504,"title":{},"body":{"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{}}}],["migrations.ts:18",{"_index":1465,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["migrations.ts:4",{"_index":1462,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{}}}],["migrations.ts:6",{"_index":1467,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{}}}],["migrations/*{.ts,.js",{"_index":2069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations1691261966905",{"_index":1457,"title":{"classes/Migrations1691261966905.html":{}},"body":{"classes/Migrations1691261966905.html":{},"coverage.html":{}}}],["migrations1691666064778",{"_index":1502,"title":{"classes/Migrations1691666064778.html":{}},"body":{"classes/Migrations1691666064778.html":{},"coverage.html":{}}}],["migrations1692270732657",{"_index":1509,"title":{"classes/Migrations1692270732657.html":{}},"body":{"classes/Migrations1692270732657.html":{},"coverage.html":{}}}],["migrationsrun",{"_index":2070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mime",{"_index":1804,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["mimetype",{"_index":1798,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["miscellaneous",{"_index":1929,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":425,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleSearchService.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/LocalStrategy.html":{},"classes/RequiredParameterPipe.html":{}}}],["mm",{"_index":547,"title":{},"body":{"controllers/ArticleController.html":{},"miscellaneous/variables.html":{}}}],["mmm",{"_index":1316,"title":{},"body":{"injectables/ExcelService.html":{}}}],["mobile",{"_index":1551,"title":{},"body":{"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"index.html":{}}}],["models/dtos/error",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["models/enums/article",{"_index":494,"title":{},"body":{"controllers/ArticleController.html":{}}}],["models/enums/language.enum",{"_index":493,"title":{},"body":{"controllers/ArticleController.html":{},"classes/PushTokenDto.html":{}}}],["module",{"_index":160,"title":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"modules/AuthModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/ExcelModule.html":{},"modules/FileModule.html":{},"modules/PushNotificationModule.html":{},"modules/SentryModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"modules/AuthModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/ExcelModule.html":{},"modules/FileModule.html":{},"modules/PushNotificationModule.html":{},"modules/SentryModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["modules",{"_index":162,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"modules/AuthModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/ExcelModule.html":{},"modules/FileModule.html":{},"modules/PushNotificationModule.html":{},"modules/SentryModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["moment",{"_index":517,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"dependencies.html":{}}}],["moment().add(30",{"_index":1128,"title":{},"body":{"injectables/AuthService.html":{}}}],["moment().todate",{"_index":1116,"title":{},"body":{"injectables/AuthService.html":{}}}],["moment(article.dateofpublication).format('dd.mm.yyyy",{"_index":1235,"title":{},"body":{"injectables/EmailService.html":{}}}],["moment(content[key]).format('dd.mm.yyyy",{"_index":1307,"title":{},"body":{"injectables/ExcelService.html":{}}}],["ms",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["msg.level",{"_index":2093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg.message",{"_index":2094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg.stack",{"_index":2095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg.timestamp",{"_index":2092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multer",{"_index":1377,"title":{},"body":{"injectables/FileService.html":{}}}],["multeroptions",{"_index":1336,"title":{},"body":{"injectables/FileService.html":{}}}],["mutation",{"_index":1774,"title":{},"body":{"classes/TagResolver.html":{},"index.html":{}}}],["mutation(undefined",{"_index":1770,"title":{},"body":{"classes/TagResolver.html":{}}}],["mysql",{"_index":1959,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mysql2",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["n${data",{"_index":1651,"title":{},"body":{"injectables/SentryService.html":{}}}],["n\\t${msg.stack",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"interfaces/UploadedFileDto.html":{},"entities/UserEntity.html":{}}}],["named",{"_index":1452,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["names",{"_index":1273,"title":{},"body":{"injectables/ExcelService.html":{}}}],["need",{"_index":1622,"title":{},"body":{"entities/PushTokenEntity.html":{},"index.html":{}}}],["nest",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/ArticleService.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{},"dependencies.html":{}}}],["nestjs",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"injectables/PushNotificationService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"dependencies.html":{}}}],["nestjs/cli",{"_index":1875,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"classes/CustomValidationPipe.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"modules/ExcelModule.html":{},"injectables/ExcelService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"classes/RequiredParameterPipe.html":{},"modules/SentryModule.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces/features/arguments",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["nestjs/config",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"classes/TagResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"controllers/AuthController.html":{},"injectables/BasicStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PushNotificationController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/ArticleController.html":{},"injectables/FileService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"injectables/CronJobService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":136,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/AuthController.html":{},"controllers/PushNotificationController.html":{},"controllers/TagController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CronJobModule.html":{},"injectables/JwtStrategy.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"dependencies.html":{}}}],["new",{"_index":157,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CheckArticleTypePipe.html":{},"classes/CustomValidationPipe.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PushNotificationService.html":{},"classes/RequiredParameterPipe.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newarticle",{"_index":859,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticle.articletype",{"_index":860,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticle.parent",{"_index":861,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticle.tags",{"_index":871,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticlecontent",{"_index":880,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticlecontent.article",{"_index":888,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticlecontent.body",{"_index":883,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticlecontent.coverimage",{"_index":889,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticlecontent.dateofpublication",{"_index":886,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticlecontent.language",{"_index":885,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticlecontent.title",{"_index":881,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticlecontententities",{"_index":875,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticlecontententities.foreach(item",{"_index":905,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticlecontententity",{"_index":939,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticledto",{"_index":832,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticledto.body[language",{"_index":884,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticledto.coverimage",{"_index":890,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticledto.dateofpublication",{"_index":887,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticledto.parent",{"_index":862,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticledto.tags",{"_index":869,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticledto.title",{"_index":879,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newarticledto.title[language",{"_index":882,"title":{},"body":{"injectables/ArticleService.html":{}}}],["newpassword",{"_index":1056,"title":{},"body":{"injectables/AuthService.html":{}}}],["newrefreshtoken",{"_index":1119,"title":{},"body":{"injectables/AuthService.html":{}}}],["news",{"_index":1475,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/TagDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"properties.html":{}}}],["news.png",{"_index":1239,"title":{},"body":{"injectables/EmailService.html":{}}}],["news.postman_collection.json",{"_index":2027,"title":{},"body":{"index.html":{}}}],["newssmall",{"_index":1245,"title":{},"body":{"injectables/EmailService.html":{}}}],["newtag",{"_index":1668,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["newtag.id",{"_index":1744,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["newtag.language",{"_index":1745,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["newtag.order",{"_index":1750,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["newtag.title",{"_index":1749,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["next",{"_index":2023,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":1953,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["notfoundexception",{"_index":586,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["notfoundexception('cannot",{"_index":1110,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception('tag",{"_index":1754,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["notfoundexception(`article",{"_index":915,"title":{},"body":{"injectables/ArticleService.html":{}}}],["notfoundexception(`user",{"_index":1123,"title":{},"body":{"injectables/AuthService.html":{}}}],["notification",{"_index":904,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{}}}],["notification.controller",{"_index":1540,"title":{},"body":{"modules/PushNotificationModule.html":{}}}],["notification.controller.ts",{"_index":1513,"title":{},"body":{"controllers/PushNotificationController.html":{},"coverage.html":{}}}],["notification.controller.ts:23",{"_index":1523,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["notification.controller.ts:33",{"_index":1519,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["notification.module",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{}}}],["notification.module.ts",{"_index":1539,"title":{},"body":{"modules/PushNotificationModule.html":{}}}],["notification.service",{"_index":848,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/CronJobService.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{}}}],["notification.service.ts",{"_index":1541,"title":{},"body":{"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["notification.service.ts:14",{"_index":1546,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notification.service.ts:25",{"_index":1548,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notification.service.ts:33",{"_index":1547,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notification.service.ts:43",{"_index":1553,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notification.service.ts:77",{"_index":1549,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notification/dto/push",{"_index":1525,"title":{},"body":{"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"coverage.html":{}}}],["notification/push",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"modules/EmailModule.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"coverage.html":{}}}],["notification_icon",{"_index":1584,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notifications",{"_index":1198,"title":{},"body":{"injectables/CronJobService.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"index.html":{}}}],["notifications.'})@delete('token",{"_index":1518,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["notifications.'})@httpcode(200)@post('token",{"_index":1522,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["now",{"_index":1115,"title":{},"body":{"injectables/AuthService.html":{}}}],["npm",{"_index":2013,"title":{},"body":{"index.html":{}}}],["null",{"_index":376,"title":{},"body":{"entities/ArticleContentEntity.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"classes/RequiredParameterPipe.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"entities/UserEntity.html":{}}}],["null,acceptfile",{"_index":1346,"title":{},"body":{"injectables/FileService.html":{}}}],["nullable",{"_index":378,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{},"classes/TagDto.html":{},"entities/UserEntity.html":{}}}],["number",{"_index":78,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ErrorResponse.html":{},"injectables/ExcelService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"classes/StringToNumberPipe.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"interfaces/UploadedFileDto.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["number(value",{"_index":1656,"title":{},"body":{"classes/StringToNumberPipe.html":{}}}],["number.pipe",{"_index":503,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{}}}],["number.pipe.ts",{"_index":1652,"title":{},"body":{"classes/StringToNumberPipe.html":{},"coverage.html":{}}}],["number.pipe.ts:7",{"_index":1654,"title":{},"body":{"classes/StringToNumberPipe.html":{}}}],["numbervalue",{"_index":1655,"title":{},"body":{"classes/StringToNumberPipe.html":{}}}],["object",{"_index":442,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/AuthService.html":{},"interfaces/UploadedFileDto.html":{}}}],["object.keys(columnnames",{"_index":1319,"title":{},"body":{"injectables/ExcelService.html":{}}}],["object.keys(newarticledto.title",{"_index":858,"title":{},"body":{"injectables/ArticleService.html":{}}}],["object.keys(this.xls_column_order",{"_index":1303,"title":{},"body":{"injectables/ExcelService.html":{}}}],["object.values(articletypeenum",{"_index":1176,"title":{},"body":{"classes/CheckArticleTypePipe.html":{}}}],["object.values(languageenum",{"_index":1294,"title":{},"body":{"injectables/ExcelService.html":{}}}],["object.values(this.xls_column_order",{"_index":1301,"title":{},"body":{"injectables/ExcelService.html":{}}}],["objecttype",{"_index":1724,"title":{},"body":{"entities/TagEntity.html":{}}}],["occurred",{"_index":94,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["occurs",{"_index":580,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/PushNotificationService.html":{}}}],["officedocument.spreadsheetml.sheet",{"_index":551,"title":{},"body":{"controllers/ArticleController.html":{}}}],["offset(page",{"_index":797,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["old",{"_index":935,"title":{},"body":{"injectables/ArticleService.html":{},"controllers/AuthController.html":{}}}],["oldarticlecontententity",{"_index":917,"title":{},"body":{"injectables/ArticleService.html":{}}}],["oldarticlecontententity.article.active",{"_index":927,"title":{},"body":{"injectables/ArticleService.html":{}}}],["oldarticlecontententity.article.parent",{"_index":925,"title":{},"body":{"injectables/ArticleService.html":{}}}],["oldarticlecontententity.article.tags",{"_index":931,"title":{},"body":{"injectables/ArticleService.html":{}}}],["oldarticlecontententity.body",{"_index":921,"title":{},"body":{"injectables/ArticleService.html":{}}}],["oldarticlecontententity.coverimage",{"_index":937,"title":{},"body":{"injectables/ArticleService.html":{}}}],["oldarticlecontententity.dateofpublication",{"_index":923,"title":{},"body":{"injectables/ArticleService.html":{}}}],["oldarticlecontententity.title",{"_index":919,"title":{},"body":{"injectables/ArticleService.html":{}}}],["olddatarelativeurl",{"_index":1407,"title":{},"body":{"injectables/FileService.html":{}}}],["olddatarelativeurl.replace",{"_index":1412,"title":{},"body":{"injectables/FileService.html":{}}}],["olddatarelativeurl.startswith",{"_index":1411,"title":{},"body":{"injectables/FileService.html":{}}}],["oldtag",{"_index":1785,"title":{},"body":{"injectables/TagService.html":{}}}],["oldtag.id",{"_index":1791,"title":{},"body":{"injectables/TagService.html":{}}}],["oldtag.language",{"_index":1792,"title":{},"body":{"injectables/TagService.html":{}}}],["ondelete",{"_index":664,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["one",{"_index":936,"title":{},"body":{"injectables/ArticleService.html":{},"entities/UserEntity.html":{}}}],["onetomany",{"_index":682,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["onetomany(undefined",{"_index":653,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["onupdate",{"_index":666,"title":{},"body":{"entities/ArticleEntity.html":{},"entities/PushTokenEntity.html":{}}}],["opened",{"_index":1625,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["operation",{"_index":944,"title":{},"body":{"injectables/ArticleService.html":{}}}],["operations",{"_index":1965,"title":{},"body":{"index.html":{}}}],["operator",{"_index":778,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["optional",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"classes/RequiredParameterPipe.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"entities/UserEntity.html":{}}}],["options",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"injectables/FileService.html":{}}}],["options.interface",{"_index":1379,"title":{},"body":{"injectables/FileService.html":{}}}],["order",{"_index":813,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ExcelService.html":{},"classes/Migrations1691261966905.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["orderkeys",{"_index":1318,"title":{},"body":{"injectables/ExcelService.html":{}}}],["orderkeys.map((key",{"_index":1321,"title":{},"body":{"injectables/ExcelService.html":{}}}],["original",{"_index":1356,"title":{},"body":{"injectables/FileService.html":{}}}],["originalerror",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["originalerror?.error",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["originalerror?.message",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["originalerror?.statuscode",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["originalname",{"_index":1355,"title":{},"body":{"injectables/FileService.html":{},"interfaces/UploadedFileDto.html":{}}}],["otherwise",{"_index":87,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{}}}],["out",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/ExcelModule.html":{},"modules/FileModule.html":{},"modules/PushNotificationModule.html":{},"modules/SentryModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["overview",{"_index":2038,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1869,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":2056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages",{"_index":2014,"title":{},"body":{"index.html":{}}}],["page",{"_index":448,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{}}}],["page_count",{"_index":768,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagination",{"_index":727,"title":{},"body":{"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{}}}],["panel",{"_index":1009,"title":{},"body":{"controllers/AuthController.html":{}}}],["panel.'})@apibadrequestresponse({description",{"_index":988,"title":{},"body":{"controllers/AuthController.html":{}}}],["param",{"_index":486,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"injectables/LocalStrategy.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["param,query",{"_index":733,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["parameter",{"_index":1630,"title":{},"body":{"classes/RequiredParameterPipe.html":{}}}],["parameter(s",{"_index":818,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"classes/BadValidationRequestException.html":{}}}],["parameter.pipe",{"_index":997,"title":{},"body":{"controllers/AuthController.html":{}}}],["parameter.pipe.ts",{"_index":1629,"title":{},"body":{"classes/RequiredParameterPipe.html":{},"coverage.html":{}}}],["parameter.pipe.ts:7",{"_index":1633,"title":{},"body":{"classes/RequiredParameterPipe.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"classes/RequiredParameterPipe.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{}}}],["parent",{"_index":598,"title":{},"body":{"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"classes/ArticleRequestDto.html":{},"classes/Migrations1691261966905.html":{}}}],["parentarticle",{"_index":649,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["parse",{"_index":423,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["passport",{"_index":1165,"title":{},"body":{"injectables/BasicStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["passportmodule.register",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["passportstrategy",{"_index":1164,"title":{},"body":{"injectables/BasicStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1166,"title":{},"body":{"injectables/BasicStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":972,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691666064778.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["passwords",{"_index":1070,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordsareequal",{"_index":1045,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordsareequal(plainpassword",{"_index":1063,"title":{},"body":{"injectables/AuthService.html":{}}}],["path",{"_index":138,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"interfaces/UploadedFileDto.html":{}}}],["path.join(__dirname",{"_index":145,"title":{},"body":{"controllers/AppController.html":{},"injectables/EmailService.html":{}}}],["pattern",{"_index":722,"title":{},"body":{"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{}}}],["pattern.replace",{"_index":819,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["payload",{"_index":980,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{}}}],["payload.model",{"_index":1087,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{}}}],["payload.model.ts",{"_index":1427,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.sub",{"_index":1441,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payloadtoolargeexception",{"_index":567,"title":{},"body":{"controllers/ArticleController.html":{}}}],["per",{"_index":457,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{}}}],["pick",{"_index":900,"title":{},"body":{"injectables/ArticleService.html":{}}}],["pipe",{"_index":1170,"title":{},"body":{"classes/CheckArticleTypePipe.html":{},"classes/RequiredParameterPipe.html":{},"classes/StringToNumberPipe.html":{}}}],["pipetransform",{"_index":1172,"title":{},"body":{"classes/CheckArticleTypePipe.html":{},"classes/RequiredParameterPipe.html":{},"classes/StringToNumberPipe.html":{}}}],["plain",{"_index":1067,"title":{},"body":{"injectables/AuthService.html":{}}}],["plainpassword",{"_index":1069,"title":{},"body":{"injectables/AuthService.html":{}}}],["please",{"_index":95,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["png",{"_index":1396,"title":{},"body":{"injectables/FileService.html":{}}}],["port",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":487,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthController.html":{},"controllers/PushNotificationController.html":{},"controllers/TagController.html":{}}}],["post(':articletype",{"_index":572,"title":{},"body":{"controllers/ArticleController.html":{}}}],["post('refresh",{"_index":1030,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('sign",{"_index":1010,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('token",{"_index":1530,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["postman",{"_index":2029,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":409,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/AuthController.html":{},"controllers/PushNotificationController.html":{},"controllers/TagController.html":{}}}],["prerequisites",{"_index":1999,"title":{},"body":{"index.html":{}}}],["present",{"_index":458,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleService.html":{},"classes/RequiredParameterPipe.html":{}}}],["present.'})@get(':articletype",{"_index":724,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["present.'})@get('autocomplete/:articletype",{"_index":730,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["preview",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["primary",{"_index":1472,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{}}}],["primarycolumn",{"_index":1617,"title":{},"body":{"entities/PushTokenEntity.html":{},"entities/TagEntity.html":{}}}],["primarycolumn('enum",{"_index":1726,"title":{},"body":{"entities/TagEntity.html":{}}}],["primarygeneratedcolumn",{"_index":387,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{},"entities/UserEntity.html":{}}}],["priority",{"_index":1578,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["private",{"_index":68,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["process.env.backend_api_key",{"_index":1167,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["process.env.backend_api_secret",{"_index":1168,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["process.env.jwt_secret",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.mysql_database",{"_index":2060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_host",{"_index":2058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_password",{"_index":2062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_user",{"_index":2061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.server_url",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["prod",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["project",{"_index":1941,"title":{},"body":{"index.html":{}}}],["promise",{"_index":124,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":1406,"title":{},"body":{"injectables/FileService.html":{}}}],["properties",{"_index":356,"title":{"properties.html":{}},"body":{"entities/ArticleContentEntity.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"classes/ArticleRequestDto.html":{},"classes/BadValidationRequestException.html":{},"classes/ErrorResponse.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"interfaces/UploadedFileDto.html":{},"entities/UserEntity.html":{},"properties.html":{}}}],["properties.join",{"_index":1153,"title":{},"body":{"classes/BadValidationRequestException.html":{}}}],["properties.length",{"_index":1150,"title":{},"body":{"classes/BadValidationRequestException.html":{}}}],["properties.push(error.property",{"_index":1149,"title":{},"body":{"classes/BadValidationRequestException.html":{}}}],["property",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["provide",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["provided",{"_index":1006,"title":{},"body":{"controllers/AuthController.html":{}}}],["provided.'})@apibearerauth()@useguards(undefined)@get('sign",{"_index":983,"title":{},"body":{"controllers/AuthController.html":{}}}],["provided.'})@apiconflictresponse({description",{"_index":989,"title":{},"body":{"controllers/AuthController.html":{}}}],["providers",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"modules/AuthModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/ExcelModule.html":{},"modules/FileModule.html":{},"modules/PushNotificationModule.html":{},"modules/SentryModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["provides",{"_index":1956,"title":{},"body":{"index.html":{}}}],["public",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"classes/ErrorResponse.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"entities/UserEntity.html":{}}}],["publicated",{"_index":706,"title":{},"body":{"classes/ArticleRequestDto.html":{}}}],["publication",{"_index":1281,"title":{},"body":{"injectables/ExcelService.html":{}}}],["published",{"_index":611,"title":{},"body":{"classes/ArticleDto.html":{}}}],["purpose",{"_index":1612,"title":{},"body":{"entities/PushTokenEntity.html":{},"index.html":{}}}],["purposes",{"_index":899,"title":{},"body":{"injectables/ArticleService.html":{},"miscellaneous/variables.html":{}}}],["push",{"_index":694,"title":{},"body":{"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/CronJobService.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"index.html":{}}}],["push_notification_service",{"_index":1588,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["push_token",{"_index":1483,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["pushnotificationcontroller",{"_index":1512,"title":{"controllers/PushNotificationController.html":{}},"body":{"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"coverage.html":{}}}],["pushnotificationmodule",{"_index":179,"title":{"modules/PushNotificationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/PushNotificationModule.html":{},"modules.html":{},"overview.html":{}}}],["pushnotificationservice",{"_index":829,"title":{"injectables/PushNotificationService.html":{}},"body":{"injectables/ArticleService.html":{},"injectables/CronJobService.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["pushtokendto",{"_index":1517,"title":{"classes/PushTokenDto.html":{}},"body":{"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"coverage.html":{}}}],["pushtokenentity",{"_index":228,"title":{"entities/PushTokenEntity.html":{}},"body":{"modules/AppModule.html":{},"modules/CronJobModule.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"coverage.html":{}}}],["pushtokenrepository",{"_index":1544,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["pushtokens",{"_index":1589,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["pushtokens.length",{"_index":1591,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["pushtokens[math.floor(math.random",{"_index":1592,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["put",{"_index":488,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/TagController.html":{}}}],["put(':articlecontentid",{"_index":589,"title":{},"body":{"controllers/ArticleController.html":{}}}],["put(':id/activity",{"_index":592,"title":{},"body":{"controllers/ArticleController.html":{}}}],["query",{"_index":489,"title":{},"body":{"controllers/ArticleController.html":{},"classes/TagResolver.html":{},"dependencies.html":{},"index.html":{}}}],["query('count",{"_index":561,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{}}}],["query('page",{"_index":560,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{}}}],["query('pattern",{"_index":739,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["query('tagid",{"_index":563,"title":{},"body":{"controllers/ArticleController.html":{}}}],["query(undefined",{"_index":1772,"title":{},"body":{"classes/TagResolver.html":{}}}],["queryrunner",{"_index":1464,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{}}}],["queryrunner.query(`alter",{"_index":1488,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1692270732657.html":{}}}],["queryrunner.query(`create",{"_index":1468,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{}}}],["queryrunner.query(`drop",{"_index":1501,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{}}}],["quick",{"_index":473,"title":{},"body":{"controllers/ArticleController.html":{}}}],["rand",{"_index":1090,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["random",{"_index":1060,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{}}}],["randomname",{"_index":1385,"title":{},"body":{"injectables/FileService.html":{}}}],["randomname}${extname(originalname",{"_index":1386,"title":{},"body":{"injectables/FileService.html":{}}}],["randomtoken",{"_index":1089,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PushNotificationService.html":{}}}],["randomtoken.generate(refresh_token_size",{"_index":1130,"title":{},"body":{"injectables/AuthService.html":{}}}],["randomtoken.language",{"_index":1595,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["randomtoken.token",{"_index":1593,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["raw",{"_index":772,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["readonly",{"_index":67,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{}}}],["real",{"_index":536,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/AuthService.html":{}}}],["reduced",{"_index":1365,"title":{},"body":{"injectables/FileService.html":{}}}],["refactored",{"_index":808,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["refer",{"_index":2019,"title":{},"body":{"index.html":{}}}],["referencedcolumnname",{"_index":406,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{}}}],["references",{"_index":1493,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["reflect",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":960,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/UserEntity.html":{}}}],["refresh_token",{"_index":1505,"title":{},"body":{"classes/Migrations1691666064778.html":{},"entities/UserEntity.html":{}}}],["refresh_token_size",{"_index":1088,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshaccesstoken",{"_index":954,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshaccesstoken(refreshtoken",{"_index":958,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshaccesstoken(userid",{"_index":1072,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":968,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/UserEntity.html":{}}}],["relations",{"_index":811,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{}}}],["remove",{"_index":581,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/FileService.html":{},"injectables/PushNotificationService.html":{}}}],["removefilefromsystem",{"_index":1339,"title":{},"body":{"injectables/FileService.html":{}}}],["removefilefromsystem(fileurl",{"_index":1357,"title":{},"body":{"injectables/FileService.html":{}}}],["repo",{"_index":2008,"title":{},"body":{"index.html":{}}}],["repository",{"_index":754,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PushNotificationService.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"index.html":{}}}],["req",{"_index":992,"title":{},"body":{"controllers/AuthController.html":{}}}],["reqeust",{"_index":699,"title":{},"body":{"classes/ArticleRequestDto.html":{}}}],["request",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"classes/BadValidationRequestException.html":{},"classes/CustomValidationPipe.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtRequest.html":{},"injectables/LocalStrategy.html":{}}}],["request.dto",{"_index":509,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["request.dto.ts",{"_index":696,"title":{},"body":{"classes/ArticleRequestDto.html":{},"coverage.html":{}}}],["request.dto.ts:12",{"_index":702,"title":{},"body":{"classes/ArticleRequestDto.html":{}}}],["request.dto.ts:17",{"_index":708,"title":{},"body":{"classes/ArticleRequestDto.html":{}}}],["request.dto.ts:22",{"_index":703,"title":{},"body":{"classes/ArticleRequestDto.html":{}}}],["request.dto.ts:28",{"_index":709,"title":{},"body":{"classes/ArticleRequestDto.html":{}}}],["request.dto.ts:33",{"_index":705,"title":{},"body":{"classes/ArticleRequestDto.html":{}}}],["request.dto.ts:9",{"_index":713,"title":{},"body":{"classes/ArticleRequestDto.html":{}}}],["request.exception",{"_index":1205,"title":{},"body":{"classes/CustomValidationPipe.html":{}}}],["request.exception.ts",{"_index":1137,"title":{},"body":{"classes/BadValidationRequestException.html":{},"coverage.html":{}}}],["request.exception.ts:7",{"_index":1144,"title":{},"body":{"classes/BadValidationRequestException.html":{}}}],["request.model",{"_index":999,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.model.ts",{"_index":1428,"title":{},"body":{"interfaces/JwtRequest.html":{},"coverage.html":{}}}],["request.url",{"_index":101,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["requests",{"_index":2031,"title":{},"body":{"index.html":{}}}],["require('../package.json",{"_index":351,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":1023,"title":{},"body":{"controllers/AuthController.html":{},"classes/RequiredParameterPipe.html":{},"index.html":{}}}],["requiredparameterpipe",{"_index":995,"title":{"classes/RequiredParameterPipe.html":{}},"body":{"controllers/AuthController.html":{},"classes/RequiredParameterPipe.html":{},"coverage.html":{}}}],["res",{"_index":132,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{}}}],["reset",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"modules/AuthModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/ExcelModule.html":{},"modules/FileModule.html":{},"modules/PushNotificationModule.html":{},"modules/SentryModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["resize",{"_index":1363,"title":{},"body":{"injectables/FileService.html":{}}}],["resized",{"_index":1366,"title":{},"body":{"injectables/FileService.html":{}}}],["resizeimage",{"_index":1340,"title":{},"body":{"injectables/FileService.html":{}}}],["resizeimage(path",{"_index":1361,"title":{},"body":{"injectables/FileService.html":{}}}],["resizing",{"_index":1405,"title":{},"body":{"injectables/FileService.html":{}}}],["resolve(false",{"_index":1415,"title":{},"body":{"injectables/FileService.html":{}}}],["resolve(true",{"_index":1416,"title":{},"body":{"injectables/FileService.html":{}}}],["resolver",{"_index":1775,"title":{},"body":{"classes/TagResolver.html":{}}}],["resolver((of",{"_index":1776,"title":{},"body":{"classes/TagResolver.html":{}}}],["resolvers",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["response",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/BadValidationRequestException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{}}}],["response.dto",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["response.dto.ts",{"_index":1248,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["response.dto.ts:11",{"_index":1252,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["response.dto.ts:16",{"_index":1255,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["response.dto.ts:6",{"_index":1249,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["response.set('content",{"_index":549,"title":{},"body":{"controllers/ArticleController.html":{}}}],["response.setheader('content",{"_index":149,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{}}}],["response.status(200).send(excelbuffer",{"_index":552,"title":{},"body":{"controllers/ArticleController.html":{}}}],["responsebody",{"_index":89,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["rest",{"_index":1955,"title":{},"body":{"index.html":{}}}],["restrict",{"_index":665,"title":{},"body":{"entities/ArticleEntity.html":{},"classes/Migrations1691261966905.html":{}}}],["restrict'})@joincolumn(['undefined",{"_index":667,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["results",{"_index":105,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"classes/CustomValidationPipe.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/ErrorResponse.html":{},"modules/ExcelModule.html":{},"injectables/ExcelService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"modules/SentryModule.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"modules/TagModule.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"interfaces/UploadedFileDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":85,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"classes/RequiredParameterPipe.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1138,"title":{},"body":{"classes/BadValidationRequestException.html":{}}}],["returns",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"classes/RequiredParameterPipe.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"miscellaneous/functions.html":{}}}],["ro",{"_index":1076,"title":{},"body":{"injectables/AuthService.html":{}}}],["root",{"_index":1988,"title":{},"body":{"index.html":{}}}],["rootpath",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["rotate",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["row",{"_index":1272,"title":{},"body":{"injectables/ExcelService.html":{}}}],["rowinfo",{"_index":1288,"title":{},"body":{"injectables/ExcelService.html":{}}}],["rows",{"_index":1271,"title":{},"body":{"injectables/ExcelService.html":{}}}],["rows.map",{"_index":1325,"title":{},"body":{"injectables/ExcelService.html":{}}}],["run",{"_index":1991,"title":{},"body":{"index.html":{}}}],["running",{"_index":1983,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["sample",{"_index":117,"title":{},"body":{"controllers/AppController.html":{},"injectables/EmailService.html":{},"entities/PushTokenEntity.html":{},"index.html":{}}}],["sample.pdf",{"_index":148,"title":{},"body":{"controllers/AppController.html":{}}}],["save",{"_index":1521,"title":{},"body":{"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{}}}],["saved",{"_index":941,"title":{},"body":{"injectables/ArticleService.html":{},"entities/PushTokenEntity.html":{},"interfaces/UploadedFileDto.html":{}}}],["savedtag",{"_index":1747,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["savetoken",{"_index":1515,"title":{},"body":{"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{}}}],["savetoken(@body",{"_index":1531,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["savetoken(token",{"_index":1520,"title":{},"body":{"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{}}}],["scenario",{"_index":537,"title":{},"body":{"controllers/ArticleController.html":{}}}],["schedulemodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":2021,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":1978,"title":{},"body":{"index.html":{}}}],["search",{"_index":719,"title":{},"body":{"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"miscellaneous/enumerations.html":{}}}],["search(@param('articletype",{"_index":738,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["search(articletype",{"_index":721,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["search.controller",{"_index":747,"title":{},"body":{"modules/ArticleSearchModule.html":{}}}],["search.controller.ts",{"_index":717,"title":{},"body":{"controllers/ArticleSearchController.html":{},"coverage.html":{}}}],["search.controller.ts:34",{"_index":725,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["search.controller.ts:53",{"_index":731,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["search.module",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["search.module.ts",{"_index":746,"title":{},"body":{"modules/ArticleSearchModule.html":{}}}],["search.service",{"_index":735,"title":{},"body":{"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{}}}],["search.service.ts",{"_index":749,"title":{},"body":{"injectables/ArticleSearchService.html":{},"coverage.html":{}}}],["search.service.ts:11",{"_index":755,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["search.service.ts:25",{"_index":765,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["search.service.ts:73",{"_index":770,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["search.service.ts:99",{"_index":758,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["searcharticles",{"_index":751,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["searcharticles(articletype",{"_index":764,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["searchautocomplete",{"_index":720,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["searchautocomplete(@param('articletype",{"_index":742,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["searchautocomplete(articletype",{"_index":728,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["searchautocompletearticle",{"_index":752,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["searchautocompletearticle(articletype",{"_index":769,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["searching",{"_index":726,"title":{},"body":{"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{}}}],["secret",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["secretorkey",{"_index":1440,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["select",{"_index":1120,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"entities/UserEntity.html":{}}}],["selectquerybuilder",{"_index":773,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["send",{"_index":896,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/EmailService.html":{},"injectables/LocalStrategy.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{}}}],["sendcookietorandomdevice",{"_index":1542,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["sendemail",{"_index":1216,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendemail(article",{"_index":1220,"title":{},"body":{"injectables/EmailService.html":{}}}],["sending",{"_index":1194,"title":{},"body":{"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"index.html":{}}}],["sendpushnotificationtotopic",{"_index":1543,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["sendpushnotificationtotopic(article",{"_index":1552,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["sense",{"_index":1611,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["sent",{"_index":1246,"title":{},"body":{"injectables/EmailService.html":{},"injectables/PushNotificationService.html":{}}}],["sentry",{"_index":1646,"title":{},"body":{"injectables/SentryService.html":{},"index.html":{}}}],["sentry.captureexception(`${message",{"_index":1650,"title":{},"body":{"injectables/SentryService.html":{}}}],["sentry.service",{"_index":1640,"title":{},"body":{"modules/SentryModule.html":{}}}],["sentry/node",{"_index":1647,"title":{},"body":{"injectables/SentryService.html":{},"dependencies.html":{}}}],["sentry/sentry.module",{"_index":1213,"title":{},"body":{"modules/EmailModule.html":{},"modules/FileModule.html":{}}}],["sentry/sentry.service",{"_index":1223,"title":{},"body":{"injectables/EmailService.html":{},"injectables/FileService.html":{}}}],["sentrymodule",{"_index":180,"title":{"modules/SentryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/FileModule.html":{},"modules/SentryModule.html":{},"modules.html":{},"overview.html":{}}}],["sentryservice",{"_index":25,"title":{"injectables/SentryService.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"modules/SentryModule.html":{},"injectables/SentryService.html":{},"coverage.html":{},"overview.html":{}}}],["server",{"_index":93,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArticleRequestDto.html":{},"index.html":{}}}],["server_url",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server_url}/${article.coverimage",{"_index":1234,"title":{},"body":{"injectables/EmailService.html":{}}}],["serveroot",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["serves",{"_index":1222,"title":{},"body":{"injectables/EmailService.html":{},"index.html":{}}}],["servestaticmodule",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["services/cron",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["services/email/email.module",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["services/excel/excel.module",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["services/file/file.module",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["services/sentry/sentry.module",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["services/sentry/sentry.service",{"_index":137,"title":{},"body":{"controllers/AppController.html":{}}}],["serving",{"_index":121,"title":{},"body":{"controllers/AppController.html":{},"index.html":{},"properties.html":{}}}],["session",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticleController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["setandreturnnewrefreshtoken",{"_index":1046,"title":{},"body":{"injectables/AuthService.html":{}}}],["setandreturnnewrefreshtoken(user",{"_index":1074,"title":{},"body":{"injectables/AuthService.html":{}}}],["setarticleactivity",{"_index":415,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["setarticleactivity(@param('id",{"_index":593,"title":{},"body":{"controllers/ArticleController.html":{}}}],["setarticleactivity(articlecontentid",{"_index":462,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["sharp",{"_index":1384,"title":{},"body":{"injectables/FileService.html":{},"dependencies.html":{}}}],["sharp(buffer).tofile(path",{"_index":1403,"title":{},"body":{"injectables/FileService.html":{}}}],["sharp(path",{"_index":1398,"title":{},"body":{"injectables/FileService.html":{}}}],["sheet",{"_index":1279,"title":{},"body":{"injectables/ExcelService.html":{}}}],["sheet['!cols",{"_index":1327,"title":{},"body":{"injectables/ExcelService.html":{}}}],["sheet['!rows",{"_index":1328,"title":{},"body":{"injectables/ExcelService.html":{}}}],["sheetfromaoa",{"_index":1266,"title":{},"body":{"injectables/ExcelService.html":{}}}],["sheetfromaoa(rows",{"_index":1276,"title":{},"body":{"injectables/ExcelService.html":{}}}],["short",{"_index":601,"title":{},"body":{"classes/ArticleDto.html":{}}}],["shortcut",{"_index":1696,"title":{},"body":{"classes/TagDto.html":{}}}],["sign",{"_index":965,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signinuser",{"_index":955,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signinuser(username",{"_index":971,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signoptions",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["signoutuser",{"_index":956,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signoutuser(@req",{"_index":1028,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoutuser(jwtpayload",{"_index":1078,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoutuser(request",{"_index":978,"title":{},"body":{"controllers/AuthController.html":{}}}],["signupuser",{"_index":957,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupuser(username",{"_index":985,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["size",{"_index":569,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/FileService.html":{},"interfaces/UploadedFileDto.html":{}}}],["skip",{"_index":908,"title":{},"body":{"injectables/ArticleService.html":{}}}],["smtp.freesmtpservers.com",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["sound",{"_index":1580,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"classes/CustomValidationPipe.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/ErrorResponse.html":{},"modules/ExcelModule.html":{},"injectables/ExcelService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"modules/SentryModule.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"modules/TagModule.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"interfaces/UploadedFileDto.html":{},"entities/UserEntity.html":{},"index.html":{}}}],["source.ts",{"_index":1832,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["spaces",{"_index":763,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["specific",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["specified",{"_index":1802,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["sqlquery",{"_index":786,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["src/.../app.module.ts",{"_index":2052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.service.ts",{"_index":2053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../article",{"_index":1931,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../cache",{"_index":1933,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../constants.ts",{"_index":2050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../data",{"_index":2048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database",{"_index":2049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../language.enum.ts",{"_index":1935,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger",{"_index":2051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1938,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":110,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:23",{"_index":127,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:32",{"_index":119,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module",{"_index":1224,"title":{},"body":{"injectables/EmailService.html":{},"injectables/FileService.html":{}}}],["src/app.module.ts",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":349,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts:7",{"_index":350,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/data",{"_index":1831,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/database",{"_index":1836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/logger",{"_index":1838,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/schema.gql",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["src/constants",{"_index":520,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"entities/PushTokenEntity.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["src/constants.ts",{"_index":1839,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/endpoints/article/article",{"_index":354,"title":{},"body":{"entities/ArticleContentEntity.html":{},"classes/ArticleDto.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["src/endpoints/article/article.controller.ts",{"_index":408,"title":{},"body":{"controllers/ArticleController.html":{},"coverage.html":{}}}],["src/endpoints/article/article.controller.ts:131",{"_index":482,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/endpoints/article/article.controller.ts:160",{"_index":467,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/endpoints/article/article.controller.ts:40",{"_index":438,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/endpoints/article/article.controller.ts:57",{"_index":441,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/endpoints/article/article.controller.ts:76",{"_index":452,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/endpoints/article/article.controller.ts:98",{"_index":428,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/endpoints/article/article.entity",{"_index":844,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/endpoints/article/article.entity.ts",{"_index":646,"title":{},"body":{"entities/ArticleEntity.html":{},"coverage.html":{}}}],["src/endpoints/article/article.entity.ts:10",{"_index":660,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["src/endpoints/article/article.entity.ts:13",{"_index":657,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["src/endpoints/article/article.entity.ts:16",{"_index":652,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["src/endpoints/article/article.entity.ts:19",{"_index":662,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["src/endpoints/article/article.entity.ts:25",{"_index":677,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["src/endpoints/article/article.entity.ts:28",{"_index":655,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["src/endpoints/article/article.entity.ts:35",{"_index":668,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["src/endpoints/article/article.entity.ts:38",{"_index":659,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["src/endpoints/article/article.entity.ts:51",{"_index":675,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["src/endpoints/article/article.module.ts",{"_index":690,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/endpoints/article/article.service.ts",{"_index":822,"title":{},"body":{"injectables/ArticleService.html":{},"coverage.html":{}}}],["src/endpoints/article/article.service.ts:112",{"_index":838,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/endpoints/article/article.service.ts:167",{"_index":836,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/endpoints/article/article.service.ts:194",{"_index":843,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/endpoints/article/article.service.ts:22",{"_index":830,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/endpoints/article/article.service.ts:276",{"_index":841,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/endpoints/article/article.service.ts:294",{"_index":835,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/endpoints/article/article.service.ts:41",{"_index":833,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/endpoints/article/dto/article",{"_index":508,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleRequestDto.html":{},"injectables/ArticleService.html":{},"coverage.html":{}}}],["src/endpoints/article/dto/article.dto",{"_index":504,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{}}}],["src/endpoints/article/dto/article.dto.ts",{"_index":596,"title":{},"body":{"classes/ArticleDto.html":{},"coverage.html":{}}}],["src/endpoints/article/dto/article.dto.ts:10",{"_index":606,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/endpoints/article/dto/article.dto.ts:16",{"_index":612,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/endpoints/article/dto/article.dto.ts:18",{"_index":605,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/endpoints/article/dto/article.dto.ts:23",{"_index":613,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/endpoints/article/dto/article.dto.ts:28",{"_index":603,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/endpoints/article/dto/article.dto.ts:33",{"_index":607,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/endpoints/article/dto/article.dto.ts:38",{"_index":610,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/endpoints/article/dto/article.dto.ts:43",{"_index":615,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/endpoints/article/dto/article.dto.ts:48",{"_index":602,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/endpoints/article/dto/article.dto.ts:6",{"_index":604,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/endpoints/article/dto/article.dto.ts:8",{"_index":619,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/endpoints/article/search/article",{"_index":716,"title":{},"body":{"controllers/ArticleSearchController.html":{},"modules/ArticleSearchModule.html":{},"injectables/ArticleSearchService.html":{},"coverage.html":{}}}],["src/endpoints/auth/auth.controller.ts",{"_index":952,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/endpoints/auth/auth.controller.ts:35",{"_index":991,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/endpoints/auth/auth.controller.ts:57",{"_index":977,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/endpoints/auth/auth.controller.ts:80",{"_index":984,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/endpoints/auth/auth.controller.ts:96",{"_index":967,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/endpoints/auth/auth.module.ts",{"_index":1037,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/endpoints/auth/auth.service.ts",{"_index":1041,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/endpoints/auth/auth.service.ts:102",{"_index":1073,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/endpoints/auth/auth.service.ts:13",{"_index":1050,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/endpoints/auth/auth.service.ts:134",{"_index":1084,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/endpoints/auth/auth.service.ts:157",{"_index":1062,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/endpoints/auth/auth.service.ts:180",{"_index":1075,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/endpoints/auth/auth.service.ts:191",{"_index":1058,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/endpoints/auth/auth.service.ts:201",{"_index":1053,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/endpoints/auth/auth.service.ts:212",{"_index":1065,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/endpoints/auth/auth.service.ts:28",{"_index":1081,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/endpoints/auth/auth.service.ts:58",{"_index":1077,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/endpoints/auth/auth.service.ts:80",{"_index":1079,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/endpoints/auth/strategies/basic.strategy.ts",{"_index":1155,"title":{},"body":{"injectables/BasicStrategy.html":{},"coverage.html":{}}}],["src/endpoints/auth/strategies/basic.strategy.ts:10",{"_index":1161,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["src/endpoints/auth/strategies/basic.strategy.ts:21",{"_index":1163,"title":{},"body":{"injectables/BasicStrategy.html":{}}}],["src/endpoints/auth/strategies/jwt.strategy.ts",{"_index":1432,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/endpoints/auth/strategies/jwt.strategy.ts:10",{"_index":1433,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/endpoints/auth/strategies/jwt.strategy.ts:23",{"_index":1435,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/endpoints/auth/strategies/local.strategy.ts",{"_index":1444,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/endpoints/auth/strategies/local.strategy.ts:26",{"_index":1447,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/endpoints/auth/strategies/local.strategy.ts:7",{"_index":1446,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/endpoints/auth/user.entity",{"_index":1086,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/endpoints/auth/user.entity.ts",{"_index":1808,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["src/endpoints/auth/user.entity.ts:10",{"_index":1822,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/endpoints/auth/user.entity.ts:13",{"_index":1815,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/endpoints/auth/user.entity.ts:16",{"_index":1810,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/endpoints/auth/user.entity.ts:23",{"_index":1817,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/endpoints/auth/user.entity.ts:29",{"_index":1812,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/endpoints/auth/user.entity.ts:7",{"_index":1813,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/endpoints/push",{"_index":847,"title":{},"body":{"injectables/ArticleService.html":{},"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"modules/EmailModule.html":{},"controllers/PushNotificationController.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"coverage.html":{}}}],["src/endpoints/tag/dto/tag.dto",{"_index":1286,"title":{},"body":{"injectables/ExcelService.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{}}}],["src/endpoints/tag/dto/tag.dto.ts",{"_index":1691,"title":{},"body":{"classes/TagDto.html":{},"coverage.html":{}}}],["src/endpoints/tag/dto/tag.dto.ts:15",{"_index":1695,"title":{},"body":{"classes/TagDto.html":{}}}],["src/endpoints/tag/dto/tag.dto.ts:23",{"_index":1697,"title":{},"body":{"classes/TagDto.html":{}}}],["src/endpoints/tag/dto/tag.dto.ts:31",{"_index":1700,"title":{},"body":{"classes/TagDto.html":{}}}],["src/endpoints/tag/dto/tag.dto.ts:37",{"_index":1693,"title":{},"body":{"classes/TagDto.html":{}}}],["src/endpoints/tag/tag.controller.ts",{"_index":1659,"title":{},"body":{"controllers/TagController.html":{},"coverage.html":{}}}],["src/endpoints/tag/tag.controller.ts:29",{"_index":1667,"title":{},"body":{"controllers/TagController.html":{}}}],["src/endpoints/tag/tag.controller.ts:39",{"_index":1674,"title":{},"body":{"controllers/TagController.html":{}}}],["src/endpoints/tag/tag.controller.ts:53",{"_index":1678,"title":{},"body":{"controllers/TagController.html":{}}}],["src/endpoints/tag/tag.controller.ts:64",{"_index":1671,"title":{},"body":{"controllers/TagController.html":{}}}],["src/endpoints/tag/tag.entity",{"_index":845,"title":{},"body":{"injectables/ArticleService.html":{},"classes/TagDto.html":{},"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{}}}],["src/endpoints/tag/tag.entity.ts",{"_index":1710,"title":{},"body":{"entities/TagEntity.html":{},"coverage.html":{}}}],["src/endpoints/tag/tag.entity.ts:12",{"_index":1716,"title":{},"body":{"entities/TagEntity.html":{}}}],["src/endpoints/tag/tag.entity.ts:16",{"_index":1718,"title":{},"body":{"entities/TagEntity.html":{}}}],["src/endpoints/tag/tag.entity.ts:20",{"_index":1722,"title":{},"body":{"entities/TagEntity.html":{}}}],["src/endpoints/tag/tag.entity.ts:24",{"_index":1720,"title":{},"body":{"entities/TagEntity.html":{}}}],["src/endpoints/tag/tag.entity.ts:27",{"_index":1713,"title":{},"body":{"entities/TagEntity.html":{}}}],["src/endpoints/tag/tag.module.ts",{"_index":1762,"title":{},"body":{"modules/TagModule.html":{}}}],["src/endpoints/tag/tag.service.ts",{"_index":1780,"title":{},"body":{"injectables/TagService.html":{},"coverage.html":{}}}],["src/endpoints/tag/tag.service.ts:13",{"_index":1781,"title":{},"body":{"injectables/TagService.html":{}}}],["src/endpoints/tag/tag.service.ts:28",{"_index":1782,"title":{},"body":{"injectables/TagService.html":{}}}],["src/endpoints/tag/tag.service.ts:54",{"_index":1786,"title":{},"body":{"injectables/TagService.html":{}}}],["src/endpoints/tag/tag.service.ts:67",{"_index":1787,"title":{},"body":{"injectables/TagService.html":{}}}],["src/endpoints/tag/tag.service.ts:95",{"_index":1784,"title":{},"body":{"injectables/TagService.html":{}}}],["src/filters/all",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/filters/http",{"_index":1417,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/graphql/tag",{"_index":1730,"title":{},"body":{"modules/TagGQLModule.html":{}}}],["src/graphql/tag.resolver.ts",{"_index":1765,"title":{},"body":{"classes/TagResolver.html":{},"coverage.html":{}}}],["src/graphql/tag.resolver.ts:12",{"_index":1773,"title":{},"body":{"classes/TagResolver.html":{}}}],["src/graphql/tag.resolver.ts:17",{"_index":1771,"title":{},"body":{"classes/TagResolver.html":{}}}],["src/graphql/tag.resolver.ts:7",{"_index":1768,"title":{},"body":{"classes/TagResolver.html":{}}}],["src/graphql/tag.service.ts",{"_index":1735,"title":{},"body":{"injectables/TagGQLService.html":{},"coverage.html":{}}}],["src/graphql/tag.service.ts:10",{"_index":1736,"title":{},"body":{"injectables/TagGQLService.html":{}}}],["src/graphql/tag.service.ts:24",{"_index":1737,"title":{},"body":{"injectables/TagGQLService.html":{}}}],["src/graphql/tag.service.ts:47",{"_index":1740,"title":{},"body":{"injectables/TagGQLService.html":{}}}],["src/graphql/tag.service.ts:58",{"_index":1742,"title":{},"body":{"injectables/TagGQLService.html":{}}}],["src/graphql/tag.service.ts:83",{"_index":1739,"title":{},"body":{"injectables/TagGQLService.html":{}}}],["src/main.ts",{"_index":1861,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/migrations/1691261966905",{"_index":1458,"title":{},"body":{"classes/Migrations1691261966905.html":{},"coverage.html":{}}}],["src/migrations/1691666064778",{"_index":1503,"title":{},"body":{"classes/Migrations1691666064778.html":{},"coverage.html":{}}}],["src/migrations/1692270732657",{"_index":1510,"title":{},"body":{"classes/Migrations1692270732657.html":{},"coverage.html":{}}}],["src/models/dtos/error",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ErrorResponse.html":{},"coverage.html":{}}}],["src/models/dtos/uploaded",{"_index":513,"title":{},"body":{"controllers/ArticleController.html":{},"interfaces/UploadedFileDto.html":{},"coverage.html":{}}}],["src/models/enums/article",{"_index":679,"title":{},"body":{"entities/ArticleEntity.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"classes/CheckArticleTypePipe.html":{},"miscellaneous/enumerations.html":{}}}],["src/models/enums/cache",{"_index":524,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"miscellaneous/enumerations.html":{}}}],["src/models/enums/language.enum",{"_index":399,"title":{},"body":{"entities/ArticleContentEntity.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/ExcelService.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["src/models/enums/language.enum.ts",{"_index":1936,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/models/exceptions/bad",{"_index":1135,"title":{},"body":{"classes/BadValidationRequestException.html":{},"classes/CustomValidationPipe.html":{},"coverage.html":{}}}],["src/models/jwt",{"_index":998,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/services/cron",{"_index":1182,"title":{},"body":{"modules/CronJobModule.html":{},"injectables/CronJobService.html":{},"coverage.html":{}}}],["src/services/email/email.module",{"_index":692,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/services/email/email.module.ts",{"_index":1212,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/services/email/email.service",{"_index":846,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/services/email/email.service.ts",{"_index":1215,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/services/email/email.service.ts:11",{"_index":1219,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/services/email/email.service.ts:22",{"_index":1221,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/services/excel/excel.module",{"_index":693,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/services/excel/excel.module.ts",{"_index":1260,"title":{},"body":{"modules/ExcelModule.html":{}}}],["src/services/excel/excel.service",{"_index":849,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/services/excel/excel.service.ts",{"_index":1262,"title":{},"body":{"injectables/ExcelService.html":{},"coverage.html":{}}}],["src/services/excel/excel.service.ts:14",{"_index":1282,"title":{},"body":{"injectables/ExcelService.html":{}}}],["src/services/excel/excel.service.ts:25",{"_index":1285,"title":{},"body":{"injectables/ExcelService.html":{}}}],["src/services/excel/excel.service.ts:36",{"_index":1275,"title":{},"body":{"injectables/ExcelService.html":{}}}],["src/services/excel/excel.service.ts:58",{"_index":1268,"title":{},"body":{"injectables/ExcelService.html":{}}}],["src/services/excel/excel.service.ts:87",{"_index":1278,"title":{},"body":{"injectables/ExcelService.html":{}}}],["src/services/file/file.module",{"_index":695,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/services/file/file.module.ts",{"_index":1333,"title":{},"body":{"modules/FileModule.html":{}}}],["src/services/file/file.service",{"_index":512,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["src/services/file/file.service.ts",{"_index":1335,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["src/services/file/file.service.ts:16",{"_index":1342,"title":{},"body":{"injectables/FileService.html":{}}}],["src/services/file/file.service.ts:25",{"_index":1376,"title":{},"body":{"injectables/FileService.html":{}}}],["src/services/file/file.service.ts:43",{"_index":1354,"title":{},"body":{"injectables/FileService.html":{}}}],["src/services/file/file.service.ts:51",{"_index":1347,"title":{},"body":{"injectables/FileService.html":{}}}],["src/services/file/file.service.ts:65",{"_index":1362,"title":{},"body":{"injectables/FileService.html":{}}}],["src/services/file/file.service.ts:87",{"_index":1358,"title":{},"body":{"injectables/FileService.html":{}}}],["src/services/sentry/sentry.module.ts",{"_index":1639,"title":{},"body":{"modules/SentryModule.html":{}}}],["src/services/sentry/sentry.service",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/services/sentry/sentry.service.ts",{"_index":1641,"title":{},"body":{"injectables/SentryService.html":{},"coverage.html":{}}}],["src/services/sentry/sentry.service.ts:12",{"_index":1645,"title":{},"body":{"injectables/SentryService.html":{}}}],["src/services/sentry/sentry.service.ts:6",{"_index":1643,"title":{},"body":{"injectables/SentryService.html":{}}}],["src/utils/pipes/check",{"_index":499,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"classes/CheckArticleTypePipe.html":{},"coverage.html":{}}}],["src/utils/pipes/required",{"_index":996,"title":{},"body":{"controllers/AuthController.html":{},"classes/RequiredParameterPipe.html":{},"coverage.html":{}}}],["src/utils/pipes/string",{"_index":502,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"classes/StringToNumberPipe.html":{},"coverage.html":{}}}],["src/utils/pipes/validation.pipe",{"_index":516,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/TagController.html":{}}}],["src/utils/pipes/validation.pipe.ts",{"_index":1201,"title":{},"body":{"classes/CustomValidationPipe.html":{},"coverage.html":{}}}],["src/utils/pipes/validation.pipe.ts:7",{"_index":1204,"title":{},"body":{"classes/CustomValidationPipe.html":{}}}],["start",{"_index":2025,"title":{},"body":{"index.html":{}}}],["started",{"_index":1939,"title":{"index.html":{}},"body":{"index.html":{}}}],["starts",{"_index":1408,"title":{},"body":{"injectables/FileService.html":{}}}],["statements",{"_index":1826,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":122,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/FileService.html":{},"dependencies.html":{},"index.html":{}}}],["status",{"_index":77,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{}}}],["status(status",{"_index":1422,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":90,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{}}}],["step",{"_index":2024,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1367,"title":{},"body":{"injectables/FileService.html":{},"index.html":{}}}],["storing",{"_index":1607,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["story",{"_index":1476,"title":{},"body":{"classes/Migrations1691261966905.html":{},"miscellaneous/enumerations.html":{}}}],["storyboard_article_service",{"_index":855,"title":{},"body":{"injectables/ArticleService.html":{}}}],["strategy",{"_index":1157,"title":{},"body":{"injectables/BasicStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":130,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/ErrorResponse.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"interfaces/UploadedFileDto.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["stringified",{"_index":710,"title":{},"body":{"classes/ArticleRequestDto.html":{}}}],["stringtonumberpipe",{"_index":501,"title":{"classes/StringToNumberPipe.html":{}},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"classes/StringToNumberPipe.html":{},"coverage.html":{}}}],["sub",{"_index":1105,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{}}}],["subject",{"_index":1230,"title":{},"body":{"injectables/EmailService.html":{}}}],["subscriptions",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["success",{"_index":1454,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["summary",{"_index":140,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/AuthController.html":{},"controllers/PushNotificationController.html":{},"controllers/TagController.html":{}}}],["super",{"_index":1154,"title":{},"body":{"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CustomValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":1949,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":2036,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1024,"title":{},"body":{"controllers/AuthController.html":{}}}],["synchronize",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":1359,"title":{},"body":{"injectables/FileService.html":{}}}],["table",{"_index":1469,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["tables",{"_index":2022,"title":{},"body":{"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":460,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleRequestDto.html":{},"injectables/ArticleService.html":{},"classes/Migrations1691261966905.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["tag.'})@apinotfoundresponse({description",{"_index":1676,"title":{},"body":{"controllers/TagController.html":{}}}],["tag.'})@delete",{"_index":1670,"title":{},"body":{"controllers/TagController.html":{}}}],["tag.controller",{"_index":1763,"title":{},"body":{"modules/TagModule.html":{}}}],["tag.entity",{"_index":1764,"title":{},"body":{"modules/TagModule.html":{}}}],["tag.id",{"_index":874,"title":{},"body":{"injectables/ArticleService.html":{}}}],["tag.language",{"_index":645,"title":{},"body":{"classes/ArticleDto.html":{}}}],["tag.order",{"_index":1756,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["tag.resolver",{"_index":1733,"title":{},"body":{"modules/TagGQLModule.html":{}}}],["tag.service",{"_index":1680,"title":{},"body":{"controllers/TagController.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{},"classes/TagResolver.html":{}}}],["tag.title",{"_index":1755,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["tag.title).join",{"_index":1309,"title":{},"body":{"injectables/ExcelService.html":{}}}],["tag/dto/tag.dto",{"_index":623,"title":{},"body":{"classes/ArticleDto.html":{}}}],["tag/tag.entity",{"_index":683,"title":{},"body":{"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{}}}],["tag\\`(\\`id\\`,\\`language",{"_index":1499,"title":{},"body":{"classes/Migrations1691261966905.html":{}}}],["tag_id",{"_index":685,"title":{},"body":{"entities/ArticleEntity.html":{},"classes/Migrations1691261966905.html":{}}}],["tag_language",{"_index":686,"title":{},"body":{"entities/ArticleEntity.html":{},"classes/Migrations1691261966905.html":{}}}],["tagcontroller",{"_index":1658,"title":{"controllers/TagController.html":{}},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{},"coverage.html":{}}}],["tagdto",{"_index":614,"title":{"classes/TagDto.html":{}},"body":{"classes/ArticleDto.html":{},"injectables/ExcelService.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["tagdto(savedtag",{"_index":1789,"title":{},"body":{"injectables/TagService.html":{}}}],["tagdto(tag",{"_index":1758,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["tagdto[]).map(tag",{"_index":1308,"title":{},"body":{"injectables/ExcelService.html":{}}}],["tagentity",{"_index":212,"title":{"entities/TagEntity.html":{}},"body":{"modules/AppModule.html":{},"entities/ArticleEntity.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"modules/TagModule.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["tagentity.id",{"_index":1705,"title":{},"body":{"classes/TagDto.html":{}}}],["tagentity.language",{"_index":1706,"title":{},"body":{"classes/TagDto.html":{}}}],["tagentity.order",{"_index":1709,"title":{},"body":{"classes/TagDto.html":{}}}],["tagentity.title",{"_index":1707,"title":{},"body":{"classes/TagDto.html":{}}}],["taggqlmodule",{"_index":181,"title":{"modules/TagGQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TagGQLModule.html":{},"modules.html":{},"overview.html":{}}}],["taggqlservice",{"_index":1729,"title":{"injectables/TagGQLService.html":{}},"body":{"modules/TagGQLModule.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"coverage.html":{},"overview.html":{}}}],["tagid",{"_index":450,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["tagmodule",{"_index":182,"title":{"modules/TagModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TagModule.html":{},"modules.html":{},"overview.html":{}}}],["tagrepository",{"_index":831,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["tagresolver",{"_index":1732,"title":{"classes/TagResolver.html":{}},"body":{"modules/TagGQLModule.html":{},"classes/TagResolver.html":{},"coverage.html":{}}}],["tags",{"_index":424,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"classes/ArticleRequestDto.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/ExcelService.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"miscellaneous/enumerations.html":{}}}],["tags.'})@get",{"_index":1673,"title":{},"body":{"controllers/TagController.html":{}}}],["tags.map(tag",{"_index":1790,"title":{},"body":{"injectables/TagService.html":{}}}],["tagservice",{"_index":1679,"title":{"injectables/TagService.html":{}},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"coverage.html":{},"overview.html":{}}}],["tagsfromdto",{"_index":863,"title":{},"body":{"injectables/ArticleService.html":{}}}],["take",{"_index":812,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{}}}],["takes",{"_index":1449,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["template",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{}}}],["templates",{"_index":1240,"title":{},"body":{"injectables/EmailService.html":{}}}],["templates/emails",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":2032,"title":{},"body":{"index.html":{}}}],["testing",{"_index":535,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/PushNotificationService.html":{}}}],["text/markdown",{"_index":150,"title":{},"body":{"controllers/AppController.html":{}}}],["this.active",{"_index":637,"title":{},"body":{"classes/ArticleDto.html":{}}}],["this.appservice.getversion",{"_index":141,"title":{},"body":{"controllers/AppController.html":{}}}],["this.articlecontentid",{"_index":625,"title":{},"body":{"classes/ArticleDto.html":{}}}],["this.articlecontentrepository",{"_index":787,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["this.articlecontentrepository.find",{"_index":801,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{}}}],["this.articlecontentrepository.findone",{"_index":914,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlecontentrepository.save(newarticlecontententities",{"_index":892,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlecontentrepository.save(oldarticlecontententity",{"_index":940,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlerepository.update(articlecontententity.article.id",{"_index":947,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.articlesearchservice.searcharticles(articletype",{"_index":740,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["this.articlesearchservice.searchautocompletearticle(articletype",{"_index":743,"title":{},"body":{"controllers/ArticleSearchController.html":{}}}],["this.articleservice.createarticle(articletype",{"_index":583,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.exportarticles",{"_index":545,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.getarticlebyid(articlecontentid",{"_index":557,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.getarticlesbytypeandfilter(articletype",{"_index":564,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.setarticleactivity(articlecontentid",{"_index":595,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.updatearticlebyid(articlecontentid",{"_index":591,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articlestoaoa(articles.filter((article",{"_index":1295,"title":{},"body":{"injectables/ExcelService.html":{}}}],["this.articletype",{"_index":631,"title":{},"body":{"classes/ArticleDto.html":{}}}],["this.authservice.refreshaccesstoken(userid",{"_index":1033,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signinuser(username",{"_index":1025,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signoutuser(request.jwtpayload",{"_index":1029,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signupuser(username",{"_index":1013,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":1455,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.body",{"_index":635,"title":{},"body":{"classes/ArticleDto.html":{}}}],["this.cachemanager.del(cachekeyenum.articles",{"_index":894,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.cachemanager.del(cachekeyenum.search",{"_index":895,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.cachemanager.del(cachekeyenum.tags",{"_index":1788,"title":{},"body":{"injectables/TagService.html":{}}}],["this.checksearchpattern(pattern",{"_index":775,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["this.coverimage",{"_index":641,"title":{},"body":{"classes/ArticleDto.html":{}}}],["this.cryptnewpassword(password",{"_index":1096,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.dateofpublication",{"_index":629,"title":{},"body":{"classes/ArticleDto.html":{}}}],["this.deletetoken",{"_index":1600,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.emailservice.sendemail(new",{"_index":902,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.excelservice.exportarticles(articles.map(article",{"_index":949,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.fileservice.removefilefromsystem(coverimagetodelete",{"_index":945,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.fileservice.removefilefromsystem(file.path",{"_index":585,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.fileservice.resizeimage(file.path",{"_index":577,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.generaterefreshtoken",{"_index":1127,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getactiveuser(username",{"_index":1102,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpadapterhost.httpadapter",{"_index":72,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.i18n.translate('data.push_notification_body",{"_index":1569,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.i18n.translate('data.push_notification_body_cookie",{"_index":1596,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.i18n.translate('data.push_notification_title",{"_index":1567,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.i18n.translate('data.push_notification_title_cookie",{"_index":1594,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.id",{"_index":1704,"title":{},"body":{"classes/TagDto.html":{}}}],["this.jwtservice.sign(payload",{"_index":1108,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.language",{"_index":633,"title":{},"body":{"classes/ArticleDto.html":{},"classes/TagDto.html":{}}}],["this.logger.error(`[fileservice",{"_index":1414,"title":{},"body":{"injectables/FileService.html":{}}}],["this.logger.error(`[sentry_service",{"_index":1648,"title":{},"body":{"injectables/SentryService.html":{}}}],["this.logger.error(`[storyboard_article_service",{"_index":866,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.logger.error(`httpexception",{"_index":100,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["this.logger.error(exception.stack",{"_index":1424,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["this.logger.log('error",{"_index":1599,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.logger.log('info",{"_index":854,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"injectables/PushNotificationService.html":{}}}],["this.mailerservice.sendmail",{"_index":1228,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.order",{"_index":1708,"title":{},"body":{"classes/TagDto.html":{}}}],["this.parent",{"_index":639,"title":{},"body":{"classes/ArticleDto.html":{}}}],["this.passwordsareequal(validatedpassword",{"_index":1122,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.pushnotificationservice.deletetoken(token",{"_index":1535,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["this.pushnotificationservice.savetoken(token",{"_index":1532,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["this.pushnotificationservice.sendcookietorandomdevice",{"_index":1200,"title":{},"body":{"injectables/CronJobService.html":{}}}],["this.pushnotificationservice.sendpushnotificationtotopic(item",{"_index":906,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.pushtokenrepository.delete",{"_index":1566,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.pushtokenrepository.find",{"_index":1590,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.pushtokenrepository.save",{"_index":1562,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.sentryservice.captureexception('[email_service_error",{"_index":1247,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.sentryservice.captureexception('error",{"_index":1404,"title":{},"body":{"injectables/FileService.html":{}}}],["this.sentryservice.captureexception(`internal",{"_index":102,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.sentryservice.captureexception(error",{"_index":155,"title":{},"body":{"controllers/AppController.html":{}}}],["this.setandreturnnewrefreshtoken(user",{"_index":1103,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sheetfromaoa(rows",{"_index":1297,"title":{},"body":{"injectables/ExcelService.html":{}}}],["this.signinuser(username",{"_index":1101,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tagrepository.delete",{"_index":1759,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["this.tagrepository.find",{"_index":1751,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["this.tagrepository.findby",{"_index":872,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.tagrepository.findone",{"_index":1753,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["this.tagrepository.findoneby",{"_index":1743,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["this.tagrepository.save",{"_index":1748,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["this.tagrepository.save(tag",{"_index":1757,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["this.tags",{"_index":643,"title":{},"body":{"classes/ArticleDto.html":{}}}],["this.tagservice.createtag(newtag",{"_index":1684,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagservice.createtag(tagdto",{"_index":1779,"title":{},"body":{"classes/TagResolver.html":{}}}],["this.tagservice.deletetag(tag",{"_index":1690,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagservice.getalltags",{"_index":1777,"title":{},"body":{"classes/TagResolver.html":{}}}],["this.tagservice.getalltags(language",{"_index":1686,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagservice.updatetag(tag",{"_index":1688,"title":{},"body":{"controllers/TagController.html":{}}}],["this.title",{"_index":627,"title":{},"body":{"classes/ArticleDto.html":{},"classes/TagDto.html":{}}}],["this.userentityrepository.findone",{"_index":1093,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.userentityrepository.findoneby",{"_index":1111,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userentityrepository.insert",{"_index":1095,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userentityrepository.save(user",{"_index":1104,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userentityrepository.save(userentity",{"_index":1114,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.xls_column_order",{"_index":1298,"title":{},"body":{"injectables/ExcelService.html":{}}}],["this.xls_column_widths[key",{"_index":1322,"title":{},"body":{"injectables/ExcelService.html":{}}}],["throw",{"_index":156,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RequiredParameterPipe.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["thrown",{"_index":1171,"title":{},"body":{"classes/CheckArticleTypePipe.html":{}}}],["throws",{"_index":565,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["time",{"_index":1621,"title":{},"body":{"entities/PushTokenEntity.html":{},"entities/UserEntity.html":{}}}],["timestamp",{"_index":650,"title":{},"body":{"entities/ArticleEntity.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{}}}],["tinyint",{"_index":1477,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{}}}],["title",{"_index":363,"title":{},"body":{"entities/ArticleContentEntity.html":{},"classes/ArticleDto.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/EmailService.html":{},"injectables/ExcelService.html":{},"classes/Migrations1691261966905.html":{},"injectables/PushNotificationService.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["tobuffer",{"_index":1402,"title":{},"body":{"injectables/FileService.html":{}}}],["token",{"_index":962,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1691261966905.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["token.'})@apiunauthorizedresponse({description",{"_index":963,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dto",{"_index":1526,"title":{},"body":{"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{}}}],["token.dto.ts",{"_index":1601,"title":{},"body":{"classes/PushTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:13",{"_index":1602,"title":{},"body":{"classes/PushTokenDto.html":{}}}],["token.dto.ts:8",{"_index":1603,"title":{},"body":{"classes/PushTokenDto.html":{}}}],["token.entity",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/CronJobModule.html":{},"modules/PushNotificationModule.html":{},"injectables/PushNotificationService.html":{}}}],["token.entity.ts",{"_index":1606,"title":{},"body":{"entities/PushTokenEntity.html":{},"coverage.html":{}}}],["token.entity.ts:14",{"_index":1618,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["token.entity.ts:17",{"_index":1616,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["token.entity.ts:20",{"_index":1615,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["token.entity.ts:28",{"_index":1619,"title":{},"body":{"entities/PushTokenEntity.html":{}}}],["token.language",{"_index":1564,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["token.token",{"_index":1563,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["tokenmessage",{"_index":1556,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["tokens",{"_index":1608,"title":{},"body":{"entities/PushTokenEntity.html":{},"entities/UserEntity.html":{}}}],["topic",{"_index":1554,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["topicmessage",{"_index":1557,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["transform",{"_index":1173,"title":{},"body":{"classes/CheckArticleTypePipe.html":{},"classes/CustomValidationPipe.html":{},"classes/RequiredParameterPipe.html":{},"classes/StringToNumberPipe.html":{}}}],["transform(value",{"_index":1174,"title":{},"body":{"classes/CheckArticleTypePipe.html":{},"classes/RequiredParameterPipe.html":{},"classes/StringToNumberPipe.html":{}}}],["transformer",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["transforming",{"_index":1653,"title":{},"body":{"classes/StringToNumberPipe.html":{}}}],["transport",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["transports",{"_index":2076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports.console",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trim",{"_index":821,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["true",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CustomValidationPipe.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"injectables/LocalStrategy.html":{},"classes/TagDto.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["true})@joincolumn(['undefined",{"_index":367,"title":{},"body":{"entities/ArticleContentEntity.html":{}}}],["true})@jointable({name",{"_index":670,"title":{},"body":{"entities/ArticleEntity.html":{}}}],["try",{"_index":144,"title":{},"body":{"controllers/AppController.html":{},"injectables/ArticleService.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{}}}],["ttl",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["two",{"_index":803,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"entities/ArticleContentEntity.html":{},"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"entities/ArticleEntity.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BadValidationRequestException.html":{},"injectables/BasicStrategy.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/CronJobService.html":{},"injectables/EmailService.html":{},"classes/ErrorResponse.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"interfaces/JwtRequest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"controllers/PushNotificationController.html":{},"injectables/PushNotificationService.html":{},"classes/PushTokenDto.html":{},"entities/PushTokenEntity.html":{},"classes/RequiredParameterPipe.html":{},"injectables/SentryService.html":{},"classes/StringToNumberPipe.html":{},"controllers/TagController.html":{},"classes/TagDto.html":{},"entities/TagEntity.html":{},"injectables/TagGQLService.html":{},"classes/TagResolver.html":{},"injectables/TagService.html":{},"interfaces/UploadedFileDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.'})@useinterceptors(cacheinterceptor)@cachekey(cachekeyenum.articles)@get(':articletype",{"_index":451,"title":{},"body":{"controllers/ArticleController.html":{}}}],["type.enum",{"_index":495,"title":{},"body":{"controllers/ArticleController.html":{},"entities/ArticleEntity.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"classes/CheckArticleTypePipe.html":{}}}],["type.enum.ts",{"_index":1932,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.pipe",{"_index":500,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{}}}],["type.pipe.ts",{"_index":1169,"title":{},"body":{"classes/CheckArticleTypePipe.html":{},"coverage.html":{}}}],["type.pipe.ts:8",{"_index":1175,"title":{},"body":{"classes/CheckArticleTypePipe.html":{}}}],["typeof",{"_index":878,"title":{},"body":{"injectables/ArticleService.html":{}}}],["typeorm",{"_index":397,"title":{},"body":{"entities/ArticleContentEntity.html":{},"entities/ArticleEntity.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"entities/TagEntity.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"entities/UserEntity.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"modules/AuthModule.html":{},"modules/CronJobModule.html":{},"modules/PushNotificationModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{}}}],["typeormmodule.forfeature",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{}}}],["typeormmodule.forfeature([articlecontententity",{"_index":748,"title":{},"body":{"modules/ArticleSearchModule.html":{}}}],["typeormmodule.forfeature([pushtokenentity",{"_index":1186,"title":{},"body":{"modules/CronJobModule.html":{},"modules/PushNotificationModule.html":{}}}],["typeormmodule.forfeature([tagentity",{"_index":1734,"title":{},"body":{"modules/TagGQLModule.html":{},"modules/TagModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":1040,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forroot(databaseconfig",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["types/bcrypt",{"_index":1883,"title":{},"body":{"dependencies.html":{}}}],["types/multer",{"_index":1885,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["types/uuid",{"_index":1891,"title":{},"body":{"dependencies.html":{}}}],["typical",{"_index":1963,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":1014,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('email",{"_index":1456,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":1118,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('this",{"_index":1442,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":673,"title":{},"body":{"entities/ArticleEntity.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/RequiredParameterPipe.html":{},"classes/StringToNumberPipe.html":{}}}],["undefined})@httpcode(200)@post(':articletype')@useinterceptors(undefined",{"_index":427,"title":{},"body":{"controllers/ArticleController.html":{}}}],["undefined})@put(':articlecontentid')@useinterceptors(undefined",{"_index":481,"title":{},"body":{"controllers/ArticleController.html":{}}}],["unexpected",{"_index":1152,"title":{},"body":{"classes/BadValidationRequestException.html":{}}}],["unique",{"_index":1008,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Migrations1691666064778.html":{},"classes/TagDto.html":{},"entities/UserEntity.html":{}}}],["unique.'})@httpcode(200)@post('sign",{"_index":990,"title":{},"body":{"controllers/AuthController.html":{}}}],["unlicensed",{"_index":2044,"title":{},"body":{"properties.html":{}}}],["unset",{"_index":938,"title":{},"body":{"injectables/ArticleService.html":{}}}],["unwanted",{"_index":761,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["up",{"_index":986,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{}}}],["up(queryrunner",{"_index":1466,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{}}}],["update",{"_index":478,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/Migrations1691261966905.html":{},"entities/PushTokenEntity.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["updatearticlebyid",{"_index":416,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["updatearticlebyid(@param('articlecontentid",{"_index":590,"title":{},"body":{"controllers/ArticleController.html":{}}}],["updatearticlebyid(articlecontentid",{"_index":476,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["updated",{"_index":483,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleDto.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["updated_at",{"_index":1485,"title":{},"body":{"classes/Migrations1691261966905.html":{},"entities/PushTokenEntity.html":{}}}],["updatedarticle",{"_index":842,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatedarticle.active",{"_index":928,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatedarticle.body",{"_index":922,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatedarticle.coverimage",{"_index":933,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatedarticle.dateofpublication",{"_index":924,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatedarticle.parent",{"_index":926,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatedarticle.title",{"_index":920,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatedarticle.updatedtags",{"_index":929,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatedat",{"_index":1565,"title":{},"body":{"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{}}}],["updatedtags",{"_index":599,"title":{},"body":{"classes/ArticleDto.html":{}}}],["updatetag",{"_index":1663,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["updatetag(@body(customvalidationpipe",{"_index":1687,"title":{},"body":{"controllers/TagController.html":{}}}],["updatetag(newtag",{"_index":1741,"title":{},"body":{"injectables/TagGQLService.html":{},"injectables/TagService.html":{}}}],["updatetag(tag",{"_index":1675,"title":{},"body":{"controllers/TagController.html":{}}}],["updating",{"_index":469,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{}}}],["uploaded",{"_index":1794,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["uploadedfile",{"_index":490,"title":{},"body":{"controllers/ArticleController.html":{}}}],["uploadedfiledto",{"_index":419,"title":{"interfaces/UploadedFileDto.html":{}},"body":{"controllers/ArticleController.html":{},"interfaces/UploadedFileDto.html":{},"coverage.html":{}}}],["uploads",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["uploads/images",{"_index":2072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":704,"title":{},"body":{"classes/ArticleRequestDto.html":{}}}],["use",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArticleSearchService.html":{},"index.html":{}}}],["useclass",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":468,"title":{},"body":{"controllers/ArticleController.html":{},"classes/ArticleRequestDto.html":{},"controllers/ArticleSearchController.html":{},"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":617,"title":{},"body":{"classes/ArticleDto.html":{}}}],["useguards",{"_index":491,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthController.html":{},"controllers/PushNotificationController.html":{}}}],["useguards(authguard('local",{"_index":1017,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard(['basic",{"_index":1528,"title":{},"body":{"controllers/PushNotificationController.html":{}}}],["useguards(authguard(['jwt",{"_index":532,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":492,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/TagController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":553,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ArticleSearchController.html":{},"controllers/TagController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":573,"title":{},"body":{"controllers/ArticleController.html":{}}}],["user",{"_index":969,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ErrorResponse.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691666064778.html":{},"injectables/PushNotificationService.html":{},"entities/PushTokenEntity.html":{},"classes/TagDto.html":{},"entities/UserEntity.html":{}}}],["user's",{"_index":1805,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["user.'})@apiunauthorizedresponse({description",{"_index":973,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.active",{"_index":1124,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user.entity",{"_index":1038,"title":{},"body":{"modules/AuthModule.html":{}}}],["user.expirationdate",{"_index":1117,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":1106,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":1121,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.refreshtoken",{"_index":1126,"title":{},"body":{"injectables/AuthService.html":{}}}],["userentity",{"_index":241,"title":{"entities/UserEntity.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["userentity.expirationdate",{"_index":1113,"title":{},"body":{"injectables/AuthService.html":{}}}],["userentity.refreshtoken",{"_index":1112,"title":{},"body":{"injectables/AuthService.html":{}}}],["userentityrepository",{"_index":1051,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userid",{"_index":959,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["username",{"_index":974,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Migrations1691666064778.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["username/id",{"_index":1431,"title":{},"body":{"interfaces/JwtRequest.html":{}}}],["username/password",{"_index":1967,"title":{},"body":{"index.html":{}}}],["users",{"_index":1254,"title":{},"body":{"classes/ErrorResponse.html":{},"index.html":{}}}],["uses",{"_index":1958,"title":{},"body":{"index.html":{}}}],["using",{"_index":1952,"title":{},"body":{"index.html":{}}}],["utf8_unicode_ci",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uuid",{"_index":1382,"title":{},"body":{"injectables/FileService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":1381,"title":{},"body":{"injectables/FileService.html":{}}}],["v10",{"_index":2003,"title":{},"body":{"index.html":{}}}],["v18",{"_index":2002,"title":{},"body":{"index.html":{}}}],["v20",{"_index":2005,"title":{},"body":{"index.html":{}}}],["v3.7.1",{"_index":1993,"title":{},"body":{"index.html":{}}}],["v4",{"_index":1380,"title":{},"body":{"injectables/FileService.html":{}}}],["v5.7",{"_index":2004,"title":{},"body":{"index.html":{}}}],["valid",{"_index":1026,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CheckArticleTypePipe.html":{},"classes/CustomValidationPipe.html":{},"injectables/LocalStrategy.html":{}}}],["valid.'})@apinotfoundresponse({description",{"_index":981,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate",{"_index":1085,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BasicStrategy.html":{},"classes/CustomValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1434,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":1162,"title":{},"body":{"injectables/BasicStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validatedpassword",{"_index":1083,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":1047,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":1082,"title":{},"body":{"injectables/AuthService.html":{}}}],["validating",{"_index":698,"title":{},"body":{"classes/ArticleRequestDto.html":{},"classes/BadValidationRequestException.html":{}}}],["validation",{"_index":1136,"title":{},"body":{"classes/BadValidationRequestException.html":{},"classes/CustomValidationPipe.html":{},"coverage.html":{}}}],["validationerror",{"_index":1143,"title":{},"body":{"classes/BadValidationRequestException.html":{},"classes/CustomValidationPipe.html":{}}}],["validationpipe",{"_index":1203,"title":{},"body":{"classes/CustomValidationPipe.html":{}}}],["validationpipeoptions",{"_index":1146,"title":{},"body":{"classes/BadValidationRequestException.html":{}}}],["validator",{"_index":714,"title":{},"body":{"classes/ArticleRequestDto.html":{},"classes/BadValidationRequestException.html":{},"injectables/LocalStrategy.html":{},"classes/TagDto.html":{},"dependencies.html":{}}}],["value",{"_index":766,"title":{},"body":{"injectables/ArticleSearchService.html":{},"injectables/ArticleService.html":{},"classes/CheckArticleTypePipe.html":{},"injectables/ExcelService.html":{},"injectables/FileService.html":{},"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{},"classes/RequiredParameterPipe.html":{},"classes/StringToNumberPipe.html":{},"injectables/TagGQLService.html":{},"injectables/TagService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar(255",{"_index":1470,"title":{},"body":{"classes/Migrations1691261966905.html":{},"classes/Migrations1691666064778.html":{},"classes/Migrations1692270732657.html":{}}}],["varchar(32",{"_index":1506,"title":{},"body":{"classes/Migrations1691666064778.html":{}}}],["variable",{"_index":806,"title":{},"body":{"injectables/ArticleSearchService.html":{},"coverage.html":{}}}],["variables",{"_index":2018,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":1099,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":128,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"properties.html":{}}}],["version.'})@get",{"_index":126,"title":{},"body":{"controllers/AppController.html":{}}}],["via",{"_index":472,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/CronJobService.html":{},"index.html":{}}}],["void",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/SentryService.html":{}}}],["wait",{"_index":943,"title":{},"body":{"injectables/ArticleService.html":{}}}],["want",{"_index":942,"title":{},"body":{"injectables/ArticleService.html":{}}}],["watch",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["welcome",{"_index":1940,"title":{},"body":{"index.html":{}}}],["where('content.language",{"_index":791,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["white",{"_index":762,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["whole",{"_index":527,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/PushNotificationService.html":{}}}],["whose",{"_index":970,"title":{},"body":{"controllers/AuthController.html":{}}}],["width",{"_index":1292,"title":{},"body":{"injectables/ExcelService.html":{},"injectables/FileService.html":{}}}],["winston",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/ArticleService.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{},"dependencies.html":{}}}],["winston_module_provider",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ArticleService.html":{},"injectables/EmailService.html":{},"injectables/FileService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/PushNotificationService.html":{},"injectables/SentryService.html":{}}}],["winstonmodule",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forroot(loggerconfig",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmoduleoptions",{"_index":2074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":1803,"title":{},"body":{"interfaces/UploadedFileDto.html":{}}}],["without",{"_index":760,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["workaround",{"_index":802,"title":{},"body":{"injectables/ArticleSearchService.html":{}}}],["workbook",{"_index":1289,"title":{},"body":{"injectables/ExcelService.html":{}}}],["worksheet",{"_index":1280,"title":{},"body":{"injectables/ExcelService.html":{}}}],["world",{"_index":1703,"title":{},"body":{"classes/TagDto.html":{}}}],["wscols",{"_index":1320,"title":{},"body":{"injectables/ExcelService.html":{}}}],["wsrows",{"_index":1324,"title":{},"body":{"injectables/ExcelService.html":{}}}],["x",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["xls_column_order",{"_index":1263,"title":{},"body":{"injectables/ExcelService.html":{}}}],["xls_column_widths",{"_index":1264,"title":{},"body":{"injectables/ExcelService.html":{}}}],["xlsx",{"_index":1290,"title":{},"body":{"injectables/ExcelService.html":{},"dependencies.html":{}}}],["xlsx.utils.aoa_to_sheet(rows",{"_index":1311,"title":{},"body":{"injectables/ExcelService.html":{}}}],["xlsx.utils.book_append_sheet(workbook",{"_index":1299,"title":{},"body":{"injectables/ExcelService.html":{}}}],["xlsx.utils.book_new",{"_index":1293,"title":{},"body":{"injectables/ExcelService.html":{}}}],["xlsx.write(workbook",{"_index":1300,"title":{},"body":{"injectables/ExcelService.html":{}}}],["yes",{"_index":839,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/SentryService.html":{}}}],["yyyy",{"_index":1317,"title":{},"body":{"injectables/ExcelService.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/ArticleSearchModule.html":{},"modules/AuthModule.html":{},"modules/CronJobModule.html":{},"modules/EmailModule.html":{},"modules/ExcelModule.html":{},"modules/FileModule.html":{},"modules/PushNotificationModule.html":{},"modules/SentryModule.html":{},"modules/TagGQLModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/all-exception.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Default error handler catching all but HTTP exceptions.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n                        GqlExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost, sentryService: SentryService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/filters/all-exception.filter.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                        SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        catch\n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exception: Error, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/all-exception.filter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpStatus, Logger, Inject } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { AbstractHttpAdapter, HttpAdapterHost } from '@nestjs/core';\nimport { ContextType, HttpArgumentsHost } from '@nestjs/common/interfaces/features/arguments-host.interface';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { ErrorResponse } from 'src/models/dtos/error-response.dto';\nimport { SentryService } from 'src/services/sentry/sentry.service';\nimport { GqlArgumentsHost, GqlExceptionFilter } from '@nestjs/graphql';\nimport { ExpressAdapter } from '@nestjs/platform-express';\n\n/**\n * Default error handler catching all but HTTP exceptions.\n */\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter, GqlExceptionFilter {\n    constructor(private readonly httpAdapterHost: HttpAdapterHost,\n                private readonly sentryService: SentryService,\n                @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger) {\n    }\n\n    public catch(exception: Error, host: ArgumentsHost): void {\n        const httpAdapter: AbstractHttpAdapter = this.httpAdapterHost.httpAdapter;\n\n        const ctx: HttpArgumentsHost = host.switchToHttp();\n        const response: Response = ctx.getResponse();\n        const request: Request = ctx.getRequest();\n        const status: number = HttpStatus.INTERNAL_SERVER_ERROR;\n\n        const gqlHost: GqlArgumentsHost = GqlArgumentsHost.create(host);\n        const gqlContext: ContextType = gqlHost.getType();\n        \n        // If HTTP context, return JSON response. Otherwise, return GraphQL response.\n        if (gqlContext === 'http') {\n            const responseBody: ErrorResponse = {\n                statusCode: status,\n                message: 'Internal server error occurred, please contact the administrator.',\n                error: exception['message'],\n            };\n            httpAdapter.reply(response, responseBody, status);\n    \n            this.logger.error(`HttpException ${status}: ${request.url}`);\n            this.sentryService.captureException(`Internal server error ${status}: ${request.url}`, exception['stack']);\n        } else {\n            this.logger.error(`HttpException ${status}: ${gqlHost.getInfo().fieldName}`);\n            this.sentryService.captureException(`Internal server error ${status}: ${gqlHost.getInfo().fieldName}`, exception['stack']);\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getSample\n                            \n                            \n                                    \n                                    \n                                    Public\n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        getSample\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSample(response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get sample file.'})@Get('public/sample')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:32\n                \n            \n\n\n            \n                \n                    Example of serving static file from disk.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        getVersion\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVersion()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get backend version.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:23\n                \n            \n\n\n            \n                \n                    Get backend version.\n\n\n                    \n                        Example :\n                        \n                            0.0.1\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        backend version.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, InternalServerErrorException, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiOperation } from '@nestjs/swagger';\nimport { SentryService } from './services/sentry/sentry.service';\nimport { Response } from 'express';\nimport * as path from 'path';\nimport * as fs from 'fs';\n\n@Controller()\nexport class AppController {\n    constructor(\n        private readonly appService: AppService,\n        private readonly sentryService: SentryService,\n    ) {}\n\n    /**\n     * Get backend version.\n     * @example 0.0.1\n     * @returns backend version.\n     */\n    @ApiOperation({ summary: 'Get backend version.' })\n    @Get()\n    public getVersion(): string {\n        return this.appService.getVersion();\n    }\n\n    /**\n     * Example of serving static file from disk.\n     */\n    @ApiOperation({ summary: 'Get sample file.' })\n    @Get('public/sample')\n    public async getSample(@Res() response: Response): Promise {\n        try {\n            const file: string = path.join(__dirname, 'assets', 'files', 'sample.pdf');\n            response.setHeader('Content-type', 'text/markdown');\n            response.setHeader('Content-disposition', 'attachment; filename=sample.pdf');\n            fs.createReadStream(file).pipe(response);\n        } catch (error) {\n            this.sentryService.captureException(error);\n            throw new InternalServerErrorException('Error while getting sample file.');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nArticleSearchModule\n\nArticleSearchModule\n\nAppModule -->\n\nArticleSearchModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCronJobModule\n\nCronJobModule\n\nAppModule -->\n\nCronJobModule->AppModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nExcelModule\n\nExcelModule\n\nAppModule -->\n\nExcelModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nPushNotificationModule\n\nPushNotificationModule\n\nAppModule -->\n\nPushNotificationModule->AppModule\n\n\n\n\n\nSentryModule\n\nSentryModule\n\nAppModule -->\n\nSentryModule->AppModule\n\n\n\n\n\nTagGQLModule\n\nTagGQLModule\n\nAppModule -->\n\nTagGQLModule->AppModule\n\n\n\n\n\nTagModule\n\nTagModule\n\nAppModule -->\n\nTagModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBasicStrategy\n\nBasicStrategy\n\nAppModule -->\n\nBasicStrategy->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAppModule -->\n\nJwtStrategy->AppModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAppModule -->\n\nLocalStrategy->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            BasicStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArticleModule\n                        \n                        \n                            ArticleSearchModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CronJobModule\n                        \n                        \n                            EmailModule\n                        \n                        \n                            ExcelModule\n                        \n                        \n                            FileModule\n                        \n                        \n                            PushNotificationModule\n                        \n                        \n                            SentryModule\n                        \n                        \n                            TagGQLModule\n                        \n                        \n                            TagModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpStatus, Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport databaseConfig from './config/database-config';\nimport { ArticleEntity } from './endpoints/article/article.entity';\nimport { ArticleContentEntity } from './endpoints/article/article-content.entity';\nimport loggerConfig from './config/logger-config';\nimport { WinstonModule } from 'nest-winston';\nimport { APP_FILTER } from '@nestjs/core';\nimport { HttpExceptionFilter } from './filters/http-exception.filter';\nimport { AllExceptionsFilter } from './filters/all-exception.filter';\nimport { TagEntity } from './endpoints/tag/tag.entity';\nimport { CacheModule } from '@nestjs/cache-manager';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { HeaderResolver, I18nModule } from 'nestjs-i18n';\nimport { PushTokenEntity } from './endpoints/push-notification/push-token.entity';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { BasicStrategy } from './endpoints/auth/strategies/basic.strategy';\nimport { JwtStrategy } from './endpoints/auth/strategies/jwt.strategy';\nimport { LocalStrategy } from './endpoints/auth/strategies/local.strategy';\nimport { UserEntity } from './endpoints/auth/user.entity';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';\nimport { GraphQLError } from 'graphql';\nimport { ErrorResponse } from './models/dtos/error-response.dto';\nimport { CronJobModule } from './services/cron-job/cron-job.module';\nimport { EmailModule } from './services/email/email.module';\nimport { ExcelModule } from './services/excel/excel.module';\nimport { FileModule } from './services/file/file.module';\nimport { SentryModule } from './services/sentry/sentry.module';\nimport { ArticleModule } from './endpoints/article/article.module';\nimport { AuthModule } from './endpoints/auth/auth.module';\nimport { PushNotificationModule } from './endpoints/push-notification/push-notification.module';\nimport { TagModule } from './endpoints/tag/tag.module';\nimport { TagGQLModule } from './graphql/tag-gql.module';\nimport { ArticleSearchModule } from './endpoints/article/search/article-search.module';\n\n@Module({\n    imports: [\n        ServeStaticModule.forRoot(\n            {\n                rootPath: join(__dirname, '..', 'uploads'),\n                serveRoot: '/uploads',\n            },\n            {\n                rootPath: join(__dirname, '..', 'documentation'),\n                serveRoot: '/api/documentation',\n            },\n        ),\n        ConfigModule.forRoot(),\n        ScheduleModule.forRoot(),\n        CacheModule.register({\n            // ms. 1s during developing. In prod, this could be higher and should be set for specific endpoints.\n            ttl: 1000,\n            max: 10,\n            isGlobal: true,\n        }),\n        TypeOrmModule.forRoot(databaseConfig),\n        TypeOrmModule.forFeature([\n            ArticleEntity,\n            ArticleContentEntity,\n            TagEntity,\n            PushTokenEntity,\n            UserEntity\n        ]),\n        I18nModule.forRoot({\n            fallbackLanguage: 'en',\n            loaderOptions: {\n                path: join(__dirname, 'assets', 'i18n'),\n                watch: true,\n            },\n            resolvers: [\n                { use: HeaderResolver, options: ['x-language'] }\n            ]\n        }),\n        MailerModule.forRoot({\n            transport: {\n                host: 'smtp.freesmtpservers.com',\n                port: 25,\n                ignoreTLS: true,\n                secure: false,\n            },\n            preview: false,\n            defaults: {\n                from: '\"Info\" ',\n            },\n            template: {\n                dir: __dirname + '/templates/emails',\n                adapter: new HandlebarsAdapter(),\n                options: {\n                    strict: true,\n                },\n            },\n        }),\n        WinstonModule.forRoot(loggerConfig),\n        PassportModule.register({\n            defaultStrategy: 'jwt',\n            property: 'jwtPayload',\n            session: false,\n\n        }),\n        JwtModule.register({\n            secret: process.env.JWT_SECRET,\n            signOptions: {\n                expiresIn: '1d'\n            }\n        }),\n        GraphQLModule.forRoot({\n            driver: ApolloDriver,\n            autoSchemaFile: 'src/config/schema.gql',\n            formatError: (error: GraphQLError) => {\n                const originalError: ErrorResponse = error.extensions?.originalError as ErrorResponse;\n                const graphQLFormattedError: ErrorResponse = {\n                    message: originalError?.message || error.message,\n                    error: originalError?.error || 'INTERNAL_SERVER_ERROR',\n                    statusCode: originalError?.statusCode || HttpStatus.INTERNAL_SERVER_ERROR\n                };\n                return graphQLFormattedError;\n            }\n        }),\n        CronJobModule,\n        EmailModule,\n        ExcelModule,\n        FileModule,\n        SentryModule,\n        ArticleSearchModule,\n        ArticleModule,\n        AuthModule,\n        PushNotificationModule,\n        TagModule,\n        TagGQLModule\n    ],\n    controllers: [\n        AppController,\n    ],\n    providers: [\n        AppService,\n        BasicStrategy,\n        JwtStrategy,\n        LocalStrategy,\n        {\n            provide: APP_FILTER,\n            useClass: AllExceptionsFilter,\n        },\n        {\n            provide: APP_FILTER,\n            useClass: HttpExceptionFilter,\n        },\n    ],\n})\nexport class AppModule {}\n\nexport const SERVER_URL: string = process.env.SERVER_URL ?? '';\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getVersion\n                        \n                    \n                \n            \n            \n                \n                    \n                    getVersion()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nconst { version } = require('../package.json');\n\n@Injectable()\nexport class AppService {\n  \n    public getVersion(): string {\n        return version;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ArticleContentEntity.html":{"url":"entities/ArticleContentEntity.html","title":"entity - ArticleContentEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ArticleContentEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/article/article-content.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                article\n                            \n                            \n                                    \n                                    Public\n                                articleId\n                            \n                            \n                                    \n                                    Public\n                                body\n                            \n                            \n                                    \n                                    Public\n                                coverImage\n                            \n                            \n                                    \n                                    Public\n                                dateOfPublication\n                            \n                            \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    Public\n                                language\n                            \n                            \n                                    \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        article\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ArticleEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, article => article.articleContents, {cascade: true})@JoinColumn(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article-content.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        articleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'article_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article-content.entity.ts:19\n                        \n                    \n\n            \n                \n                    Id of the article to which this content belongs.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('longtext')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article-content.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        coverImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true, length: 255, name: 'cover_image'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article-content.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        dateOfPublication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'date_of_publication'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article-content.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article-content.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('enum', {enum: LanguageEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article-content.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article-content.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { ArticleEntity } from './article.entity';\nimport { LanguageEnum } from 'src/models/enums/language.enum';\n\n@Index('article_id', ['articleId'], {})\n@Index('IDX_fulltext', ['title', 'body'], { fulltext: true })\n@Index('date_of_publication_idx', ['dateOfPublication'], {})\n@Index('language', ['language'], {})\n@Entity('article_content')\nexport class ArticleContentEntity {\n\n    @PrimaryGeneratedColumn()\n    public id: number;\n\n    /**\n     * Id of the article to which this content belongs.\n     */\n    @Column({ name: 'article_id' })\n    public articleId: number;\n\n    @Column('enum', { enum: LanguageEnum })\n    public language: LanguageEnum;\n\n    @Column()\n    public title: string;\n\n    @Column('longtext')\n    public body: string;\n\n    @Column('varchar', { nullable: true, length: 255, name: 'cover_image' })\n    public coverImage: string | null;\n\n    @Column('datetime', { name: 'date_of_publication' })\n    public dateOfPublication: Date;\n\n    @ManyToOne(() => ArticleEntity, (article) => article.articleContents, { cascade: true })\n    @JoinColumn([{ name: 'article_id', referencedColumnName: 'id' }])\n    public article: ArticleEntity;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticleController.html":{"url":"controllers/ArticleController.html","title":"controller - ArticleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/article/article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                articles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                createArticle\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                exportArticles\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getArticleById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getArticles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                setArticleActivity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateArticleById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Public\n                        Async\n                        createArticle\n                        \n                    \n                \n            \n            \n                \n                    \n                    createArticle(articleType: ArticleTypeEnum, file: UploadedFileDto, body: ArticleRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create new article.'})@ApiNotFoundResponse({description: 'Cannot parse tags or body is missing for some language.'})@ApiPayloadTooLargeResponse({description: undefined})@HttpCode(200)@Post(':articleType')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/endpoints/article/article.controller.ts:98\n                \n            \n\n\n            \n                \n                    API accepts ArticleRequestDto from request. For each language creates new ArticleContent.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    articleType\n                                    \n                                                ArticleTypeEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    file\n                                    \n                                                UploadedFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    body\n                                    \n                                                ArticleRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Article request body.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        exportArticles\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportArticles(response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Export all articles to excel file.'})@Get('export')\n                \n            \n\n            \n                \n                    Defined in src/endpoints/article/article.controller.ts:40\n                \n            \n\n\n            \n                \n                    Export all articles to excel file.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Public\n                        Async\n                        getArticleById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArticleById(articleContentId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get article by id.'})@UseInterceptors(CacheInterceptor)@CacheKey(CacheKeyEnum.ARTICLES)@Get('detail/:articleContentId')\n                \n            \n\n            \n                \n                    Defined in src/endpoints/article/article.controller.ts:57\n                \n            \n\n\n            \n                \n                    API returns object with information get from ArticleEntity and details about article from ArticleContentEntity.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleContentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        article detail.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Public\n                        Async\n                        getArticles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArticles(articleType: ArticleTypeEnum, page: number, count: number, language: LanguageEnum, tagId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all articles by article type.'})@UseInterceptors(CacheInterceptor)@CacheKey(CacheKeyEnum.ARTICLES)@Get(':articleType')\n                \n            \n\n            \n                \n                    Defined in src/endpoints/article/article.controller.ts:76\n                \n            \n\n\n            \n                \n                    Get all articles by article type.\nAPI returns object with information get from ArticleEntity and details about article from ArticleContentEntity.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    articleType\n                                    \n                                                ArticleTypeEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Type of article.\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Page (1, 2, 3, atd)\n\n                                    \n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of articles per page.\n\n                                    \n                                \n                                \n                                    language\n                                    \n                                                LanguageEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Content language.\n\n                                    \n                                \n                                \n                                    tagId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        If tagId is present, return only articles containing this tag.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        list of articles.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Public\n                        Async\n                        setArticleActivity\n                        \n                    \n                \n            \n            \n                \n                    \n                    setArticleActivity(articleContentId: number, activity: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Set article activity.'})@ApiNotFoundResponse({description: 'Article not found.'})@Put(':id/activity')\n                \n            \n\n            \n                \n                    Defined in src/endpoints/article/article.controller.ts:160\n                \n            \n\n\n            \n                \n                    This API is used for updating article activity. Articles cannot be deleted, only deactivated.\nArticles can be deactivated also via updateArticleById. But this API is for quick deactivation via administration.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    articleContentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the article content.\n\n                                    \n                                \n                                \n                                    activity\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Activity of the article.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Public\n                        Async\n                        updateArticleById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateArticleById(articleContentId: number, file: UploadedFileDto, body: ArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Update article content by id.'})@ApiNotFoundResponse({description: 'Article not found.'})@ApiPayloadTooLargeResponse({description: undefined})@Put(':articleContentId')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/endpoints/article/article.controller.ts:131\n                \n            \n\n\n            \n                \n                    This API is used for updating article content by id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    articleContentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the article content.\n\n                                    \n                                \n                                \n                                    file\n                                    \n                                                UploadedFileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    body\n                                    \n                                                ArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Article details.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Updated article.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Headers, HttpCode, Param, Post, Put, Query, Res, UploadedFile, UseGuards, UseInterceptors } from '@nestjs/common';\nimport { LanguageEnum } from '../../models/enums/language.enum';\nimport { ArticleTypeEnum } from '../../models/enums/article-type.enum';\nimport { ArticleService } from './article.service';\nimport { CheckArticleTypePipe } from 'src/utils/pipes/check-article-type.pipe';\nimport { StringToNumberPipe } from 'src/utils/pipes/string-to-number.pipe';\nimport { ArticleDto } from 'src/endpoints/article/dto/article.dto';\nimport { ApiNotFoundResponse, ApiOperation, ApiPayloadTooLargeResponse, ApiTags } from '@nestjs/swagger';\nimport { ArticleRequestDto } from 'src/endpoints/article/dto/article-request.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { FileService } from 'src/services/file/file.service';\nimport { UploadedFileDto } from 'src/models/dtos/uploaded-file.dto';\nimport { CustomValidationPipe } from 'src/utils/pipes/validation.pipe';\nimport { Response } from 'express';\nimport * as moment from 'moment';\nimport { AuthGuard } from '@nestjs/passport';\nimport { MAX_FILE_SIZE } from 'src/constants';\nimport { CacheInterceptor, CacheKey } from '@nestjs/cache-manager';\nimport { CacheKeyEnum } from 'src/models/enums/cache-key.enum';\n\n// Do not cache whole controller. Do not cache exportArticles() method.\n\n@ApiTags('Administration', 'Application')\n@Controller('articles')\nexport class ArticleController {\n\n    constructor(private readonly articleService: ArticleService,\n                private readonly fileService: FileService) {\n    }\n\n    /**\n     * Export all articles to excel file.\n     * \n     * @param response \n     * @returns \n     */\n    @ApiOperation({ summary: 'Export all articles to excel file.' })\n    // @UseGuards(AuthGuard(['jwt']))   // Commented for easier testing. In real scenario endpoint should be guarded.\n    @Get('export')\n    public async exportArticles(@Res() response: Response): Promise {\n        const excelBuffer: Buffer = await this.articleService.exportArticles()\n        response.setHeader('Content-disposition', `attachment; filename=${moment().format('YYYY-MM-DD')}_articles.xlsx`);\n        response.set('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n        response.status(200).send(excelBuffer);\n    }\n\n    /**\n     * API returns object with information get from ArticleEntity and details about article from ArticleContentEntity.\n     * \n     * @param id \n     * @returns article detail.\n     */\n    @ApiOperation({ summary: 'Get article by id.' })\n    @UseInterceptors(CacheInterceptor)\n    @CacheKey(CacheKeyEnum.ARTICLES)\n    @Get('detail/:articleContentId')\n    public async getArticleById(@Param('articleContentId', StringToNumberPipe) articleContentId: number): Promise {\n        return this.articleService.getArticleById(articleContentId);\n    }\n\n    /**\n     * Get all articles by article type.\n     * API returns object with information get from ArticleEntity and details about article from ArticleContentEntity.\n     *\n     * @param articleType   Type of article.\n     * @param language      Content language.\n     * @param page          Page (1, 2, 3, atd)\n     * @param count         Number of articles per page.\n     * @param tagId         If tagId is present, return only articles containing this tag.\n     * @returns             list of articles.\n     */\n    @ApiOperation({ summary: 'Get all articles by article type.' })\n    @UseInterceptors(CacheInterceptor)\n    @CacheKey(CacheKeyEnum.ARTICLES)\n    @Get(':articleType')\n    public async getArticles(@Param('articleType', CheckArticleTypePipe) articleType: ArticleTypeEnum,\n                             @Query('page', StringToNumberPipe) page: number,\n                             @Query('count', StringToNumberPipe) count: number,\n                             @Headers('x-language') language: LanguageEnum,\n                             @Query('tagId') tagId: string): Promise {\n        return this.articleService.getArticlesByTypeAndFilter(articleType, language, page, count, tagId);\n    }\n\n    /**\n     * API accepts ArticleRequestDto from request. For each language creates new ArticleContent.\n     * \n     * @throws BadRequestException      if cannot parse tags or body is missing for some language.\n     * @throws PayloadTooLargeException if file is too large.\n     * @param body                      Article request body.\n     */\n    @ApiOperation({ summary: 'Create new article.' })\n    @ApiNotFoundResponse({ description: 'Cannot parse tags or body is missing for some language.' })\n    @ApiPayloadTooLargeResponse({ description: 'File is too large. Max file size is ' + MAX_FILE_SIZE + ' bytes.' })\n    // @UseGuards(AuthGuard(['jwt']))   // Commented for easier testing. In real scenario endpoint should be guarded.\n    @HttpCode(200)\n    @Post(':articleType')\n    @UseInterceptors(FileInterceptor('file', FileService.multerOptions))\n    public async createArticle(@Param('articleType', CheckArticleTypePipe) articleType: ArticleTypeEnum,\n                               @UploadedFile() file: UploadedFileDto,\n                               @Body(CustomValidationPipe) body: ArticleRequestDto): Promise {\n\n        if (file) {\n            await this.fileService.resizeImage(file.path);\n            body.coverImage = `${file.destination}/${file.filename}`;\n        }\n\n        // Create article. If error occurs, remove file if exists.\n        return this.articleService.createArticle(articleType, body).catch((error) => {\n            if (file) {\n                this.fileService.removeFileFromSystem(file.path);\n            }\n            throw error;\n        });\n    }\n\n    /**\n     * This API is used for updating article content by id.\n     * \n     * @throws NotFoundException        if article does not exist.\n     * @throws PayloadTooLargeException if file is too large.\n     * @param articleContentId          Id of the article content.  \n     * @param body                      Article details.\n     * @returns                         Updated article.\n     */\n    @ApiOperation({ summary: 'Update article content by id.' })\n    @ApiNotFoundResponse({ description: 'Article not found.' })\n    @ApiPayloadTooLargeResponse({ description: 'File is too large. Max file size is ' + MAX_FILE_SIZE + ' bytes.' })\n    // @UseGuards(AuthGuard(['jwt']))   // Commented for easier testing. In real scenario endpoint should be guarded.\n    @Put(':articleContentId')\n    @UseInterceptors(FileInterceptor('file', FileService.multerOptions))\n    public async updateArticleById(@Param('articleContentId', StringToNumberPipe) articleContentId: number,\n                                   @UploadedFile() file: UploadedFileDto,\n                                   @Body() body: ArticleDto): Promise {\n\n        if (file) {\n            await this.fileService.resizeImage(file.path);\n            body.coverImage = `${file.destination}/${file.filename}`;\n        }\n        \n        return this.articleService.updateArticleById(articleContentId, body).catch((error) => {\n            if (file) {\n                this.fileService.removeFileFromSystem(file.path);\n            }\n            throw error;\n        });\n    }\n\n    /**\n     * This API is used for updating article activity. Articles cannot be deleted, only deactivated.\n     * Articles can be deactivated also via updateArticleById. But this API is for quick deactivation via administration.\n     * \n     * @throws NotFoundException    if article does not exist.\n     * @param articleContentId      Id of the article content.\n     * @param activity              Activity of the article.\n     */\n    @ApiOperation({ summary: 'Set article activity.' })\n    @ApiNotFoundResponse({ description: 'Article not found.' })\n    // @UseGuards(AuthGuard(['jwt']))   // Commented for easier testing. In real scenario endpoint should be guarded.\n    @Put(':id/activity')\n    public async setArticleActivity(@Param('id', StringToNumberPipe) articleContentId: number,\n                                    @Body('active') activity: boolean): Promise {\n        return this.articleService.setArticleActivity(articleContentId, activity);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticleDto.html":{"url":"classes/ArticleDto.html","title":"class - ArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/article/dto/article.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                articleContentId\n                            \n                            \n                                    Public\n                                articleType\n                            \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                coverImage\n                            \n                            \n                                    Public\n                                dateOfPublication\n                            \n                            \n                                    Public\n                                language\n                            \n                            \n                                    Public\n                                parent\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                updatedTags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(articleContent: ArticleContentEntity, short: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/endpoints/article/dto/article.dto.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articleContent\n                                                  \n                                                        \n                                                                        ArticleContentEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        short\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article.dto.ts:28\n                        \n                    \n\n            \n                \n                    Is article active?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        articleContentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        articleType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        coverImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article.dto.ts:33\n                        \n                    \n\n            \n                \n                    Cover image of the article.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dateOfPublication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article.dto.ts:38\n                        \n                    \n\n            \n                \n                    Date when the article was published or updated.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article.dto.ts:16\n                        \n                    \n\n            \n                \n                    Content (title, body) language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article.dto.ts:23\n                        \n                    \n\n            \n                \n                    Id of the parent article.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagDto[]\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article.dto.ts:43\n                        \n                    \n\n            \n                \n                    What tags are associated with this article. Useful for filtering.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedTags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article.dto.ts:48\n                        \n                    \n\n            \n                \n                    Tags in string format. When coming from form.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArticleContentEntity } from 'src/endpoints/article/article-content.entity';\nimport { TagDto } from '../../tag/dto/tag.dto';\n\nexport class ArticleDto {\n\n    public articleContentId: number;\n\n    public title: string;\n    \n    public body: string;\n\n    /**\n     * Content (title, body) language.\n     * @example cs\n     */\n    public language: string;\n    \n    public articleType: string;\n    \n    /**\n     * Id of the parent article.\n     */\n    public parent: number | null;\n\n    /**\n     * Is article active?\n     */\n    public active: boolean;\n\n    /**\n     * Cover image of the article.\n     */\n    public coverImage: string | null;\n\n    /**\n     * Date when the article was published or updated.\n     */\n    public dateOfPublication: Date;\n\n    /**\n     * What tags are associated with this article. Useful for filtering.\n     */\n    public tags: TagDto[];\n\n    /**\n     * Tags in string format. When coming from form.\n     */\n    public updatedTags: string;\n\n    constructor(articleContent: ArticleContentEntity, short: boolean = false) {\n        this.articleContentId = articleContent.id;\n        this.title = articleContent.title;\n        this.dateOfPublication = articleContent.dateOfPublication;\n\n        if (!short) {\n            this.articleType = articleContent.article.articleType;\n            this.language = articleContent.language;\n            this.body = articleContent.body;\n            this.active = articleContent.article.active;\n            this.parent = articleContent.article.parent;\n            this.coverImage = articleContent.coverImage;\n            this.tags = articleContent.article.tags?.filter(tag => tag.language == articleContent.language) ?? [];\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ArticleEntity.html":{"url":"entities/ArticleEntity.html","title":"entity - ArticleEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ArticleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/article/article.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                active\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                articleContents\n                            \n                            \n                                    \n                                    Public\n                                articleType\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                childrenArticles\n                            \n                            \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    Public\n                                parent\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                parentArticle\n                            \n                            \n                                    \n                                    \n                                    Public\n                                tags\n                            \n                            \n                                    \n                                    Public\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        articleContents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ArticleContentEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, articleContent => articleContent.article)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        articleType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ArticleTypeEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('enum', {name: 'article_type', enum: ArticleTypeEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        childrenArticles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ArticleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, article => article.parentArticle)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        parentArticle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ArticleEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, article => article.childrenArticles, {onDelete: 'RESTRICT', onUpdate: 'RESTRICT'})@JoinColumn(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable({name: 'article__tag', joinColumns: undefined, inverseJoinColumns: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/article.entity.ts:25\n                        \n                    \n\n            \n                \n                    Article creation timestamp.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { ArticleTypeEnum } from 'src/models/enums/article-type.enum';\nimport { Column, Entity, JoinColumn, JoinTable, ManyToMany, ManyToOne, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { ArticleContentEntity } from './article-content.entity';\nimport { TagEntity } from '../tag/tag.entity';\n\n@Entity('article')\nexport class ArticleEntity {\n    \n    @PrimaryGeneratedColumn()\n    public id: number;\n\n    @Column('enum', { name: 'article_type', enum: ArticleTypeEnum })\n    public articleType: ArticleTypeEnum;\n\n    @Column({ default: true })\n    public active: boolean;\n\n    @Column({ nullable: true })\n    public parent: number | null;\n\n    /**\n     * Article creation timestamp.\n     */\n    @Column('datetime', { default: () => 'CURRENT_TIMESTAMP' })\n    public timestamp: Date;\n\n    @OneToMany(() => ArticleContentEntity, (articleContent) => articleContent.article)\n    public articleContents?: ArticleContentEntity[];\n\n    @ManyToOne(() => ArticleEntity, (article) => article.childrenArticles, {\n        onDelete: 'RESTRICT',\n        onUpdate: 'RESTRICT',\n    })\n    @JoinColumn([{ name: 'parent', referencedColumnName: 'id' }])\n    public parentArticle?: ArticleEntity;\n\n    @OneToMany(() => ArticleEntity, (article) => article.parentArticle)\n    public childrenArticles?: ArticleEntity[];\n    \n    @ManyToMany(() => TagEntity, { cascade: true })\n    @JoinTable({\n        name: 'article__tag',\n        joinColumns: [\n            { name: 'article_id', referencedColumnName: 'id' },\n        ],\n        inverseJoinColumns: [\n            { name: 'tag_id', referencedColumnName: 'id' },\n            { name: 'tag_language', referencedColumnName: 'language' },\n        ]\n    })\n    public tags: TagEntity[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleModule.html":{"url":"modules/ArticleModule.html","title":"module - ArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_imports\n\n\n\ncluster_ArticleModule_providers\n\n\n\n\nEmailModule\n\nEmailModule\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nEmailModule->ArticleModule\n\n\n\n\n\nExcelModule\n\nExcelModule\n\nArticleModule -->\n\nExcelModule->ArticleModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nArticleModule -->\n\nFileModule->ArticleModule\n\n\n\n\n\nPushNotificationModule\n\nPushNotificationModule\n\nArticleModule -->\n\nPushNotificationModule->ArticleModule\n\n\n\n\n\nArticleService\n\nArticleService\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/endpoints/article/article.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmailModule\n                        \n                        \n                            ExcelModule\n                        \n                        \n                            FileModule\n                        \n                        \n                            PushNotificationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { Module } from \"@nestjs/common\";\nimport { TagEntity } from \"../tag/tag.entity\";\nimport { ArticleEntity } from \"./article.entity\";\nimport { ArticleController } from \"./article.controller\";\nimport { ArticleService } from \"./article.service\";\nimport { ArticleContentEntity } from \"./article-content.entity\";\nimport { EmailModule } from \"src/services/email/email.module\";\nimport { ExcelModule } from \"src/services/excel/excel.module\";\nimport { PushNotificationModule } from \"../push-notification/push-notification.module\";\nimport { FileModule } from \"src/services/file/file.module\";\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([\n            TagEntity,\n            ArticleEntity,\n            ArticleContentEntity\n        ]),\n        EmailModule,\n        ExcelModule,\n        PushNotificationModule,\n        FileModule\n    ],\n    controllers: [ArticleController],\n    providers: [ArticleService],\n}) export class ArticleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticleRequestDto.html":{"url":"classes/ArticleRequestDto.html","title":"class - ArticleRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/article/dto/article-request.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for validating article from the reqeust during article creation.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                coverImage\n                            \n                            \n                                    Public\n                                dateOfPublication\n                            \n                            \n                                    Public\n                                parent\n                            \n                            \n                                    \n                                    Public\n                                tags\n                            \n                            \n                                    \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article-request.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        coverImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article-request.dto.ts:22\n                        \n                    \n\n            \n                \n                    URL of the cover image on the server.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dateOfPublication\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article-request.dto.ts:33\n                        \n                    \n\n            \n                \n                    Date when the article is publicated. If not present, current date is used.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article-request.dto.ts:17\n                        \n                    \n\n            \n                \n                    Id of the parent article.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article-request.dto.ts:28\n                        \n                    \n\n            \n                \n                    Stringified array of tag ids.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/article/dto/article-request.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\n/**\n * DTO for validating article from the reqeust during article creation.\n */\nexport class ArticleRequestDto {\n\n    @IsNotEmpty()\n    public title: { cs: string, en: string };\n    \n    @IsNotEmpty()\n    public body: { cs: string, en: string };\n\n    /**\n     * Id of the parent article.\n     */\n    public parent: number;\n\n    /**\n     * URL of the cover image on the server.\n     */\n    public coverImage: string;\n\n    /**\n     * Stringified array of tag ids.\n     */\n    @IsNotEmpty()\n    public tags: string;\n\n    /**\n     * Date when the article is publicated. If not present, current date is used.\n     */\n    public dateOfPublication: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticleSearchController.html":{"url":"controllers/ArticleSearchController.html","title":"controller - ArticleSearchController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticleSearchController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/article/search/article-search.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                articles/search\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                searchAutocomplete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Public\n                        search\n                        \n                    \n                \n            \n            \n                \n                    \n                    search(articleType: ArticleTypeEnum, page: number, count: number, language: LanguageEnum, pattern: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Search articles by pattern in title or body.'})@ApiNotFoundResponse({description: 'Pattern is not present.'})@Get(':articleType')\n                \n            \n\n            \n                \n                    Defined in src/endpoints/article/search/article-search.controller.ts:34\n                \n            \n\n\n            \n                \n                    This API is used for searching articles by pattern in title or body.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    articleType\n                                    \n                                                ArticleTypeEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pagination page.\n\n                                    \n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of articles per page.\n\n                                    \n                                \n                                \n                                    language\n                                    \n                                                LanguageEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Language of the article.\n\n                                    \n                                \n                                \n                                    pattern\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pattern to search.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of articles.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Public\n                        searchAutocomplete\n                        \n                    \n                \n            \n            \n                \n                    \n                    searchAutocomplete(articleType: ArticleTypeEnum, language: LanguageEnum, pattern: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Search articles for autocomplete.'})@ApiNotFoundResponse({description: 'Pattern is not present.'})@Get('autocomplete/:articleType')\n                \n            \n\n            \n                \n                    Defined in src/endpoints/article/search/article-search.controller.ts:53\n                \n            \n\n\n            \n                \n                    API for searching articles for autocomplete. Search only in title. Return only id, title and dateOfPublication.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    articleType\n                                    \n                                                ArticleTypeEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    language\n                                    \n                                                LanguageEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Language of the article.\n\n                                    \n                                \n                                \n                                    pattern\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pattern to search.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Only id, title and dateOfPublication.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Headers, Param,Query, UseInterceptors } from '@nestjs/common';\nimport { CheckArticleTypePipe } from 'src/utils/pipes/check-article-type.pipe';\nimport { StringToNumberPipe } from 'src/utils/pipes/string-to-number.pipe';\nimport { ArticleDto } from 'src/endpoints/article/dto/article.dto';\nimport { ApiNotFoundResponse, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { ArticleTypeEnum } from 'src/models/enums/article-type.enum';\nimport { LanguageEnum } from 'src/models/enums/language.enum';\nimport { ArticleSearchService } from './article-search.service';\nimport { CacheInterceptor, CacheKey } from '@nestjs/cache-manager';\nimport { CacheKeyEnum } from 'src/models/enums/cache-key.enum';\n\n@ApiTags('Administration', 'Application')\n@UseInterceptors(CacheInterceptor)\n@CacheKey(CacheKeyEnum.SEARCH)\n@Controller('articles/search')\nexport class ArticleSearchController {\n\n    constructor(private readonly articleSearchService: ArticleSearchService) {\n    }\n\n    /**\n     * This API is used for searching articles by pattern in title or body.\n     * \n     * @throws NotFoundException    if pattern is not present.\n     * @param pattern   Pattern to search.\n     * @param language  Language of the article.\n     * @param page      Pagination page.\n     * @param count     Number of articles per page.\n     * @returns         List of articles.\n     */\n    @ApiOperation({ summary: 'Search articles by pattern in title or body.' })\n    @ApiNotFoundResponse({ description: 'Pattern is not present.' })\n    @Get(':articleType')\n    public search(@Param('articleType', CheckArticleTypePipe) articleType: ArticleTypeEnum,\n                  @Query('page', StringToNumberPipe) page: number,\n                  @Query('count', StringToNumberPipe) count: number,\n                  @Headers('x-language') language: LanguageEnum,\n                  @Query('pattern') pattern: string): Promise {\n        return this.articleSearchService.searchArticles(articleType, pattern, language, page, count);\n    }\n\n    /**\n     * API for searching articles for autocomplete. Search only in title. Return only id, title and dateOfPublication.\n     * \n     * @throws NotFoundException    if pattern is not present.\n     * @param pattern   Pattern to search.\n     * @param language  Language of the article.\n     * @returns         Only id, title and dateOfPublication.\n     */\n    @ApiOperation({ summary: 'Search articles for autocomplete.' })\n    @ApiNotFoundResponse({ description: 'Pattern is not present.' })\n    @Get('autocomplete/:articleType')\n    public searchAutocomplete(@Param('articleType', CheckArticleTypePipe) articleType: ArticleTypeEnum,\n                              @Headers('x-language') language: LanguageEnum,\n                              @Query('pattern') pattern: string): Promise {\n        return this.articleSearchService.searchAutocompleteArticle(articleType, pattern, language);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleSearchModule.html":{"url":"modules/ArticleSearchModule.html","title":"module - ArticleSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticleSearchModule\n\n\n\ncluster_ArticleSearchModule_providers\n\n\n\n\nArticleSearchService\n\nArticleSearchService\n\n\n\nArticleSearchModule\n\nArticleSearchModule\n\nArticleSearchModule -->\n\nArticleSearchService->ArticleSearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/endpoints/article/search/article-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticleSearchService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticleSearchController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ArticleContentEntity } from \"../article-content.entity\";\nimport { Module } from \"@nestjs/common\";\nimport { ArticleSearchController } from \"./article-search.controller\";\nimport { ArticleSearchService } from \"./article-search.service\";\n\n@Module({\n    imports: [TypeOrmModule.forFeature([ArticleContentEntity])],\n    controllers: [ArticleSearchController],\n    providers: [ArticleSearchService],\n}) export class ArticleSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticleSearchService.html":{"url":"injectables/ArticleSearchService.html","title":"injectable - ArticleSearchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArticleSearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/article/search/article-search.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkSearchPattern\n                            \n                            \n                                    Public\n                                    Async\n                                searchArticles\n                            \n                            \n                                    Public\n                                    Async\n                                searchAutocompleteArticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(articleContentRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/endpoints/article/search/article-search.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articleContentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkSearchPattern\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkSearchPattern(pattern: string)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/article/search/article-search.service.ts:99\n                \n            \n\n\n            \n                \n                    This method is used for checking search pattern.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pattern\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pattern to search.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Pattern without unwanted white spaces.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        searchArticles\n                        \n                    \n                \n            \n            \n                \n                    \n                    searchArticles(articleType: ArticleTypeEnum, pattern: string, language: LanguageEnum, page: number, count: number)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/article/search/article-search.service.ts:25\n                \n            \n\n\n            \n                \n                    This method is used for searching articles by pattern in title or body.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    articleType\n                                    \n                                                ArticleTypeEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    pattern\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pattern to search.\n\n                                    \n                                \n                                \n                                    language\n                                    \n                                                LanguageEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_LANGUAGE\n                                    \n\n                                    \n                                        Language of the article.\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        Pagination page.\n\n                                    \n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        PAGE_COUNT\n                                    \n\n                                    \n                                        Number of articles per page.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of articles.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        searchAutocompleteArticle\n                        \n                    \n                \n            \n            \n                \n                    \n                    searchAutocompleteArticle(articleType: ArticleTypeEnum, pattern: string, language: LanguageEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/article/search/article-search.service.ts:73\n                \n            \n\n\n            \n                \n                    Method for searching articles for autocomplete. Search only in title. Return only id, title and dateOfPublication.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    articleType\n                                    \n                                                ArticleTypeEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    pattern\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Pattern to search.\n\n                                    \n                                \n                                \n                                    language\n                                    \n                                                LanguageEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_LANGUAGE\n                                    \n\n                                    \n                                        Language of the article.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Only id, title and dateOfPublication.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DEFAULT_LANGUAGE, PAGE_COUNT } from 'src/constants';\nimport { ArticleContentEntity } from 'src/endpoints/article/article-content.entity';\nimport { ArticleDto } from 'src/endpoints/article/dto/article.dto';\nimport { ArticleTypeEnum } from 'src/models/enums/article-type.enum';\nimport { LanguageEnum } from 'src/models/enums/language.enum';\nimport { Raw, Repository, SelectQueryBuilder } from 'typeorm';\n\n@Injectable()\nexport class ArticleSearchService {\n\n    constructor(\n        @InjectRepository(ArticleContentEntity) private readonly articleContentRepository: Repository,\n    ) { }\n\n    /**\n     * This method is used for searching articles by pattern in title or body.\n     * @param pattern   Pattern to search.\n     * @param language  Language of the article.\n     * @param page      Pagination page.\n     * @param count     Number of articles per page.\n     * @returns         List of articles.\n     */\n    public async searchArticles(\n        articleType: ArticleTypeEnum,\n        pattern: string,\n        language: LanguageEnum = DEFAULT_LANGUAGE,\n        page: number = 1,\n        count: number = PAGE_COUNT\n    ): Promise {\n        pattern = this.checkSearchPattern(pattern);\n\n        // Cannot use find() because of the WHERE condition with OR operator. https://github.com/typeorm/typeorm/issues/2869\n        // We can use OR operator in find(), but we have to copy all where conditions. Eg.:\n        /*\n            where: [{\n                    language,\n                    article: { articleType },\n                    title: ILike(`%${pattern}%`),  `(ArticleContentEntity.title LIKE :pattern OR ArticleContentEntity.body LIKE :pattern)`, { pattern: `%${pattern}%` }),\n        const sqlQuery: SelectQueryBuilder = this.articleContentRepository\n            .createQueryBuilder('content')\n            .innerJoinAndSelect('content.article', 'article')\n            .leftJoinAndSelect('article.tags', 'tags')\n            .where('content.language = :language', { language })\n            .andWhere('article.active = 1')\n            .andWhere('article.articleType = :articleType', { articleType })\n            .andWhere('(content.title LIKE :pattern OR content.body LIKE :pattern)', { pattern: `%${pattern}%` })\n            .limit(count)\n            .offset(page  new ArticleDto(articleContent));\n    }\n\n    /**\n     * Method for searching articles for autocomplete. Search only in title. Return only id, title and dateOfPublication.\n     * @param pattern   Pattern to search.\n     * @param language  Language of the article.\n     * @returns         Only id, title and dateOfPublication.\n     */\n    public async searchAutocompleteArticle(articleType: ArticleTypeEnum, pattern: string, language: LanguageEnum = DEFAULT_LANGUAGE ): Promise {\n        pattern = this.checkSearchPattern(pattern);\n\n        // Search only in title.\n        // Return only id, title and dateOfPublication. It is enough for autocomplete.\n        const articleContentEntities: ArticleContentEntity[] = await this.articleContentRepository.find({\n            where: {\n                language,\n                article: { articleType, active: true },\n                // Workaround for searching in two columns with find(). Use Entity.name variable in case it is refactored.\n                title: Raw(() => `(${ArticleContentEntity.name}.title LIKE :pattern OR ${ArticleContentEntity.name}.body LIKE :pattern)`, { pattern: `%${pattern}%` }),\n            },\n            relations: ['article'],\n            take: 10,\n            order: { dateOfPublication: 'DESC' },\n        });\n\n        return articleContentEntities.map(articleContent => new ArticleDto(articleContent, true));\n    }\n\n    /**\n     * This method is used for checking search pattern.\n     * @throws BadRequestException  if pattern is missing.\n     * @param pattern               Pattern to search.\n     * @returns                     Pattern without unwanted white spaces.\n     */\n    private checkSearchPattern(pattern: string): string {\n        if (!pattern) {\n            throw new BadRequestException('Missing mandatory parameter(s): pattern.');\n        }\n        \n        // Remove unwanted white spaces.\n        return pattern.replace(/ +/g, ' ').trim();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticleService.html":{"url":"injectables/ArticleService.html","title":"injectable - ArticleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArticleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/article/article.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createArticle\n                            \n                            \n                                    Public\n                                    Async\n                                exportArticles\n                            \n                            \n                                    Public\n                                    Async\n                                getArticleById\n                            \n                            \n                                    Public\n                                    Async\n                                getArticlesByTypeAndFilter\n                            \n                            \n                                    Public\n                                    Async\n                                setArticleActivity\n                            \n                            \n                                    Public\n                                    Async\n                                updateArticleById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagRepository: Repository, articleRepository: Repository, articleContentRepository: Repository, logger: Logger, cacheManager: Cache, emailService: EmailService, excelService: ExcelService, pushNotificationService: PushNotificationService, fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in src/endpoints/article/article.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        articleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        articleContentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        excelService\n                                                  \n                                                        \n                                                                        ExcelService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pushNotificationService\n                                                  \n                                                        \n                                                                        PushNotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createArticle\n                        \n                    \n                \n            \n            \n                \n                    \n                    createArticle(articleType: ArticleTypeEnum, newArticleDto: ArticleRequestDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/article/article.service.ts:41\n                \n            \n\n\n            \n                \n                    This method is used for creating new article.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    articleType\n                                    \n                                                ArticleTypeEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Type of article.\n\n                                    \n                                \n                                \n                                    newArticleDto\n                                    \n                                                ArticleRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Article details.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        exportArticles\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportArticles()\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/article/article.service.ts:294\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getArticleById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArticleById(articleContentId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/article/article.service.ts:167\n                \n            \n\n\n            \n                \n                    This method is used for getting article by id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    articleContentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the article content.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Article with details.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getArticlesByTypeAndFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArticlesByTypeAndFilter(articleType: ArticleTypeEnum, language: LanguageEnum, page: number, count: number, tagId?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/article/article.service.ts:112\n                \n            \n\n\n            \n                \n                    This method is used for getting articles by type and tag.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    articleType\n                                    \n                                                ArticleTypeEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Type of article.\n\n                                    \n                                \n                                \n                                    language\n                                    \n                                                LanguageEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_LANGUAGE\n                                    \n\n                                    \n                                        Content language.\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        Pagination page.\n\n                                    \n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        PAGE_COUNT\n                                    \n\n                                    \n                                        Number of articles per page.\n\n                                    \n                                \n                                \n                                    tagId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        If tagId is present, return only articles containing this tag.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of articles filtered by type and tag.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setArticleActivity\n                        \n                    \n                \n            \n            \n                \n                    \n                    setArticleActivity(articleContentId: number, activity: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/article/article.service.ts:276\n                \n            \n\n\n            \n                \n                    This method is used for updating article activity.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    articleContentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the article content.\n\n                                    \n                                \n                                \n                                    activity\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Activity of the article.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateArticleById\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateArticleById(articleContentId: number, updatedArticle: ArticleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/article/article.service.ts:194\n                \n            \n\n\n            \n                \n                    This method is used for updating article by id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    articleContentId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the article content.\n\n                                    \n                                \n                                \n                                    updatedArticle\n                                    \n                                                ArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Article details.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Updated article.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { DEFAULT_LANGUAGE, PAGE_COUNT } from 'src/constants';\nimport { ArticleContentEntity } from 'src/endpoints/article/article-content.entity';\nimport { ArticleEntity } from 'src/endpoints/article/article.entity';\nimport { TagEntity } from 'src/endpoints/tag/tag.entity';\nimport { ArticleRequestDto } from 'src/endpoints/article/dto/article-request.dto';\nimport { ArticleDto } from 'src/endpoints/article/dto/article.dto';\nimport { ArticleTypeEnum } from 'src/models/enums/article-type.enum';\nimport { LanguageEnum } from 'src/models/enums/language.enum';\nimport { EmailService } from 'src/services/email/email.service';\nimport { FileService } from 'src/services/file/file.service';\nimport { In, Repository } from 'typeorm';\nimport { PushNotificationService } from 'src/endpoints/push-notification/push-notification.service';\nimport { ExcelService } from 'src/services/excel/excel.service';\nimport { CACHE_MANAGER } from '@nestjs/cache-manager';\nimport { Cache } from 'cache-manager';\nimport { CacheKeyEnum } from 'src/models/enums/cache-key.enum';\n\n@Injectable()\nexport class ArticleService {\n\n    constructor(\n        @InjectRepository(TagEntity) private readonly tagRepository: Repository,\n        @InjectRepository(ArticleEntity) private readonly articleRepository: Repository,\n        @InjectRepository(ArticleContentEntity) private readonly articleContentRepository: Repository,\n        @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n        @Inject(CACHE_MANAGER) private cacheManager: Cache,\n        private readonly emailService: EmailService,\n        private readonly excelService: ExcelService,\n        private readonly pushNotificationService: PushNotificationService,\n        private readonly fileService: FileService\n    ) { }\n\n    /**\n     * This method is used for creating new article.\n     * @param articleType   Type of article.\n     * @param newArticleDto Article details.\n     */\n    public async createArticle(articleType: ArticleTypeEnum, newArticleDto: ArticleRequestDto): Promise {\n        this.logger.log('info', `[STORYBOARD_ARTICLE_SERVICE] Article=${JSON.stringify(newArticleDto)}`);\n\n        // Title is mandatory, we will take from it what languages are in the request.\n        const languages: string [] = Object.keys(newArticleDto.title) as Array;\n\n        // Create new article.\n        const newArticle: ArticleEntity = new ArticleEntity();\n        newArticle.articleType = articleType;\n        newArticle.parent = newArticleDto.parent;\n\n        // Parse tags from request.\n        let tagsFromDto: TagEntity[] = [];\n        try {\n            tagsFromDto = JSON.parse(newArticleDto.tags);\n        } catch(e) {\n            this.logger.error(`[STORYBOARD_ARTICLE_SERVICE] Cannot parse tags from request. ${e}`);\n            throw new BadRequestException(`Cannot parse tags from request. ${newArticleDto.tags}`);\n        }\n\n        // Find tags from database by ids from request.\n        newArticle.tags = await this.tagRepository.findBy({\n            id: In(tagsFromDto.map(tag => tag.id))\n        });\n\n        // Create new article content for each language.\n        const newArticleContentEntities: ArticleContentEntity[] = languages.map((language: keyof typeof newArticleDto.title) => {\n            const newArticleContent: ArticleContentEntity = new ArticleContentEntity();\n            newArticleContent.title = newArticleDto.title[language];\n            newArticleContent.body = newArticleDto.body[language];\n            newArticleContent.language =  language;\n            newArticleContent.dateOfPublication = newArticleDto.dateOfPublication ?? new Date();\n            newArticleContent.article = newArticle;\n            newArticleContent.coverImage = newArticleDto.coverImage;\n\n            if (!newArticleContent.title) {\n                throw new BadRequestException(`Missing mandatory parameter(s): title for language ${language}.`);\n            }\n            \n            if (!newArticleContent.body) {\n                throw new BadRequestException(`Missing mandatory parameter(s): body for language ${language}.`);\n            }\n            return newArticleContent;\n        });\n\n        await this.articleContentRepository.save(newArticleContentEntities);\n\n        // Invalidate cache for articles and search.\n        this.cacheManager.del(CacheKeyEnum.ARTICLES);\n        this.cacheManager.del(CacheKeyEnum.SEARCH);\n\n        // Send email about new article.\n        // This feature is just for testing purposes, so pick first language.\n        this.emailService.sendEmail(new ArticleDto(newArticleContentEntities[0]));\n\n        // Send push notification about new article for every language.\n        newArticleContentEntities.forEach(item => {\n            this.pushNotificationService.sendPushNotificationToTopic(item, item.language);\n        });\n        \n    }\n\n    /**\n     * This method is used for getting articles by type and tag.\n     * @param articleType   Type of article.\n     * @param language      Content language.\n     * @param page          Pagination page.\n     * @param count         Number of articles per page.\n     * @param tagId         If tagId is present, return only articles containing this tag.\n     * @returns             List of articles filtered by type and tag.\n     */\n    public async getArticlesByTypeAndFilter(\n        articleType: ArticleTypeEnum,\n        language: LanguageEnum = DEFAULT_LANGUAGE,\n        page: number = 1,\n        count: number = PAGE_COUNT,\n        tagId?: string\n    ): Promise {\n\n        const articleContentEntities: ArticleContentEntity[] = await this.articleContentRepository.find({\n            where: {\n                language: language,\n                article: {\n                    active: true,\n                    articleType: articleType,\n                    tags: tagId ? {\n                        language: language,\n                        id: tagId\n                    } : undefined\n                }\n            },\n            relations: {\n                article: {\n                    tags: true\n                }\n            },\n            skip: (page  articleContent.id)) },\n                relations: { article: { tags: true } }\n            });\n\n            // Map tags to articleContentEntities tags.\n            articleContentEntities.forEach(articleContent => {\n                articleContent.article.tags = articlesWithTags.find(tag => tag.id === articleContent.id)?.article.tags ?? [];\n            });\n        }\n\n        return articleContentEntities.map(articleContent => new ArticleDto(articleContent));\n    }\n\n    /**\n     * This method is used for getting article by id.\n     * @param articleContentId  Id of the article content.\n     * @returns                 Article with details.\n     */\n    public async getArticleById(articleContentId: number): Promise {\n\n        const articleContentEntity: ArticleContentEntity | null = await this.articleContentRepository.findOne({\n            where: {\n                id: articleContentId,\n            },\n            relations: {\n                article: {\n                    tags: true\n                }\n            }\n        });\n\n        if (!articleContentEntity) {\n            throw new NotFoundException(`Article with id ${articleContentId} not found.`);\n        }\n\n        return new ArticleDto(articleContentEntity);\n    }\n    \n    /**\n     * This method is used for updating article by id.\n     * @throws NotFoundException    if article does not exist.\n     * @param articleContentId      Id of the article content.  \n     * @param updatedArticle        Article details.\n     * @returns                     Updated article.\n     */\n    public async updateArticleById(articleContentId: number, updatedArticle: ArticleDto): Promise {\n        \n        const oldArticleContentEntity: ArticleContentEntity | null = await this.articleContentRepository.findOne({\n            where: {\n                id: articleContentId\n            },\n            relations: {\n                article: {\n                    tags: true\n                }\n            }\n        });\n\n        if (!oldArticleContentEntity) {\n            throw new NotFoundException(`Article with id ${articleContentId} not found.`);\n        }\n\n        // Update oldArticleContentEntity with data from body.\n        oldArticleContentEntity.title = updatedArticle.title;\n        oldArticleContentEntity.body = updatedArticle.body;\n        oldArticleContentEntity.dateOfPublication = updatedArticle.dateOfPublication ?? new Date();\n        oldArticleContentEntity.article.parent = updatedArticle.parent;\n        oldArticleContentEntity.article.active = updatedArticle.active;\n\n        if (updatedArticle.updatedTags) {\n            // Parse tags from request form.\n            let tagsFromDto: TagEntity[] = [];\n            try {\n                tagsFromDto = JSON.parse(updatedArticle.updatedTags);\n            } catch(e) {\n                this.logger.error(`[STORYBOARD_ARTICLE_SERVICE] Cannot parse tags from request. ${e}`);\n                throw new BadRequestException(`Cannot parse tags from request. ${updatedArticle.updatedTags}`);\n            }\n\n            // Find tags from database by ids from request.\n            oldArticleContentEntity.article.tags = await this.tagRepository.findBy({ \n                id: In(tagsFromDto.map(tag => tag.id)) \n            });\n        } else {\n            // If tags are not present, remove all tags from article.\n            oldArticleContentEntity.article.tags = [];\n        }\n\n        let coverImageToDelete: string | null = null;\n\n        // If cover image is present, update it.\n        if (updatedArticle.coverImage) {\n            // If cover image is updated, delete old one.\n            coverImageToDelete = oldArticleContentEntity.coverImage;\n\n            // New cover image.\n            oldArticleContentEntity.coverImage = updatedArticle.coverImage;\n\n        } else if (updatedArticle.coverImage === '' && oldArticleContentEntity.coverImage) {\n\n            // If cover image is unset, delete it.\n            coverImageToDelete = oldArticleContentEntity.coverImage;\n            oldArticleContentEntity.coverImage = null;\n        }\n\n        const newArticleContentEntity: ArticleContentEntity = await this.articleContentRepository.save(oldArticleContentEntity);\n\n        // Invalidate cache for articles and search.\n        this.cacheManager.del(CacheKeyEnum.ARTICLES);\n        this.cacheManager.del(CacheKeyEnum.SEARCH);\n\n        // New entity is saved, we can remove old cover image.\n        // Do not await, we do not want to wait for this operation.\n        if (coverImageToDelete) {\n            this.fileService.removeFileFromSystem(coverImageToDelete);\n        }\n\n        return new ArticleDto(newArticleContentEntity);\n    }\n    \n    /**\n     * This method is used for updating article activity.\n     * \n     * @throws NotFoundException    if article does not exist.\n     * @param articleContentId  Id of the article content.\n     * @param activity          Activity of the article.\n     */\n    public async setArticleActivity(articleContentId: number, activity: boolean): Promise {\n        \n        const articleContentEntity: ArticleContentEntity | null = await this.articleContentRepository.findOne({\n            where: {\n                id: articleContentId\n            },\n            relations: {\n                article: true\n            }\n        });\n\n        if (!articleContentEntity) {\n            throw new NotFoundException(`Article with id ${articleContentId} not found.`);\n        }\n\n        await this.articleRepository.update(articleContentEntity.article.id, { active: activity });\n    }\n\n    public async exportArticles(): Promise {\n        const articles: ArticleContentEntity[] = await this.articleContentRepository.find({\n            relations: ['article', 'article.tags']\n        });\n\n        return this.excelService.exportArticles(articles.map(article => new ArticleDto(article)));\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                refreshAccessToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                signInUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                signOutUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                signUpUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Public\n                        refreshAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshAccessToken(refreshToken: string, userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Refresh access token with refresh token.'})@ApiUnauthorizedResponse({description: 'Invalid refresh token, please sign in.'})@HttpCode(200)@Post('refresh-token')\n                \n            \n\n            \n                \n                    Defined in src/endpoints/auth/auth.controller.ts:96\n                \n            \n\n\n            \n                \n                    Refresh access token with refresh token.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Refresh token used for refresh access token.\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User ID, whose refresh token must be updated.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        New access token and new refresh token.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Public\n                        signInUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    signInUser(username: string, password: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Sign in user.'})@ApiUnauthorizedResponse({description: 'Username or password is not correct.'})@ApiForbiddenResponse({description: 'User is not active.'})@UseGuards(undefined)@HttpCode(200)@Post('sign-in')\n                \n            \n\n            \n                \n                    Defined in src/endpoints/auth/auth.controller.ts:57\n                \n            \n\n\n            \n                \n                    Sign in user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username.\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Access token and refresh token.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Public\n                        signOutUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    signOutUser(request: JwtRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Sign out user. Delete refresh token from user.'})@ApiUnauthorizedResponse({description: 'JWT payload is not valid.'})@ApiNotFoundResponse({description: 'jwtPayload.userId is not provided.'})@ApiBearerAuth()@UseGuards(undefined)@Get('sign-out')\n                \n            \n\n            \n                \n                    Defined in src/endpoints/auth/auth.controller.ts:80\n                \n            \n\n\n            \n                \n                    Sign out user. Delete refresh token from user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                JwtRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request with JWT payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Public\n                        signUpUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpUser(username: string, password: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Sign up new user. Used for admin panel.'})@ApiBadRequestResponse({description: 'Username or password is not provided.'})@ApiConflictResponse({description: 'Username is not unique.'})@HttpCode(200)@Post('sign-up')\n                \n            \n\n            \n                \n                    Defined in src/endpoints/auth/auth.controller.ts:35\n                \n            \n\n\n            \n                \n                    Sign up new user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username.\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Access token and refresh token.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Get,\n    HttpCode,\n    Post,\n    Req,\n    UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { RequiredParameterPipe } from 'src/utils/pipes/required-parameter.pipe';\nimport { JwtRequest } from 'src/models/jwt-request.model';\nimport { ApiBadRequestResponse, ApiBearerAuth, ApiConflictResponse, ApiForbiddenResponse, ApiNotFoundResponse, ApiOperation, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\n\n@ApiTags('Administration')\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) {}\n\n    /**\n     * Sign up new user.\n     * \n     * @throws BadRequestException  If username or password is not provided.\n     * @throws ConflictException    If username is not unique.\n     * @param username              Username.\n     * @param password              Password.\n     * @returns                     Access token and refresh token.\n     */\n    @ApiOperation({ summary: 'Sign up new user. Used for admin panel.' })\n    @ApiBadRequestResponse({ description: 'Username or password is not provided.' })\n    @ApiConflictResponse({ description: 'Username is not unique.' })\n    @HttpCode(200)\n    @Post('sign-up')\n    public signUpUser(\n        @Body('username', RequiredParameterPipe) username: string,\n        @Body('password', RequiredParameterPipe) password: string,\n    ): Promise {\n        return this.authService.signUpUser(username, password);\n    }\n\n    /**\n     * Sign in user.\n     * \n     * @throws UnauthorizedException    If username or password is not correct.\n     * @throws ForbiddenException       If user is not active.\n     * @param username                  Username.\n     * @param password                  Password.\n     * @returns                         Access token and refresh token.\n     */\n    @ApiOperation({ summary: 'Sign in user.' })\n    @ApiUnauthorizedResponse({ description: 'Username or password is not correct.' })\n    @ApiForbiddenResponse({ description: 'User is not active.' })\n    @UseGuards(AuthGuard('local'))\n    @HttpCode(200)\n    @Post('sign-in')\n    public signInUser(\n        @Body('username', RequiredParameterPipe) username: string,\n        // Password is not used here, because it is already checked in AuthGuard('local') - local.strategy.ts.\n        // However, it is required for swagger.\n        @Body('password', RequiredParameterPipe) password: string,\n    ): Promise {\n        return this.authService.signInUser(username);\n    }\n\n    /**\n     * Sign out user. Delete refresh token from user.\n     * \n     * @throws UnauthorizedException If JWT payload is not valid.\n     * @throws NotFoundException If jwtPayload.userId is not provided.\n     * @param request   Request with JWT payload.\n     * @returns\n     */\n    @ApiOperation({ summary: 'Sign out user. Delete refresh token from user.' })\n    @ApiUnauthorizedResponse({ description: 'JWT payload is not valid.' })\n    @ApiNotFoundResponse({ description: 'jwtPayload.userId is not provided.' })\n    @ApiBearerAuth()\n    @UseGuards(AuthGuard(['jwt']))\n    @Get('sign-out')\n    public signOutUser(@Req() request: JwtRequest): Promise {\n        return this.authService.signOutUser(request.jwtPayload);\n    }\n\n    /**\n     * Refresh access token with refresh token.\n     * \n     * @throws UnauthorizedException If refresh token is invalid, old.\n     * @param refreshToken  Refresh token used for refresh access token.\n     * @param userId        User ID, whose refresh token must be updated.\n     * @returns             New access token and new refresh token.\n     */\n    @ApiOperation({ summary: 'Refresh access token with refresh token.' })\n    @ApiUnauthorizedResponse({ description: 'Invalid refresh token, please sign in.' })\n    @HttpCode(200)\n    @Post('refresh-token')\n    public refreshAccessToken(\n        @Body('refreshToken', RequiredParameterPipe) refreshToken: string,\n        @Body('userId', RequiredParameterPipe) userId: number,\n    ): Promise {\n        return this.authService.refreshAccessToken(userId, refreshToken);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/endpoints/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { Module } from \"@nestjs/common\";\nimport { UserEntity } from \"./user.entity\";\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\nimport { JwtModule } from \"@nestjs/jwt\";\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([UserEntity]),\n        JwtModule,\n    ],\n    controllers: [AuthController],\n    providers: [AuthService],\n    exports: [AuthService],\n}) export class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                cryptNewPassword\n                            \n                            \n                                    Private\n                                generateRefreshToken\n                            \n                            \n                                    Private\n                                    Async\n                                getActiveUser\n                            \n                            \n                                    Private\n                                    Async\n                                passwordsAreEqual\n                            \n                            \n                                    Public\n                                    Async\n                                refreshAccessToken\n                            \n                            \n                                    Private\n                                setAndReturnNewRefreshToken\n                            \n                            \n                                    Public\n                                    Async\n                                signInUser\n                            \n                            \n                                    Public\n                                    Async\n                                signOutUser\n                            \n                            \n                                    Public\n                                    Async\n                                signUpUser\n                            \n                            \n                                    Public\n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userEntityRepository: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/endpoints/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEntityRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        cryptNewPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    cryptNewPassword(newPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/auth/auth.service.ts:201\n                \n            \n\n\n            \n                \n                    Crypt new password with bcrypt.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New user password.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Crypted password.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateRefreshToken()\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/auth/auth.service.ts:191\n                \n            \n\n\n            \n                \n                    Generate random refresh token.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Refresh token.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getActiveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getActiveUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/auth/auth.service.ts:157\n                \n            \n\n\n            \n                \n                    Get user by username or id. If user is not active, throw ForbiddenException.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User username.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        User entity.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        passwordsAreEqual\n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordsAreEqual(plainPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/auth/auth.service.ts:212\n                \n            \n\n\n            \n                \n                    Compare plain password with hashed password.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    plainPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Plain password.\n\n                                    \n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Hashed password.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        True if passwords are equal, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        refreshAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshAccessToken(userId: number, refreshToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/auth/auth.service.ts:102\n                \n            \n\n\n            \n                \n                    Refresh access token with refresh token. If refresh token is invalid, throw UnauthorizedException.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User ID.\n\n                                    \n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Refresh token.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        New access token and new refresh token.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setAndReturnNewRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAndReturnNewRefreshToken(user: UserEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/auth/auth.service.ts:180\n                \n            \n\n\n            \n                \n                    Set new refresh token ro user object and return it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User entity to update.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        New refresh token.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        signInUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    signInUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/auth/auth.service.ts:58\n                \n            \n\n\n            \n                \n                    Sign in user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User username.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Access token and refresh token.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        signOutUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    signOutUser(jwtPayload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/auth/auth.service.ts:80\n                \n            \n\n\n            \n                \n                    Sign out user. Delete refresh token and expiration date.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    jwtPayload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        JWT payload with user ID.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        signUpUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/auth/auth.service.ts:28\n                \n            \n\n\n            \n                \n                    Sign up user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User username. Must be unique.\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User password.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Access token and refresh token.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, validatedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/auth/auth.service.ts:134\n                \n            \n\n\n            \n                \n                    Validate user with username and password.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User username.\n\n                                    \n                                \n                                \n                                    validatedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User password.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        True if user is valid, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, ConflictException, ForbiddenException, Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from 'src/endpoints/auth/user.entity';\nimport { Repository } from 'typeorm';\nimport { JwtPayload } from 'src/models/jwt-payload.model';\nimport { REFRESH_TOKEN_SIZE } from 'src/constants';\nimport * as bcrypt from 'bcrypt';\nimport * as moment from 'moment';\nimport * as randomToken from 'rand-token';\n\n@Injectable()\nexport class AuthService {\n\n    constructor(\n        @InjectRepository(UserEntity) private readonly userEntityRepository: Repository,\n        private readonly jwtService: JwtService,\n    ) {\n    }\n\n    /**\n     * Sign up user.\n     * \n     * @param username  User username. Must be unique.\n     * @param password  User password.\n     * @returns         Access token and refresh token.\n     */\n    public async signUpUser(username: string, password: string): Promise {\n\n        if (!username || !password) {\n            throw new BadRequestException('Email or password is missing.');\n        }\n\n        const user: UserEntity | null = await this.userEntityRepository.findOne({\n            where: { username: username }\n        });\n\n        if (user) {\n            throw new ConflictException(`User '${username}' already exists.`);\n        } else {\n            await this.userEntityRepository.insert({\n                username: username,\n                password: await this.cryptNewPassword(password),\n                // Just for testing. In real app, user should be inactive and after username verification, user should be activated.\n                active: true,\n            });\n        }\n\n        return this.signInUser(username);\n    }\n\n    /**\n     * Sign in user.\n     * \n     * @param username  User username.\n     * @returns         Access token and refresh token.\n     */\n    public async signInUser(username: string): Promise {\n        const user: UserEntity = await this.getActiveUser(username);\n\n        const refreshToken: string = this.setAndReturnNewRefreshToken(user);\n\n        await this.userEntityRepository.save(user);\n\n        const payload: JwtPayload = {\n            sub: user.id,\n        };\n\n        return {\n            accessToken: this.jwtService.sign(payload),\n            refreshToken: refreshToken,\n        };\n    }\n\n    /**\n     * Sign out user. Delete refresh token and expiration date.\n     * \n     * @param jwtPayload    JWT payload with user ID.\n     */\n    public async signOutUser(jwtPayload: JwtPayload): Promise {\n        const userId: number = jwtPayload.sub;\n        if (userId === undefined) {\n            throw new NotFoundException('Cannot find user.');\n        }\n\n        const userEntity: UserEntity | null = await this.userEntityRepository.findOneBy({ id: userId });\n\n        if (userEntity) {\n            userEntity.refreshToken = null;\n            userEntity.expirationDate = null;\n            await this.userEntityRepository.save(userEntity);\n        }\n    }\n\n    /**\n     * Refresh access token with refresh token. If refresh token is invalid, throw UnauthorizedException.\n     * \n     * @param userId        User ID.\n     * @param refreshToken  Refresh token.\n     * @returns             New access token and new refresh token.\n     */\n    public async refreshAccessToken(userId: number, refreshToken: string): Promise {\n        const user: UserEntity | null = await this.userEntityRepository.findOne({\n            where: { id: userId, refreshToken: refreshToken }\n        });\n\n        const now: Date = moment().toDate();\n\n        if (!user || !user.expirationDate || now > user.expirationDate) {\n            throw new UnauthorizedException('Invalid refresh token, please sign in.');\n        }\n\n        const newRefreshToken: string = this.setAndReturnNewRefreshToken(user);\n        \n        await this.userEntityRepository.save(user);\n\n        const payload: JwtPayload = {\n            sub: user.id,\n        };\n\n        return {\n            accessToken: this.jwtService.sign(payload, { expiresIn: '1d' }),\n            refreshToken: newRefreshToken\n        };\n    }\n\n    /**\n     * Validate user with username and password.\n     * \n     * @param username          User username.\n     * @param validatedPassword User password. \n     * @returns                 True if user is valid, otherwise false.\n     */\n    public async validateUser(username: string, validatedPassword: string): Promise {\n        const user: UserEntity | null = await this.userEntityRepository.findOne({\n            where: { username: username },\n            select: ['password', 'id']\n        });\n\n        if (!user || !user.password) {\n            return false;\n        }\n\n        if (await this.passwordsAreEqual(validatedPassword, user.password)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Get user by username or id. If user is not active, throw ForbiddenException.\n     * \n     * @param username  User username.\n     * @param userId    User ID.\n     * @returns         User entity.\n     */\n    private async getActiveUser(username: string): Promise {\n\n        const user: UserEntity | null = await this.userEntityRepository.findOne({\n            where: { username: username }\n        });\n\n        if (!user) {\n            throw new NotFoundException(`User cannot be found.`);\n        }\n\n        if (!user.active) {\n            throw new ForbiddenException(`User is not active.`);\n        }\n\n        return user;\n    }\n\n    /**\n     * Set new refresh token ro user object and return it.\n     * \n     * @param user  User entity to update.\n     * @returns     New refresh token.\n     */\n    private setAndReturnNewRefreshToken(user: UserEntity): string {\n        user.refreshToken = this.generateRefreshToken();\n        user.expirationDate = moment().add(30, 'd').toDate();\n        return user.refreshToken;\n    }\n\n    /**\n     * Generate random refresh token.\n     * \n     * @returns     Refresh token.\n     */\n    private generateRefreshToken(): string {\n        return randomToken.generate(REFRESH_TOKEN_SIZE);\n    }\n\n    /**\n     * Crypt new password with bcrypt.\n     * \n     * @param newPassword   New user password.\n     * @returns             Crypted password.\n     */\n    private async cryptNewPassword(newPassword: string): Promise {\n        return await bcrypt.hash(newPassword, await bcrypt.genSalt());\n    }\n\n    /**\n     * Compare plain password with hashed password.\n     * \n     * @param plainPassword     Plain password.\n     * @param hashedPassword    Hashed password.\n     * @returns                 True if passwords are equal, otherwise false.\n     */\n    private async passwordsAreEqual(plainPassword: string, hashedPassword: string): Promise {\n        return await bcrypt.compare(plainPassword, hashedPassword);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadValidationRequestException.html":{"url":"classes/BadValidationRequestException.html","title":"class - BadValidationRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadValidationRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/exceptions/bad-validation-request.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                An error that will be returned if some mandatory attribute is missing from the Article.\nThe error is returned by the validator that checks the request.\n\n            \n\n            \n                Extends\n            \n            \n                    BadRequestException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in src/models/exceptions/bad-validation-request.exception.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, ValidationError, ValidationPipeOptions } from '@nestjs/common';\n\n/**\n  * An error that will be returned if some mandatory attribute is missing from the Article.\n  * The error is returned by the validator that checks the request.\n  */\nexport class BadValidationRequestException extends BadRequestException {\n    constructor(errors: ValidationError[]) {\n        const properties: string[] = [];\n\n        // List of mandatory attributes that are missing.\n        errors.forEach((error: ValidationError) => {\n            properties.push(error.property);\n        });\n\n        const message: string = properties.length == 0\n            ? 'Unexpected error while validating request parameters.'\n            : 'Missing mandatory parameter(s): ' + properties.join(', ');\n\n        super({\n            response: 0,\n            message: message,\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicStrategy.html":{"url":"injectables/BasicStrategy.html","title":"injectable - BasicStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BasicStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/auth/strategies/basic.strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Basic strategy for authorization. Authorization header must contain username and password.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/endpoints/auth/strategies/basic.strategy.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/auth/strategies/basic.strategy.ts:21\n                \n            \n\n\n            \n                \n                    Validate username and password from Authorization header.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { BasicStrategy as Strategy } from 'passport-http';\n\n/**\n * Basic strategy for authorization. Authorization header must contain username and password.\n * \n */\n@Injectable()\nexport class BasicStrategy extends PassportStrategy(Strategy, 'basic') {\n    constructor() {\n        super();\n    }\n\n    /**\n     * Validate username and password from Authorization header.\n     * @param username\n     * @param password\n     * @returns \n     */\n    public async validate(username: string, password: string): Promise {\n        if (\n            process.env.BACKEND_API_KEY &&\n            process.env.BACKEND_API_SECRET &&\n            username === process.env.BACKEND_API_KEY &&\n            password === process.env.BACKEND_API_SECRET\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckArticleTypePipe.html":{"url":"classes/CheckArticleTypePipe.html","title":"class - CheckArticleTypePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckArticleTypePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/pipes/check-article-type.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe for checking article type. If type is not valid, BadRequestException is thrown.\n\n            \n\n\n            \n                Implements\n            \n            \n                        PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: ArticleTypeEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/pipes/check-article-type.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ArticleTypeEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ArticleTypeEnum\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException, PipeTransform } from '@nestjs/common';\nimport { ArticleTypeEnum } from 'src/models/enums/article-type.enum';\n\n/**\n * Pipe for checking article type. If type is not valid, BadRequestException is thrown.\n */\nexport class CheckArticleTypePipe implements PipeTransform {\n    public transform(value: ArticleTypeEnum): ArticleTypeEnum {\n\n        for (const articleType of Object.values(ArticleTypeEnum)) {\n            if (value === articleType) {\n                return articleType;\n            }\n        }\n        \n        throw new BadRequestException(`Unsupported article type: ${value}`);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CronJobModule.html":{"url":"modules/CronJobModule.html","title":"module - CronJobModule","body":"\n                   \n\n\n\n\n    Modules\n    CronJobModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CronJobModule\n\n\n\ncluster_CronJobModule_imports\n\n\n\ncluster_CronJobModule_providers\n\n\n\n\nPushNotificationModule\n\nPushNotificationModule\n\n\n\nCronJobModule\n\nCronJobModule\n\nCronJobModule -->\n\nPushNotificationModule->CronJobModule\n\n\n\n\n\nCronJobService\n\nCronJobService\n\nCronJobModule -->\n\nCronJobService->CronJobModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/cron-job/cron-job.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CronJobService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PushNotificationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PushNotificationModule } from \"src/endpoints/push-notification/push-notification.module\";\nimport { CronJobService } from \"./cron-job.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { PushTokenEntity } from \"src/endpoints/push-notification/push-token.entity\";\n\n@Module({\n    imports: [\n        TypeOrmModule.forFeature([PushTokenEntity]),\n        PushNotificationModule\n    ],\n    providers: [\n        CronJobService\n    ],\n}) export class CronJobModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CronJobService.html":{"url":"injectables/CronJobService.html","title":"injectable - CronJobService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CronJobService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/cron-job/cron-job.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Async\n                                checkAndSendPushNotificationsCronJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pushNotificationService: PushNotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/services/cron-job/cron-job.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pushNotificationService\n                                                  \n                                                        \n                                                                        PushNotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Public\n                        Async\n                        checkAndSendPushNotificationsCronJob\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAndSendPushNotificationsCronJob()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_DAY_AT_NOON)\n                \n            \n\n            \n                \n                    Defined in src/services/cron-job/cron-job.service.ts:13\n                \n            \n\n\n            \n                \n                    Cron job for sending free daily cookie via push notifications.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { PushNotificationService } from 'src/endpoints/push-notification/push-notification.service';\n\n@Injectable()\nexport class CronJobService {\n    constructor(private readonly pushNotificationService: PushNotificationService) {}\n\n    /**\n     * Cron job for sending free daily cookie via push notifications.\n     */\n    @Cron(CronExpression.EVERY_DAY_AT_NOON)\n    public async checkAndSendPushNotificationsCronJob(): Promise {\n        this.pushNotificationService.sendCookieToRandomDevice();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomValidationPipe.html":{"url":"classes/CustomValidationPipe.html","title":"class - CustomValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/pipes/validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Validate if request body is valid according to DTO.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utils/pipes/validation.pipe.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { BadValidationRequestException } from 'src/models/exceptions/bad-validation-request.exception';\n\n/**\n * Validate if request body is valid according to DTO.\n */\nexport class CustomValidationPipe extends ValidationPipe {\n    constructor() {\n        super({\n            transform: true,\n            exceptionFactory: (errors: ValidationError[]) => new BadValidationRequestException(errors),\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailModule.html":{"url":"modules/EmailModule.html","title":"module - EmailModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_imports\n\n\n\ncluster_EmailModule_providers\n\n\n\ncluster_EmailModule_exports\n\n\n\n\nPushNotificationModule\n\nPushNotificationModule\n\n\n\nEmailModule\n\nEmailModule\n\nEmailModule -->\n\nPushNotificationModule->EmailModule\n\n\n\n\n\nSentryModule\n\nSentryModule\n\nEmailModule -->\n\nSentryModule->EmailModule\n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nEmailModule->EmailService \n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/email/email.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PushNotificationModule\n                        \n                        \n                            SentryModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PushNotificationModule } from \"src/endpoints/push-notification/push-notification.module\";\nimport { SentryModule } from \"../sentry/sentry.module\";\nimport { EmailService } from \"./email.service\";\n\n@Module({\n    imports: [PushNotificationModule, SentryModule],\n    providers: [EmailService],\n    exports: [EmailService],\n}) export class EmailModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/email/email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, sentryService: SentryService, mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/services/email/email.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                        SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmail(article: ArticleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/services/email/email.service.ts:22\n                \n            \n\n\n            \n                \n                    Send email about new article. It serves as a sample of sending email.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    article\n                                    \n                                                ArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Article to send.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport { Inject, Injectable, Logger } from '@nestjs/common';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { ArticleDto } from 'src/endpoints/article/dto/article.dto';\nimport { SentryService } from '../sentry/sentry.service';\nimport * as path from 'path';\nimport * as moment from 'moment';\nimport { SERVER_URL } from 'src/app.module';\n\n@Injectable()\nexport class EmailService {\n\n    constructor(@Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n                private readonly sentryService: SentryService,\n                private readonly mailerService: MailerService) {\n    }\n\n    /**\n     * Send email about new article. It serves as a sample of sending email.\n     * @param article   Article to send.\n     */\n    public async sendEmail(article: ArticleDto): Promise {\n        this.logger.log('info', `[EMAIL_SERVICE] Sending email about new article ${article.articleContentId}`);\n\n        try {\n            await this.mailerService.sendMail({\n                to: 'dimatest01@gmail.com',\n                subject: 'New article: ' + article.title,\n                template: 'new-article',\n                context: {\n                    title: article.title,\n                    body: article.body,\n                    coverImage: article.coverImage ? `${SERVER_URL}/${article.coverImage}` : null,\n                    dateOfPublication: moment(article.dateOfPublication).format('DD.MM.YYYY'),\n                },\n                attachments: [{\n                    filename: 'best-news.png',\n                    path: path.join(__dirname, '..', 'templates', 'assets', 'images', 'best-news.png'),\n                    contentType: 'image/png',\n                    cid: 'newsSmall',\n                }]\n            });\n            this.logger.log('info', `[EMAIL_SERVICE] Email about new article ${article.articleContentId} was sent.`);\n        } catch (error) {\n            this.sentryService.captureException('[EMAIL_SERVICE_ERROR] Cannot send email.', `Email about new article (${article.articleContentId}-${article.title}) was not sent. Error: ${error}`);\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/dtos/error-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/dtos/error-response.dto.ts:6\n                        \n                    \n\n            \n                \n                    Error detail. Intended for developers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/dtos/error-response.dto.ts:11\n                        \n                    \n\n            \n                \n                    User-friendly error. Intended for users\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/dtos/error-response.dto.ts:16\n                        \n                    \n\n            \n                \n                    HTTP status code.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ErrorResponse {\n\n    /**\n     * Error detail. Intended for developers.\n     */\n    public error: string;\n\n    /**\n     * User-friendly error. Intended for users\n     */\n    public message: string;\n\n    /**\n     * HTTP status code.\n     */\n    public statusCode: number;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExcelModule.html":{"url":"modules/ExcelModule.html","title":"module - ExcelModule","body":"\n                   \n\n\n\n\n    Modules\n    ExcelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExcelModule\n\n\n\ncluster_ExcelModule_providers\n\n\n\ncluster_ExcelModule_exports\n\n\n\n\nExcelService \n\nExcelService \n\n\n\nExcelModule\n\nExcelModule\n\nExcelService  -->\n\nExcelModule->ExcelService \n\n\n\n\n\nExcelService\n\nExcelService\n\nExcelModule -->\n\nExcelService->ExcelModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/excel/excel.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExcelService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExcelService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ExcelService } from \"./excel.service\";\n\n@Module({\n    providers: [ExcelService],\n    exports: [ExcelService],\n}) export class ExcelModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExcelService.html":{"url":"injectables/ExcelService.html","title":"injectable - ExcelService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExcelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/excel/excel.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                XLS_COLUMN_ORDER\n                            \n                            \n                                    Private\n                                XLS_COLUMN_WIDTHS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                articlesToAoA\n                            \n                            \n                                    Public\n                                exportArticles\n                            \n                            \n                                    Private\n                                sheetFromAoA\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        articlesToAoA\n                        \n                    \n                \n            \n            \n                \n                    \n                    articlesToAoA(articles: ArticleDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/services/excel/excel.service.ts:58\n                \n            \n\n\n            \n                \n                    Convert articles to array of arrays. Rows and columns of excel.\nFirst row is column names - header.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    articles\n                                    \n                                                ArticleDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Articles to convert.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array>\n\n                    \n                    \n                        Array of arrays. Rows and columns of excel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        exportArticles\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportArticles(articles: ArticleDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/services/excel/excel.service.ts:36\n                \n            \n\n\n            \n                \n                    Export articles to excel.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    articles\n                                    \n                                                ArticleDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Articles to export.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Buffer\n\n                    \n                    \n                        Buffer with excel file.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        sheetFromAoA\n                        \n                    \n                \n            \n            \n                \n                    \n                    sheetFromAoA(rows: Array>, columnNames: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/services/excel/excel.service.ts:87\n                \n            \n\n\n            \n                \n                    Create sheet from array of arrays. Rows and columns of excel.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rows\n                                    \n                                            Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array of arrays. Rows and columns of excel.\n\n                                    \n                                \n                                \n                                    columnNames\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Column names.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     WorkSheet\n\n                    \n                    \n                        Sheet.\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        XLS_COLUMN_ORDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n        articleContentId: 'Id',\n        title: 'Title',\n        body: 'Body',\n        dateOfPublication: 'Date of publication',\n        articleType: 'Article type',\n        active: 'Active',\n        tags: 'Tags',\n    }\n                    \n                \n                    \n                        \n                                Defined in src/services/excel/excel.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        XLS_COLUMN_WIDTHS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n        title: 20,\n        body: 50,\n    }\n                    \n                \n                    \n                        \n                                Defined in src/services/excel/excel.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { TagDto } from 'src/endpoints/tag/dto/tag.dto';\nimport { ColInfo, RowInfo, WorkBook, WorkSheet } from 'xlsx';\nimport { LanguageEnum } from 'src/models/enums/language.enum';\nimport { ArticleDto } from 'src/endpoints/article/dto/article.dto';\n\nimport * as XLSX from 'xlsx';\nimport * as moment from 'moment';\n\n@Injectable()\nexport class ExcelService {\n\n    // Order of columns in excel and their names.\n    private XLS_COLUMN_ORDER: { [key: string]: string } = {\n        articleContentId: 'Id',\n        title: 'Title',\n        body: 'Body',\n        dateOfPublication: 'Date of publication',\n        articleType: 'Article type',\n        active: 'Active',\n        tags: 'Tags',\n    };\n\n    // Width of columns in excel.\n    private XLS_COLUMN_WIDTHS: { [key: string]: number } = {\n        title: 20,\n        body: 50,\n    };\n\n    /**\n     * Export articles to excel.\n     * \n     * @param articles  Articles to export. \n     * @returns         Buffer with excel file.\n     */\n    public exportArticles(articles: ArticleDto[]): Buffer {\n        const workbook: WorkBook = XLSX.utils.book_new();\n        let rows: Array>;\n        let sheet: WorkSheet;\n\n        // Create sheet for each language.\n        for (const language of Object.values(LanguageEnum)) {\n            rows = this.articlesToAoA(articles.filter((article: ArticleDto) => article.language === language));\n            sheet = this.sheetFromAoA(rows, this.XLS_COLUMN_ORDER);\n            XLSX.utils.book_append_sheet(workbook, sheet, 'Articles ' + language);\n        }\n\n        return XLSX.write(workbook, { type: 'buffer' });\n    }\n\n    /**\n     * Convert articles to array of arrays. Rows and columns of excel.\n     * First row is column names - header.\n     * \n     * @param articles  Articles to convert.\n     * @returns         Array of arrays. Rows and columns of excel.\n     */\n    private articlesToAoA(articles: ArticleDto[]): Array> {\n        const columnNames: string[] = Object.values(this.XLS_COLUMN_ORDER);\n        const articleAttributes: string[] = Object.keys(this.XLS_COLUMN_ORDER);\n        const rows: Array> = [\n            columnNames,\n            ...articles.map((content: ArticleDto) =>\n                articleAttributes.map((key: keyof ArticleDto) => {\n                    if (key === 'dateOfPublication') {\n                        if (content[key]) {\n                            return moment(content[key]).format('DD.MM.YYYY');\n                        }\n                    } else if (key === 'tags' && content[key]) {\n                        return (content[key] as TagDto[]).map(tag => tag.title).join(', ');\n                    } else {\n                        return content[key]?.toString();\n                    }\n                }),\n            ),\n        ];\n        return rows;\n    }\n\n    /**\n     * Create sheet from array of arrays. Rows and columns of excel.\n     * \n     * @param rows          Array of arrays. Rows and columns of excel.\n     * @param columnNames   Column names.\n     * @returns             Sheet.\n     */\n    private sheetFromAoA(rows: Array>, columnNames: { [key: string]: string }): WorkSheet {\n        const sheet: WorkSheet = XLSX.utils.aoa_to_sheet(rows, {\n            cellStyles: true,\n            cellDates: true,\n            dateNF: 'dd mmm yyyy;@'\n        });\n        const orderKeys: Array = Object.keys(columnNames);\n        const wscols: Array = orderKeys.map((key: keyof ArticleDto) => ({ width: this.XLS_COLUMN_WIDTHS[key] || 12 }));\n        const wsrows: Array = rows.map(() => ({ hpx: 20 }));\n        sheet['!cols'] = wscols;\n        sheet['!rows'] = wsrows;\n        return sheet;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileModule\n\n\n\ncluster_FileModule_exports\n\n\n\ncluster_FileModule_imports\n\n\n\ncluster_FileModule_providers\n\n\n\n\nSentryModule\n\nSentryModule\n\n\n\nFileModule\n\nFileModule\n\nFileModule -->\n\nSentryModule->FileModule\n\n\n\n\n\nFileService \n\nFileService \n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/file/file.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SentryModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SentryModule } from \"../sentry/sentry.module\";\nimport { FileService } from \"./file.service\";\n\n@Module({\n    imports: [SentryModule],\n    providers: [FileService],\n    exports: [FileService],\n}) export class FileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/file/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                multerOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                fileFilter\n                            \n                            \n                                    Static\n                                getRandomName\n                            \n                            \n                                    Public\n                                    Async\n                                removeFileFromSystem\n                            \n                            \n                                    Public\n                                    Async\n                                resizeImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sentryService: SentryService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/services/file/file.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sentryService\n                                                  \n                                                        \n                                                                        SentryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        fileFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    fileFilter(_req: Request, file: Express.Multer.File, cb: (error: Error | null,acceptFile: boolean) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/services/file/file.service.ts:51\n                \n            \n\n\n            \n                \n                    Filter files that have not allowed extension.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getRandomName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRandomName(originalname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/file/file.service.ts:43\n                \n            \n\n\n            \n                \n                    Generate random name for file.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    originalname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Original name of file to get extension.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Random name with extension.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        removeFileFromSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFileFromSystem(fileUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/file/file.service.ts:87\n                \n            \n\n\n            \n                \n                    Remove file from system.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        resizeImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    resizeImage(path: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/file/file.service.ts:65\n                \n            \n\n\n            \n                \n                    Resize image to 360px width. Image size is reduced.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Path to image.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        True if image was resized, false otherwise.\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        multerOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MulterOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n        storage: diskStorage({\n            destination: DIRECTORY_IMAGES,\n            filename: (_req, file, cb) => {\n                return cb(null, FileService.getRandomName(file.originalname));\n            },\n        }),\n        fileFilter: FileService.fileFilter,\n        limits: {\n            fileSize: MAX_FILE_SIZE\n        }\n    }\n                    \n                \n                    \n                        \n                                Defined in src/services/file/file.service.ts:25\n                        \n                    \n\n            \n                \n                    Options for multer.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable, Logger } from '@nestjs/common';\nimport { MulterOptions } from '@nestjs/platform-express/multer/interfaces/multer-options.interface';\nimport { diskStorage } from 'multer';\n\nimport { DIRECTORY_IMAGES, MAX_FILE_SIZE } from 'src/constants';\nimport { v4 as uuidv4 } from 'uuid';\nimport { extname } from 'path';\nimport { SentryService } from '../sentry/sentry.service';\nimport { SERVER_URL } from 'src/app.module';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Request } from 'express';\nimport * as sharp from 'sharp';\nimport * as fs from 'fs';\n\n@Injectable()\nexport class FileService {\n\n    constructor(private readonly sentryService: SentryService,\n                @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger) {\n    }\n\n    /**\n     * Options for multer.\n     */\n    public static multerOptions: MulterOptions = {\n        storage: diskStorage({\n            destination: DIRECTORY_IMAGES,\n            filename: (_req, file, cb) => {\n                return cb(null, FileService.getRandomName(file.originalname));\n            },\n        }),\n        fileFilter: FileService.fileFilter,\n        limits: {\n            fileSize: MAX_FILE_SIZE\n        }\n    };\n    \n    /**\n     * Generate random name for file.\n     * @param originalname  Original name of file to get extension.\n     * @returns             Random name with extension.\n     */\n    public static getRandomName(originalname: string): string {\n        const randomName: string = uuidv4();\n        return `${randomName}${extname(originalname)}`;\n    }\n\n    /**\n     * Filter files that have not allowed extension.\n     */\n    private static fileFilter(_req: Request, file: Express.Multer.File, cb: (error: Error | null, acceptFile: boolean) => void): void {\n        const allowedFileTypes: string[] = ['image/png', 'image/jpeg', 'image/gif'];\n\n        if (!allowedFileTypes.includes(file.mimetype)) {\n            return cb(new BadRequestException('Only JPG, JPEG, PNG and GIF files are allowed.'), false);\n        }\n        return cb(null, true);\n    }\n\n    /**\n     * Resize image to 360px width. Image size is reduced.\n     * @param path  Path to image.\n     * @returns     True if image was resized, false otherwise.\n     */\n    public async resizeImage(path: string): Promise {\n        const buffer: Buffer = await sharp(path)\n            .resize({\n                width: 360,\n                fit: 'inside',\n            })\n            .toBuffer();\n\n        try {\n            await sharp(buffer).toFile(path);\n            return true;\n        } catch (error) {\n            this.sentryService.captureException('Error while resizing image.', error);\n        }\n        return false;\n    }\n\n    /**\n     * Remove file from system.\n     * @param fileUrl \n     * @returns \n     */\n    public async removeFileFromSystem(fileUrl: string): Promise {\n        if (!fileUrl) {\n            return true;\n        }\n        return new Promise((resolve) => {\n            let oldDataRelativeUrl: string = '';\n\n            // If fileUrl starts with SERVER_URL, then remove it.\n            if (fileUrl.startsWith(SERVER_URL)) {\n                oldDataRelativeUrl = fileUrl.replace(SERVER_URL, '');\n            }\n\n            // If fileUrl starts with '/', then remove it.\n            if (oldDataRelativeUrl.startsWith('/')) {\n                oldDataRelativeUrl = oldDataRelativeUrl.replace('/', '');\n            }\n\n            fs.unlink(oldDataRelativeUrl, (error) => {\n                if (error) {\n                    this.logger.error(`[FileService] Cannot delete file: ${fileUrl}`, error);\n                    resolve(false);\n                } else {\n                    this.logger.log('info', `[FileService] File deleted: ${fileUrl}`);\n                    resolve(true);\n                }\n            });\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/http-exception.filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Error handler catching only HTTP exceptions.\n\n            \n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n                        GqlExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/filters/http-exception.filter.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        catch\n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/http-exception.filter.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException, Inject, Logger } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { ContextType, HttpArgumentsHost } from '@nestjs/common/interfaces/features/arguments-host.interface';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { GqlArgumentsHost, GqlExceptionFilter } from '@nestjs/graphql';\n\n/**\n * Error handler catching only HTTP exceptions.\n */\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter, GqlExceptionFilter {\n\n    constructor(@Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger) { }\n\n    public catch(exception: HttpException, host: ArgumentsHost): void {\n        const ctx: HttpArgumentsHost = host.switchToHttp();\n        const response: Response = ctx.getResponse();\n        const request: Request = ctx.getRequest();\n        const status: number = exception.getStatus();\n\n        const gqlHost: GqlArgumentsHost = GqlArgumentsHost.create(host);\n        const gqlContext: ContextType = gqlHost.getType();\n\n        // If HTTP context, return JSON response. Otherwise, return GraphQL response.\n        if (gqlContext === 'http') {\n            response\n                .status(status)\n                .json({\n                    statusCode: status,\n                    message: exception.message,\n                    error: exception.message,\n                });\n\n            this.logger.error(`HttpException ${status}: ${request.url}`);\n        } else {\n            this.logger.error(`HttpException ${status}: ${gqlHost.getInfo().fieldName}`);\n        }\n\n        this.logger.error(exception.stack);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/jwt-payload.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n    sub: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtRequest.html":{"url":"interfaces/JwtRequest.html","title":"interface - JwtRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/jwt-request.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtPayload\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtPayload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtPayload:         JwtPayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JwtPayload\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JwtPayload } from './jwt-payload.model';\n\nexport interface JwtRequest extends Request {\n    jwtPayload: JwtPayload; // Payload added during jwt authentication (username/id)\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userEntityRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/endpoints/auth/strategies/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEntityRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/auth/strategies/jwt.strategy.ts:23\n                \n            \n\n\n            \n                \n                    Validate user from JWT token.\nIf user is not found, throw UnauthorizedException.\nIf user is not active, throw ForbiddenException.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from 'src/endpoints/auth/user.entity';\nimport { JwtPayload } from 'src/models/jwt-payload.model';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n    constructor(@InjectRepository(UserEntity) private readonly userEntityRepository: Repository) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            secretOrKey: process.env.JWT_SECRET\n        });\n    }\n\n    /**\n     * Validate user from JWT token.\n     * If user is not found, throw UnauthorizedException.\n     * If user is not active, throw ForbiddenException.\n     */\n    public async validate(payload: JwtPayload): Promise {\n        const user: UserEntity | null = await this.userEntityRepository.findOne(\n            {\n                where: { id: payload.sub },\n                select: ['active', 'id']\n            });\n\n        if (!user) {\n            throw new UnauthorizedException('This endpoint can access only administrators.');\n        }\n\n        if (!user.active) {\n            throw new ForbiddenException(`User is not active.`);\n        }\n\n        return payload;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/endpoints/auth/strategies/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/auth/strategies/local.strategy.ts:26\n                \n            \n\n\n            \n                \n                    Validate user from request.\nIf password is incorrect, throw UnauthorizedException.\nValidator takes from request JSON default parameters username and password.\nSo you can't send in JSON parameters email and password. Otherwise you will get response 401.\nOr you can set validator how parameters will be named.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Username.\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Password.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        True if user is valid, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n\n    constructor(private readonly authService: AuthService) {\n        super();\n    }\n\n    /**\n     * Validate user from request.\n     * If password is incorrect, throw UnauthorizedException.\n     * Validator takes from request JSON default parameters `username` and `password`.\n     * So you can't send in JSON parameters `email` and `password`. Otherwise you will get response 401.\n     * Or you can set validator how parameters will be named.\n     * \n     * @throws {BadRequestException} If username or password is missing.\n     * @throws {UnauthorizedException} If username or password is incorrect.\n     * @param username  Username.\n     * @param password  Password.\n     * @returns         True if user is valid, otherwise false.\n     */\n    public async validate(username: string, password: string): Promise {\n\n        if (!username || !password) {\n            throw new BadRequestException('Email or password is missing.');\n        }\n\n        const success: boolean = await this.authService.validateUser(username, password);\n        if (!success) {\n            throw new UnauthorizedException('Email or password is incorrect.');\n        }\n        \n        return true;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migrations1691261966905.html":{"url":"classes/Migrations1691261966905.html","title":"class - Migrations1691261966905","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migrations1691261966905\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1691261966905-migrations.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Migrations1691261966905'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1691261966905-migrations.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1691261966905-migrations.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1691261966905-migrations.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class Migrations1691261966905 implements MigrationInterface {\n    public name: string = 'Migrations1691261966905'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`CREATE TABLE \\`tag\\` (\\`id\\` varchar(255) NOT NULL, \\`language\\` enum ('cs', 'en') NOT NULL, \\`title\\` varchar(255) NOT NULL, \\`order\\` int NOT NULL DEFAULT '10', PRIMARY KEY (\\`id\\`, \\`language\\`)) ENGINE=InnoDB`);\n        await queryRunner.query(`CREATE TABLE \\`article\\` (\\`id\\` int NOT NULL AUTO_INCREMENT, \\`article_type\\` enum ('news', 'story') NOT NULL, \\`active\\` tinyint NOT NULL DEFAULT 1, \\`parent\\` int NULL, \\`timestamp\\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`);\n        await queryRunner.query(`CREATE TABLE \\`article_content\\` (\\`id\\` int NOT NULL AUTO_INCREMENT, \\`article_id\\` int NOT NULL, \\`language\\` enum ('cs', 'en') NOT NULL, \\`title\\` varchar(255) NOT NULL, \\`body\\` longtext NOT NULL, \\`coverImage\\` varchar(255) NULL, \\`date_of_publication\\` datetime NOT NULL, INDEX \\`language\\` (\\`language\\`), INDEX \\`date_of_publication_idx\\` (\\`date_of_publication\\`), FULLTEXT INDEX \\`IDX_fulltext\\` (\\`title\\`, \\`body\\`), INDEX \\`article_id\\` (\\`article_id\\`), PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`);\n        await queryRunner.query(`CREATE TABLE \\`push_token\\` (\\`token\\` varchar(255) NOT NULL, \\`language\\` enum ('cs', 'en') NOT NULL DEFAULT 'cs', \\`created_at\\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP, \\`updated_at\\` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (\\`token\\`)) ENGINE=InnoDB`);\n        await queryRunner.query(`CREATE TABLE \\`article__tag\\` (\\`article_id\\` int NOT NULL, \\`tag_id\\` varchar(255) NOT NULL, \\`tag_language\\` enum ('cs', 'en') NOT NULL, INDEX \\`IDX_74fd901c12ea1b6d4eea6885d2\\` (\\`article_id\\`), INDEX \\`IDX_5a8ded7416c4f8d2ec4c0d6b1f\\` (\\`tag_id\\`, \\`tag_language\\`), PRIMARY KEY (\\`article_id\\`, \\`tag_id\\`, \\`tag_language\\`)) ENGINE=InnoDB`);\n        await queryRunner.query(`ALTER TABLE \\`article\\` ADD CONSTRAINT \\`FK_c27e451a84c599d6164080b0f7a\\` FOREIGN KEY (\\`parent\\`) REFERENCES \\`article\\`(\\`id\\`) ON DELETE RESTRICT ON UPDATE RESTRICT`);\n        await queryRunner.query(`ALTER TABLE \\`article_content\\` ADD CONSTRAINT \\`FK_695e2a3fb3e8f1995d703d5b91c\\` FOREIGN KEY (\\`article_id\\`) REFERENCES \\`article\\`(\\`id\\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE \\`article__tag\\` ADD CONSTRAINT \\`FK_74fd901c12ea1b6d4eea6885d2c\\` FOREIGN KEY (\\`article_id\\`) REFERENCES \\`article\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE \\`article__tag\\` ADD CONSTRAINT \\`FK_5a8ded7416c4f8d2ec4c0d6b1f4\\` FOREIGN KEY (\\`tag_id\\`, \\`tag_language\\`) REFERENCES \\`tag\\`(\\`id\\`,\\`language\\`) ON DELETE CASCADE ON UPDATE CASCADE`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \\`article__tag\\` DROP FOREIGN KEY \\`FK_5a8ded7416c4f8d2ec4c0d6b1f4\\``);\n        await queryRunner.query(`ALTER TABLE \\`article__tag\\` DROP FOREIGN KEY \\`FK_74fd901c12ea1b6d4eea6885d2c\\``);\n        await queryRunner.query(`ALTER TABLE \\`article_content\\` DROP FOREIGN KEY \\`FK_695e2a3fb3e8f1995d703d5b91c\\``);\n        await queryRunner.query(`ALTER TABLE \\`article\\` DROP FOREIGN KEY \\`FK_c27e451a84c599d6164080b0f7a\\``);\n        await queryRunner.query(`DROP INDEX \\`IDX_5a8ded7416c4f8d2ec4c0d6b1f\\` ON \\`article__tag\\``);\n        await queryRunner.query(`DROP INDEX \\`IDX_74fd901c12ea1b6d4eea6885d2\\` ON \\`article__tag\\``);\n        await queryRunner.query(`DROP TABLE \\`article__tag\\``);\n        await queryRunner.query(`DROP TABLE \\`push_token\\``);\n        await queryRunner.query(`DROP INDEX \\`article_id\\` ON \\`article_content\\``);\n        await queryRunner.query(`DROP INDEX \\`IDX_fulltext\\` ON \\`article_content\\``);\n        await queryRunner.query(`DROP INDEX \\`date_of_publication_idx\\` ON \\`article_content\\``);\n        await queryRunner.query(`DROP INDEX \\`language\\` ON \\`article_content\\``);\n        await queryRunner.query(`DROP TABLE \\`article_content\\``);\n        await queryRunner.query(`DROP TABLE \\`article\\``);\n        await queryRunner.query(`DROP TABLE \\`tag\\``);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migrations1691666064778.html":{"url":"classes/Migrations1691666064778.html","title":"class - Migrations1691666064778","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migrations1691666064778\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1691666064778-migrations.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Migrations1691666064778'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1691666064778-migrations.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1691666064778-migrations.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1691666064778-migrations.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class Migrations1691666064778 implements MigrationInterface {\n    public name: string = 'Migrations1691666064778'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`CREATE TABLE IF NOT EXISTS \\`user\\` (\\`id\\` int NOT NULL AUTO_INCREMENT, \\`username\\` varchar(255) NOT NULL, \\`password\\` varchar(255) NOT NULL, \\`active\\` tinyint NOT NULL DEFAULT 0, \\`refresh_token\\` varchar(32) NULL, \\`expiration_date\\` timestamp NULL, UNIQUE INDEX \\`IDX_78a916df40e02a9deb1c4b75ed\\` (\\`username\\`), PRIMARY KEY (\\`id\\`)) ENGINE=InnoDB`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`DROP INDEX \\`IDX_78a916df40e02a9deb1c4b75ed\\` ON \\`user\\``);\n        await queryRunner.query(`DROP TABLE \\`user\\``);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migrations1692270732657.html":{"url":"classes/Migrations1692270732657.html","title":"class - Migrations1692270732657","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migrations1692270732657\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1692270732657-migrations.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Migrations1692270732657'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1692270732657-migrations.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1692270732657-migrations.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1692270732657-migrations.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class Migrations1692270732657 implements MigrationInterface {\n    public name: string = 'Migrations1692270732657'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \\`article_content\\` CHANGE \\`coverImage\\` \\`cover_image\\` varchar(255) NULL`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \\`article_content\\` CHANGE \\`cover_image\\` \\`coverImage\\` varchar(255) NULL`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PushNotificationController.html":{"url":"controllers/PushNotificationController.html","title":"controller - PushNotificationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PushNotificationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/push-notification/push-notification.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                push-notifications\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                deleteToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        deleteToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteToken(token: PushTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete token for push notifications.'})@Delete('token')\n                \n            \n\n            \n                \n                    Defined in src/endpoints/push-notification/push-notification.controller.ts:33\n                \n            \n\n\n            \n                \n                    Delete token for push notifications.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                PushTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Public\n                        Async\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveToken(token: PushTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Save token for push notifications.'})@HttpCode(200)@Post('token')\n                \n            \n\n            \n                \n                    Defined in src/endpoints/push-notification/push-notification.controller.ts:23\n                \n            \n\n\n            \n                \n                    Save token for push notifications.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                PushTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token to save.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, HttpCode, Post, UseGuards } from '@nestjs/common';\nimport { PushNotificationService } from './push-notification.service';\nimport { ApiBasicAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { PushTokenDto } from 'src/endpoints/push-notification/dto/push-token.dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiBasicAuth()\n@ApiTags('Application')\n@UseGuards(AuthGuard(['basic']))\n@Controller('push-notifications')\nexport class PushNotificationController {\n\n    constructor(private readonly pushNotificationService: PushNotificationService) {\n    }\n\n    /**\n     * Save token for push notifications.\n     * @param token     Token to save.\n     */\n    @ApiOperation({ summary: 'Save token for push notifications.' })\n    @HttpCode(200)\n    @Post('token')\n    public async saveToken(@Body() token: PushTokenDto): Promise {\n        return this.pushNotificationService.saveToken(token);\n    }\n\n    /**\n     * Delete token for push notifications.\n     * @param token     Token to delete.\n     */\n    @ApiOperation({ summary: 'Delete token for push notifications.' })\n    @Delete('token')\n    public async deleteToken(@Body() token: PushTokenDto): Promise {\n        return this.pushNotificationService.deleteToken(token);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PushNotificationModule.html":{"url":"modules/PushNotificationModule.html","title":"module - PushNotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    PushNotificationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PushNotificationModule\n\n\n\ncluster_PushNotificationModule_exports\n\n\n\ncluster_PushNotificationModule_providers\n\n\n\n\nPushNotificationService \n\nPushNotificationService \n\n\n\nPushNotificationModule\n\nPushNotificationModule\n\nPushNotificationService  -->\n\nPushNotificationModule->PushNotificationService \n\n\n\n\n\nPushNotificationService\n\nPushNotificationService\n\nPushNotificationModule -->\n\nPushNotificationService->PushNotificationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/endpoints/push-notification/push-notification.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PushNotificationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PushNotificationController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PushNotificationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { Module } from \"@nestjs/common\";\nimport { PushTokenEntity } from \"./push-token.entity\";\nimport { PushNotificationController } from \"./push-notification.controller\";\nimport { PushNotificationService } from \"./push-notification.service\";\n\n@Module({\n    imports: [TypeOrmModule.forFeature([PushTokenEntity])],\n    controllers: [PushNotificationController],\n    providers: [PushNotificationService],\n    exports: [PushNotificationService],\n}) export class PushNotificationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PushNotificationService.html":{"url":"injectables/PushNotificationService.html","title":"injectable - PushNotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PushNotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/push-notification/push-notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                deleteToken\n                            \n                            \n                                    Public\n                                    Async\n                                saveToken\n                            \n                            \n                                    Public\n                                    Async\n                                sendCookieToRandomDevice\n                            \n                            \n                                    Public\n                                    Async\n                                sendPushNotificationToTopic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, pushTokenRepository: Repository, i18n: I18nService)\n                    \n                \n                        \n                            \n                                Defined in src/endpoints/push-notification/push-notification.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pushTokenRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                    I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteToken(token: PushTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/push-notification/push-notification.service.ts:33\n                \n            \n\n\n            \n                \n                    Delete token for push notifications.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                PushTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveToken(token: PushTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/push-notification/push-notification.service.ts:25\n                \n            \n\n\n            \n                \n                    Save token for push notifications.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                PushTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token to save.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        sendCookieToRandomDevice\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendCookieToRandomDevice()\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/push-notification/push-notification.service.ts:77\n                \n            \n\n\n            \n                \n                    Send push notification to random device. Used as example.\nMobile app does not have user authentication, so we cannot send push notification to specific user.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        sendPushNotificationToTopic\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPushNotificationToTopic(article: ArticleContentEntity, language: LanguageEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/push-notification/push-notification.service.ts:43\n                \n            \n\n\n            \n                \n                    Send push notification to topic when new article is created.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    article\n                                    \n                                                ArticleContentEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Article to send.\n\n                                    \n                                \n                                \n                                    language\n                                    \n                                                LanguageEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Language of article. Used to send notification to correct topic.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport { TokenMessage, TopicMessage } from 'firebase-admin/lib/messaging/messaging-api';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { I18nService } from 'nestjs-i18n';\nimport { LanguageEnum } from 'src/models/enums/language.enum';\nimport { ArticleContentEntity } from 'src/endpoints/article/article-content.entity';\nimport * as firebaseAdmin from 'firebase-admin';\nimport { PushTokenDto } from 'src/endpoints/push-notification/dto/push-token.dto';\nimport { PushTokenEntity } from 'src/endpoints/push-notification/push-token.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class PushNotificationService {\n\n    constructor(@Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n                @InjectRepository(PushTokenEntity) private readonly pushTokenRepository: Repository,\n                private readonly i18n: I18nService) {\n    }\n    \n    /**\n     * Save token for push notifications.\n     * @param token     Token to save.\n     */\n    public async saveToken(token: PushTokenDto): Promise {\n        await this.pushTokenRepository.save({ token: token.token, language: token.language, updatedAt: new Date() });\n    }\n\n    /**\n     * Delete token for push notifications.\n     * @param token \n     */\n    public async deleteToken(token: PushTokenDto): Promise {\n        await this.pushTokenRepository.delete({ token: token.token });\n    }\n\n    /**\n     * Send push notification to topic when new article is created.\n     * \n     * @param article   Article to send.\n     * @param language  Language of article. Used to send notification to correct topic.\n     */\n    public async sendPushNotificationToTopic(article: ArticleContentEntity, language: LanguageEnum): Promise {\n        const message: TopicMessage = {\n            topic: 'new-article-' + language,\n            notification: {\n                title: this.i18n.translate('data.PUSH_NOTIFICATION_TITLE', { lang: language }),\n                body: this.i18n.translate('data.PUSH_NOTIFICATION_BODY', {\n                    lang: language,\n                    // Do not send whole article body, just first 255 characters.\n                    args: { body: article.body.length > 252 ? article.body.substring(0, 252) + '...' : article.body }\n                })\n            },\n            data: {\n                articleId: article.id + '',\n                articleType: article.article.articleType\n            },\n            android: {\n                priority: 'high',\n                notification: {\n                    sound: 'default',\n                    clickAction: 'FLUTTER_NOTIFICATION_CLICK',\n                    icon: 'notification_icon',\n                },\n            },\n        };\n\n        // Just for testing, private key is not included in repository.\n        const messageId: string = await firebaseAdmin.messaging().send(message);\n        this.logger.log('info', `[PUSH_NOTIFICATION_SERVICE] Push notification sent: ${messageId}`);\n    }\n\n    /**\n     * Send push notification to random device. Used as example.\n     * Mobile app does not have user authentication, so we cannot send push notification to specific user.\n     */\n    public async sendCookieToRandomDevice(): Promise {\n        const pushTokens: PushTokenEntity[] = await this.pushTokenRepository.find();\n        \n        if (pushTokens.length === 0) {\n            return;\n        }\n\n        const randomToken: PushTokenEntity = pushTokens[Math.floor(Math.random() * pushTokens.length)];\n\n        const message: TokenMessage = {\n            token: randomToken.token,\n            notification: {\n                title: this.i18n.translate('data.PUSH_NOTIFICATION_TITLE_COOKIE', { lang: randomToken.language }),\n                body: this.i18n.translate('data.PUSH_NOTIFICATION_BODY_COOKIE', { lang: randomToken.language })\n            },\n            android: {\n                notification: {\n                    clickAction: 'FLUTTER_NOTIFICATION_CLICK',\n                    icon: 'notification_icon',\n                },\n            },\n        };\n\n        this.logger.log('info', `[PUSH_NOTIFICATION_SERVICE] Send push notification: ${JSON.stringify(message)}`);\n        firebaseAdmin.messaging().send(message)\n            .catch((error) => {\n                this.logger.log('error', `[PUSH_NOTIFICATION_SERVICE] Error while sending push notification: ${error}`);\n\n                // If error occurs, remove token from database.\n                this.deleteToken({ token: randomToken.token, language: randomToken.language });\n            });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PushTokenDto.html":{"url":"classes/PushTokenDto.html","title":"class - PushTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PushTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/push-notification/dto/push-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                language\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/push-notification/dto/push-token.dto.ts:13\n                        \n                    \n\n            \n                \n                    Language of the device.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/endpoints/push-notification/dto/push-token.dto.ts:8\n                        \n                    \n\n            \n                \n                    Device push token generated by FCM.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LanguageEnum } from '../../../models/enums/language.enum';\n\nexport class PushTokenDto {\n\n    /**\n     * Device push token generated by FCM.\n     */\n    public token: string;\n\n    /**\n     * Language of the device.\n     */\n    public language: LanguageEnum;\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PushTokenEntity.html":{"url":"entities/PushTokenEntity.html","title":"entity - PushTokenEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PushTokenEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/push-notification/push-token.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity for storing push tokens.\nMobile application does not have user accounts, so sending push notifications to a specific user does not make sense.\nIt is only for purpose of sample application. We will send push notification (daily cookie :D) to a random device (token).\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createdAt\n                            \n                            \n                                    \n                                    Public\n                                language\n                            \n                            \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    Public\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'created_at', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/push-notification/push-token.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('enum', {enum: LanguageEnum, default: DEFAULT_LANGUAGE})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/push-notification/push-token.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/push-notification/push-token.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'updated_at', default: () => CURRENT_TIMESTAMP, onUpdate: 'CURRENT_TIMESTAMP'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/push-notification/push-token.entity.ts:28\n                        \n                    \n\n            \n                \n                    Last time when token saved to database.\nonUpdate will not update time, because there are no columns to update. So we need to update it manually.\nThis column is used for finding when application was last time opened. It is not guaranteed because token can be changed on device.\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { DEFAULT_LANGUAGE } from 'src/constants';\nimport { LanguageEnum } from 'src/models/enums/language.enum';\nimport { Column, Entity, PrimaryColumn } from 'typeorm';\n\n/**\n * Entity for storing push tokens.\n * Mobile application does not have user accounts, so sending push notifications to a specific user does not make sense.\n * It is only for purpose of sample application. We will send push notification (daily cookie :D) to a random device (token).\n */\n@Entity('push_token')\nexport class PushTokenEntity {\n\n    @PrimaryColumn()\n    public token: string;\n\n    @Column('enum', { enum: LanguageEnum, default: DEFAULT_LANGUAGE })\n    public language: LanguageEnum;\n    \n    @Column('datetime', { name: 'created_at', default: () => 'CURRENT_TIMESTAMP' })\n    public createdAt: Date;\n\n    /**\n     * Last time when token saved to database.\n     * onUpdate will not update time, because there are no columns to update. So we need to update it manually.\n     * This column is used for finding when application was last time opened. It is not guaranteed because token can be changed on device.\n     */\n    @Column('datetime', { name: 'updated_at', default: () => 'CURRENT_TIMESTAMP', onUpdate: 'CURRENT_TIMESTAMP' })\n    public updatedAt: Date;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequiredParameterPipe.html":{"url":"classes/RequiredParameterPipe.html","title":"class - RequiredParameterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequiredParameterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/pipes/required-parameter.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe for checking if required parameter is present.\n\n            \n\n\n            \n                Implements\n            \n            \n                        PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/pipes/required-parameter.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, PipeTransform } from '@nestjs/common';\n\n/**\n * Pipe for checking if required parameter is present.\n */\nexport class RequiredParameterPipe implements PipeTransform {\n    public transform(value: string, metadata: ArgumentMetadata): string {\n        if (value === undefined || value === null) {\n            throw new BadRequestException(`Required parameter '${metadata.data}' is missing.`)\n        } else {\n            return value;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SentryModule.html":{"url":"modules/SentryModule.html","title":"module - SentryModule","body":"\n                   \n\n\n\n\n    Modules\n    SentryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SentryModule\n\n\n\ncluster_SentryModule_providers\n\n\n\ncluster_SentryModule_exports\n\n\n\n\nSentryService \n\nSentryService \n\n\n\nSentryModule\n\nSentryModule\n\nSentryService  -->\n\nSentryModule->SentryService \n\n\n\n\n\nSentryService\n\nSentryService\n\nSentryModule -->\n\nSentryService->SentryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/sentry/sentry.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SentryService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SentryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SentryService } from \"./sentry.service\";\n\n@Module({\n    providers: [SentryService],\n    exports: [SentryService]\n}) export class SentryModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SentryService.html":{"url":"injectables/SentryService.html","title":"injectable - SentryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SentryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/sentry/sentry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                captureException\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in src/services/sentry/sentry.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        captureException\n                        \n                    \n                \n            \n            \n                \n                    \n                    captureException(message: string, data?: Error | string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/sentry/sentry.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Error | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport * as Sentry from '@sentry/node';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\n\n@Injectable()\nexport class SentryService {\n\n    constructor(\n        @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n    ) { }\n\n    public captureException(message: string, data?: Error | string): void {\n        this.logger.error(`[SENTRY_SERVICE] Capture exception: ${message}`);\n        this.logger.error(`[SENTRY_SERVICE] Data: ${data}`);\n        Sentry.captureException(`${message} ---\\n${data}`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StringToNumberPipe.html":{"url":"classes/StringToNumberPipe.html","title":"class - StringToNumberPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StringToNumberPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/pipes/string-to-number.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe for transforming string to number.\n\n            \n\n\n            \n                Implements\n            \n            \n                        PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: string, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/pipes/string-to-number.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentMetadata, PipeTransform } from '@nestjs/common';\n\n/**\n * Pipe for transforming string to number.\n */\nexport class StringToNumberPipe implements PipeTransform {\n    public transform(value: string, metadata: ArgumentMetadata): number | undefined {\n        const numberValue: number = Number(value);\n        if (isNaN(numberValue)) {\n            return undefined\n        }\n        return numberValue;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagController.html":{"url":"controllers/TagController.html","title":"controller - TagController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/tag/tag.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tags\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                createTag\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                deleteTag\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getAllTags\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateTag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Public\n                        Async\n                        createTag\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTag(newTag: TagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create new tag if not exists.'})@ApiConflictResponse({description: 'Tag already exists.'})@HttpCode(200)@Post()\n                \n            \n\n            \n                \n                    Defined in src/endpoints/tag/tag.controller.ts:29\n                \n            \n\n\n            \n                \n                    Create new tag if not exists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newTag\n                                    \n                                                TagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New tag.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Created tag.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        deleteTag\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTag(tag: TagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete tag.'})@Delete()\n                \n            \n\n            \n                \n                    Defined in src/endpoints/tag/tag.controller.ts:64\n                \n            \n\n\n            \n                \n                    Delete tag.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                TagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tag to delete.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        getAllTags\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTags(language: LanguageEnum)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all tags.'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/endpoints/tag/tag.controller.ts:39\n                \n            \n\n\n            \n                \n                    Get tag by id for specific language.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                LanguageEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of tags.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Public\n                        Async\n                        updateTag\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTag(tag: TagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get tag.'})@ApiNotFoundResponse({description: 'Tag not found.'})@Put()\n                \n            \n\n            \n                \n                    Defined in src/endpoints/tag/tag.controller.ts:53\n                \n            \n\n\n            \n                \n                    Update tag.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                TagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New tag.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Updated tag.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Headers, HttpCode, Post, Put, UseInterceptors } from '@nestjs/common';\nimport { TagService } from './tag.service';\nimport { TagDto } from 'src/endpoints/tag/dto/tag.dto';\nimport { ApiConflictResponse, ApiNotFoundResponse, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LanguageEnum } from 'src/models/enums/language.enum';\nimport { CustomValidationPipe } from 'src/utils/pipes/validation.pipe';\nimport { CacheInterceptor, CacheKey } from '@nestjs/cache-manager';\nimport { CacheKeyEnum } from 'src/models/enums/cache-key.enum';\n\n@ApiTags('Administration', 'Application')\n@UseInterceptors(CacheInterceptor)\n@CacheKey(CacheKeyEnum.TAGS)\n@Controller('tags')\nexport class TagController {\n\n    constructor(private readonly tagService: TagService) { }\n\n    /**\n     * Create new tag if not exists.\n     * \n     * @throws          ConflictException if tag already exists.\n     * @param newTag    New tag.\n     * @returns         Created tag.\n     */\n    @ApiOperation({ summary: 'Create new tag if not exists.' })\n    @ApiConflictResponse({ description: 'Tag already exists.' })\n    @HttpCode(200)\n    @Post()\n    public async createTag(@Body(CustomValidationPipe) newTag: TagDto): Promise {\n        return this.tagService.createTag(newTag);\n    }\n\n    /**\n     * Get tag by id for specific language.\n     * @returns         List of tags.\n     */\n    @ApiOperation({ summary: 'Get all tags.' })\n    @Get()\n    public async getAllTags(@Headers('x-language') language: LanguageEnum): Promise {\n        return this.tagService.getAllTags(language);\n    }\n\n    /**\n     * Update tag.\n     * \n     * @throws          NotFoundException if tag not found.\n     * @param tag       New tag.\n     * @returns         Updated tag.\n     */\n    @ApiOperation({ summary: 'Get tag.' })\n    @ApiNotFoundResponse({ description: 'Tag not found.' })\n    @Put()\n    public async updateTag(@Body(CustomValidationPipe) tag: TagDto): Promise {\n        return this.tagService.updateTag(tag);\n    }\n\n    /**\n     * Delete tag.\n     * \n     * @param tag       Tag to delete.\n     */\n    @ApiOperation({ summary: 'Delete tag.' })\n    @Delete()\n    public async deleteTag(@Body() tag: TagDto): Promise {\n        return this.tagService.deleteTag(tag);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagDto.html":{"url":"classes/TagDto.html","title":"class - TagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/tag/dto/tag.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                language\n                            \n                            \n                                    \n                                    Public\n                                order\n                            \n                            \n                                    \n                                    \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagEntity: TagEntity)\n                    \n                \n                        \n                            \n                                Defined in src/endpoints/tag/dto/tag.dto.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagEntity\n                                                  \n                                                        \n                                                                        TagEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/tag/dto/tag.dto.ts:15\n                        \n                    \n\n            \n                \n                    Unique string shortcut for tag.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/tag/dto/tag.dto.ts:23\n                        \n                    \n\n            \n                \n                    What language is the tag available in?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/tag/dto/tag.dto.ts:37\n                        \n                    \n\n            \n                \n                    Order of the tag.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/tag/dto/tag.dto.ts:31\n                        \n                    \n\n            \n                \n                    User-friendly name of the tag.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql';\nimport { IsNotEmpty } from 'class-validator';\nimport { TagEntity } from 'src/endpoints/tag/tag.entity';\nimport { LanguageEnum } from 'src/models/enums/language.enum';\n\n@InputType()\nexport class TagDto {\n\n    /**\n     * Unique string shortcut for tag.\n     * @example world for World news.\n     */\n    @IsNotEmpty()\n    @Field()\n    public id: string;\n\n    /**\n     * What language is the tag available in?\n     * @example en\n     */\n    @IsNotEmpty()\n    @Field()\n    public language: LanguageEnum;\n\n    /**\n     * User-friendly name of the tag.\n     * @example World\n     */\n    @IsNotEmpty()\n    @Field()\n    public title: string;\n\n    /**\n     * Order of the tag.\n     */\n    @Field({ nullable: true })\n    public order: number;\n\n    constructor(tagEntity: TagEntity) {\n        if (tagEntity) {\n            this.id = tagEntity.id;\n            this.language = tagEntity.language;\n            this.title = tagEntity.title;\n            this.order = tagEntity.order;\n        }\n    }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TagEntity.html":{"url":"entities/TagEntity.html","title":"entity - TagEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TagEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/tag/tag.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                articles\n                            \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                language\n                            \n                            \n                                    \n                                    \n                                    Public\n                                order\n                            \n                            \n                                    \n                                    \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        articles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ArticleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, item => item.tags)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/tag/tag.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(type => ID)@PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/tag/tag.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(type => ID)@PrimaryColumn('enum', {enum: LanguageEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/tag/tag.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column({default: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/tag/tag.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/tag/tag.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ManyToMany, PrimaryColumn } from 'typeorm';\nimport { LanguageEnum } from 'src/models/enums/language.enum';\nimport { ArticleEntity } from '../article/article.entity';\nimport { Field, ID, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\n@Entity('tag')\nexport class TagEntity {\n\n    @Field(type => ID)\n    @PrimaryColumn()\n    public id: string;\n\n    @Field(type => ID)\n    @PrimaryColumn('enum', { enum: LanguageEnum })\n    public language: LanguageEnum;\n\n    @Field()\n    @Column()\n    public title: string;\n\n    @Field()\n    @Column({ default: 10 })\n    public order: number;\n\n    @ManyToMany(() => ArticleEntity, item => item.tags)\n    public articles?: ArticleEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagGQLModule.html":{"url":"modules/TagGQLModule.html","title":"module - TagGQLModule","body":"\n                   \n\n\n\n\n    Modules\n    TagGQLModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagGQLModule\n\n\n\ncluster_TagGQLModule_providers\n\n\n\n\nTagGQLService\n\nTagGQLService\n\n\n\nTagGQLModule\n\nTagGQLModule\n\nTagGQLModule -->\n\nTagGQLService->TagGQLModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/graphql/tag-gql.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagGQLService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { Module } from \"@nestjs/common\";\nimport { TagGQLService } from \"./tag.service\";\nimport { TagResolver } from \"./tag.resolver\";\nimport { TagEntity } from \"src/endpoints/tag/tag.entity\";\n\n@Module({\n    imports: [TypeOrmModule.forFeature([TagEntity])],\n    providers: [TagGQLService, TagResolver],\n}) export class TagGQLModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagGQLService.html":{"url":"injectables/TagGQLService.html","title":"injectable - TagGQLService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TagGQLService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql/tag.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createTag\n                            \n                            \n                                    Public\n                                    Async\n                                deleteTag\n                            \n                            \n                                    Public\n                                    Async\n                                getAllTags\n                            \n                            \n                                    Public\n                                    Async\n                                updateTag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/graphql/tag.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createTag\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTag(newTag: TagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql/tag.service.ts:24\n                \n            \n\n\n            \n                \n                    Create new tag if not exists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newTag\n                                    \n                                                TagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New tag.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Created tag.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteTag\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTag(newTag: TagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql/tag.service.ts:83\n                \n            \n\n\n            \n                \n                    Delete tag.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTag\n                                    \n                                                TagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getAllTags\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTags(language: LanguageEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql/tag.service.ts:47\n                \n            \n\n\n            \n                \n                    Get tag by id for specific language.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                LanguageEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_LANGUAGE\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of tags.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateTag\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTag(newTag: TagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/graphql/tag.service.ts:58\n                \n            \n\n\n            \n                \n                    Update tag.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTag\n                                    \n                                                TagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Updated tag.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DEFAULT_LANGUAGE } from 'src/constants';\nimport { TagEntity } from 'src/endpoints/tag/tag.entity';\nimport { TagDto } from 'src/endpoints/tag/dto/tag.dto';\nimport { LanguageEnum } from 'src/models/enums/language.enum';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class TagGQLService {\n\n    constructor(\n        @InjectRepository(TagEntity) private readonly tagRepository: Repository\n    ) {\n    }\n\n    /**\n     * Create new tag if not exists.\n     * \n     * @throws          ConflictException if tag already exists.\n     * @param newTag    New tag. \n     * @returns         Created tag.\n     */\n    public async createTag(newTag: TagDto): Promise {\n\n        const tag: TagEntity | null = await this.tagRepository.findOneBy({ id: newTag.id, language: newTag.language });\n\n        if (tag) {\n            throw new ConflictException('Tag already exists.');\n        }\n\n        const savedTag: TagEntity = await this.tagRepository.save({\n            id: newTag.id,\n            title: newTag.title,\n            language: newTag.language,\n            order: newTag.order\n        });\n\n        return savedTag;\n    }\n\n    /**\n     * Get tag by id for specific language.\n     * \n     * @returns         List of tags.\n     */\n    public async getAllTags(language: LanguageEnum = DEFAULT_LANGUAGE): Promise {\n        return await this.tagRepository.find({ where: { language }, order: { order: 'ASC' } });\n    }\n\n    /**\n     * Update tag.\n     * \n     * @throws          NotFoundException if tag not found.\n     * @param tag       New tag.\n     * @returns         Updated tag.\n     */\n    public async updateTag(newTag: TagDto): Promise {\n        let tag: TagEntity | null = await this.tagRepository.findOne({\n            where: {\n                id: newTag.id,\n                language: newTag.language\n            }\n        });\n\n        if (!tag) {\n            throw new NotFoundException('Tag not found');\n        }\n\n        tag.title = newTag.title;\n        tag.order = newTag.order;\n\n        tag = await this.tagRepository.save(tag);\n\n        return new TagDto(tag);\n    }\n\n    /**\n     * Delete tag.\n     * \n     * @param tag       Tag to delete. \n     */\n    public async deleteTag(newTag: TagDto): Promise {\n        await this.tagRepository.delete({ id: newTag.id, language: newTag.language });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagModule.html":{"url":"modules/TagModule.html","title":"module - TagModule","body":"\n                   \n\n\n\n\n    Modules\n    TagModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagModule\n\n\n\ncluster_TagModule_providers\n\n\n\n\nTagService\n\nTagService\n\n\n\nTagModule\n\nTagModule\n\nTagModule -->\n\nTagService->TagModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/endpoints/tag/tag.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { Module } from \"@nestjs/common\";\nimport { TagController } from \"./tag.controller\";\nimport { TagService } from \"./tag.service\";\nimport { TagEntity } from \"./tag.entity\";\n\n@Module({\n    imports: [TypeOrmModule.forFeature([TagEntity])],\n    controllers: [TagController],\n    providers: [TagService],\n}) export class TagModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagResolver.html":{"url":"classes/TagResolver.html","title":"class - TagResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/graphql/tag.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Async\n                                createTag\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                getTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagService: TagGQLService)\n                    \n                \n                        \n                            \n                                Defined in src/graphql/tag.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagService\n                                                  \n                                                        \n                                                                        TagGQLService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Public\n                        Async\n                        createTag\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTag(tagDto: TagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/graphql/tag.resolver.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagDto\n                                    \n                                                TagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Public\n                        Async\n                        getTags\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTags()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in src/graphql/tag.resolver.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { TagEntity } from 'src/endpoints/tag/tag.entity';\nimport { TagGQLService } from './tag.service';\nimport { TagDto } from 'src/endpoints/tag/dto/tag.dto';\n\n@Resolver((of: TagEntity) => TagEntity)\nexport class TagResolver {\n\n    constructor(private readonly tagService: TagGQLService) { }\n\n    @Query(() => [TagEntity])\n    public async getTags(): Promise {\n        return await this.tagService.getAllTags();\n    }\n\n    @Mutation(() => TagEntity)\n    public async createTag(@Args('tag') tagDto: TagDto): Promise {\n        return await this.tagService.createTag(tagDto)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagService.html":{"url":"injectables/TagService.html","title":"injectable - TagService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TagService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/tag/tag.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createTag\n                            \n                            \n                                    Public\n                                    Async\n                                deleteTag\n                            \n                            \n                                    Public\n                                    Async\n                                getAllTags\n                            \n                            \n                                    Public\n                                    Async\n                                updateTag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagRepository: Repository, cacheManager: Cache)\n                    \n                \n                        \n                            \n                                Defined in src/endpoints/tag/tag.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createTag\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTag(newTag: TagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/tag/tag.service.ts:28\n                \n            \n\n\n            \n                \n                    Create new tag if not exists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newTag\n                                    \n                                                TagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New tag.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Created tag.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        deleteTag\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTag(oldTag: TagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/tag/tag.service.ts:95\n                \n            \n\n\n            \n                \n                    Delete tag.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    oldTag\n                                    \n                                                TagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getAllTags\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTags(language: LanguageEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/tag/tag.service.ts:54\n                \n            \n\n\n            \n                \n                    Get tag by id for specific language.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                LanguageEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DEFAULT_LANGUAGE\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of tags.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        updateTag\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTag(newTag: TagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/endpoints/tag/tag.service.ts:67\n                \n            \n\n\n            \n                \n                    Update tag.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newTag\n                                    \n                                                TagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Updated tag.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CACHE_MANAGER } from '@nestjs/cache-manager';\nimport { ConflictException, Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DEFAULT_LANGUAGE } from 'src/constants';\nimport { TagEntity } from 'src/endpoints/tag/tag.entity';\nimport { TagDto } from 'src/endpoints/tag/dto/tag.dto';\nimport { LanguageEnum } from 'src/models/enums/language.enum';\nimport { Repository } from 'typeorm';\nimport { Cache } from 'cache-manager';\nimport { CacheKeyEnum } from 'src/models/enums/cache-key.enum';\n\n@Injectable()\nexport class TagService {\n\n    constructor(\n        @InjectRepository(TagEntity) private readonly tagRepository: Repository,\n        @Inject(CACHE_MANAGER) private cacheManager: Cache,\n    ) {\n    }\n    \n    /**\n     * Create new tag if not exists.\n     * \n     * @throws          ConflictException if tag already exists.\n     * @param newTag    New tag. \n     * @returns         Created tag.\n     */\n    public async createTag(newTag: TagDto): Promise {\n\n        const tag: TagEntity | null = await this.tagRepository.findOneBy({ id: newTag.id, language: newTag.language });\n\n        if (tag) {\n            throw new ConflictException('Tag already exists.');\n        }\n\n        const savedTag: TagEntity = await this.tagRepository.save({\n            id: newTag.id,\n            title: newTag.title,\n            language: newTag.language,\n            order: newTag.order\n        });\n\n        // Invalidate cache for tags.\n        this.cacheManager.del(CacheKeyEnum.TAGS);\n\n        return new TagDto(savedTag);\n    }\n\n    /**\n     * Get tag by id for specific language.\n     * \n     * @returns         List of tags.\n     */\n    public async getAllTags(language: LanguageEnum = DEFAULT_LANGUAGE): Promise {\n        const tags: TagEntity[] = await this.tagRepository.find({ where: { language }, order: { order: 'ASC' } });\n\n        return tags.map(tag => new TagDto(tag));\n    }\n\n    /**\n     * Update tag.\n     * \n     * @throws          NotFoundException if tag not found.\n     * @param tag       New tag.\n     * @returns         Updated tag.\n     */\n    public async updateTag(newTag: TagDto): Promise {\n        let tag: TagEntity | null = await this.tagRepository.findOne({\n            where: {\n                id: newTag.id,\n                language: newTag.language\n            }\n        });\n\n        if (!tag) {\n            throw new NotFoundException('Tag not found');\n        }\n\n        tag.title = newTag.title;\n        tag.order = newTag.order;\n\n        tag = await this.tagRepository.save(tag);\n        \n        // Invalidate cache for tags.\n        this.cacheManager.del(CacheKeyEnum.TAGS);\n\n        return new TagDto(tag);\n    }\n\n    /**\n     * Delete tag.\n     * \n     * @param tag       Tag to delete. \n     */\n    public async deleteTag(oldTag: TagDto): Promise {\n        await this.tagRepository.delete({ id: oldTag.id, language: oldTag.language });\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadedFileDto.html":{"url":"interfaces/UploadedFileDto.html","title":"interface - UploadedFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UploadedFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/dtos/uploaded-file.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for uploaded file.\nCould be interface, we will not create instance of this object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buffer\n                                        \n                                \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                        \n                                            encoding\n                                        \n                                \n                                \n                                        \n                                            fieldname\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            mimetype\n                                        \n                                \n                                \n                                        \n                                            originalname\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buffer:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A Buffer of the entire file (MemoryStorage)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The folder to which the file has been saved (DiskStorage)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Encoding type of the file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name specified in the form\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the file within the destination (DiskStorage)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Mime type of the file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        originalname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the file on the user's computer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Location of the uploaded file (DiskStorage)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Size of the file in bytes\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface UploadedFileDto {\n    \n    /** Field name specified in the form */\n    fieldname: string;\n\n    /** Name of the file on the user's computer */\n    originalname: string;\n\n    /** Encoding type of the file */\n    encoding: string;\n\n    /** Mime type of the file */\n    mimetype: string;\n\n    /** Size of the file in bytes */\n    size: number;\n\n    /** The folder to which the file has been saved (DiskStorage) */\n    destination: string;\n\n    /** The name of the file within the destination (DiskStorage) */\n    filename: string;\n\n    /** Location of the uploaded file (DiskStorage) */\n    path: string;\n\n    /** A Buffer of the entire file (MemoryStorage) */\n    buffer: Buffer;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/endpoints/auth/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                active\n                            \n                            \n                                    \n                                    Public\n                                expirationDate\n                            \n                            \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    Public\n                                refreshToken\n                            \n                            \n                                    \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/auth/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        expirationDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('timestamp', {nullable: true, name: 'expiration_date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/auth/user.entity.ts:29\n                        \n                    \n\n            \n                \n                    Refresh token expiration date.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/auth/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/auth/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {length: 32, nullable: true, name: 'refresh_token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/auth/user.entity.ts:23\n                        \n                    \n\n            \n                \n                    Refresh token. User can be logged in from one device in one time.\nFor be able to log in from another device, table with refresh tokens must be created.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/endpoints/auth/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('user')\nexport class UserEntity {\n\n    @PrimaryGeneratedColumn()\n    public id: number;\n\n    @Column({ unique: true })\n    public username: string;\n\n    @Column({ select: false })\n    public password?: string;\n\n    @Column({ default: false })\n    public active: boolean;\n    \n    /**\n     * Refresh token. User can be logged in from one device in one time.\n     * For be able to log in from another device, table with refresh tokens must be created.\n     */\n    @Column('varchar', { length: 32, nullable: true, name: 'refresh_token' })\n    public refreshToken: string | null;\n\n    /**\n     * Refresh token expiration date.\n     */\n    @Column('timestamp', { nullable: true, name: 'expiration_date' })\n    public expirationDate: Date | null;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            SERVER_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/data-source.ts\n            \n            variable\n            AppDataSource\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/database-config.ts\n            \n            variable\n            databaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/logger-config.ts\n            \n            variable\n            loggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            DEFAULT_LANGUAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            DIRECTORY_IMAGES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            MAX_FILE_SIZE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            PAGE_COUNT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            REFRESH_TOKEN_SIZE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/endpoints/article/article-content.entity.ts\n            \n            entity\n            ArticleContentEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/endpoints/article/article-content.entity.ts\n            \n            class\n            ArticleContentEntity\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/endpoints/article/article.controller.ts\n            \n            controller\n            ArticleController\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/endpoints/article/article.entity.ts\n            \n            entity\n            ArticleEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/endpoints/article/article.service.ts\n            \n            injectable\n            ArticleService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/endpoints/article/dto/article-request.dto.ts\n            \n            class\n            ArticleRequestDto\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/endpoints/article/dto/article.dto.ts\n            \n            class\n            ArticleDto\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/endpoints/article/search/article-search.controller.ts\n            \n            controller\n            ArticleSearchController\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/endpoints/article/search/article-search.service.ts\n            \n            injectable\n            ArticleSearchService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/endpoints/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/endpoints/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/endpoints/auth/strategies/basic.strategy.ts\n            \n            injectable\n            BasicStrategy\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/endpoints/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/endpoints/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/endpoints/auth/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/endpoints/push-notification/dto/push-token.dto.ts\n            \n            class\n            PushTokenDto\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/endpoints/push-notification/push-notification.controller.ts\n            \n            controller\n            PushNotificationController\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/endpoints/push-notification/push-notification.service.ts\n            \n            injectable\n            PushNotificationService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/endpoints/push-notification/push-token.entity.ts\n            \n            entity\n            PushTokenEntity\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/endpoints/tag/dto/tag.dto.ts\n            \n            class\n            TagDto\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/endpoints/tag/tag.controller.ts\n            \n            controller\n            TagController\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/endpoints/tag/tag.entity.ts\n            \n            entity\n            TagEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/endpoints/tag/tag.entity.ts\n            \n            class\n            TagEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/endpoints/tag/tag.service.ts\n            \n            injectable\n            TagService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/filters/all-exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/graphql/tag.resolver.ts\n            \n            class\n            TagResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/graphql/tag.service.ts\n            \n            injectable\n            TagGQLService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migrations/1691261966905-migrations.ts\n            \n            class\n            Migrations1691261966905\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1691666064778-migrations.ts\n            \n            class\n            Migrations1691666064778\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1692270732657-migrations.ts\n            \n            class\n            Migrations1692270732657\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/dtos/error-response.dto.ts\n            \n            class\n            ErrorResponse\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/models/dtos/uploaded-file.dto.ts\n            \n            interface\n            UploadedFileDto\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/models/exceptions/bad-validation-request.exception.ts\n            \n            class\n            BadValidationRequestException\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/models/jwt-payload.model.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/jwt-request.model.ts\n            \n            interface\n            JwtRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/cron-job/cron-job.service.ts\n            \n            injectable\n            CronJobService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/services/email/email.service.ts\n            \n            injectable\n            EmailService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/services/excel/excel.service.ts\n            \n            injectable\n            ExcelService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/services/file/file.service.ts\n            \n            injectable\n            FileService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/services/sentry/sentry.service.ts\n            \n            injectable\n            SentryService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/pipes/check-article-type.pipe.ts\n            \n            class\n            CheckArticleTypePipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/utils/pipes/required-parameter.pipe.ts\n            \n            class\n            RequiredParameterPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/utils/pipes/string-to-number.pipe.ts\n            \n            class\n            StringToNumberPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/utils/pipes/validation.pipe.ts\n            \n            class\n            CustomValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : ^4.9.3\n        \n            @nestjs-modules/mailer : ^1.9.1\n        \n            @nestjs/apollo : ^12.0.3\n        \n            @nestjs/cache-manager : ^2.1.0\n        \n            @nestjs/cli : ^10.0.0\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/graphql : ^12.0.3\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/schedule : ^3.0.2\n        \n            @nestjs/serve-static : ^4.0.0\n        \n            @nestjs/swagger : ^7.1.4\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            @sentry/node : ^7.61.0\n        \n            @types/bcrypt : ^5.0.0\n        \n            @types/multer : ^1.4.7\n        \n            @types/passport-http : ^0.3.9\n        \n            @types/passport-jwt : ^3.0.9\n        \n            @types/passport-local : ^1.0.35\n        \n            @types/uuid : ^9.0.2\n        \n            bcrypt : ^5.1.0\n        \n            cache-manager : ^5.2.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            firebase-admin : ^11.10.1\n        \n            graphql : ^16.6.0\n        \n            graphql-query-complexity : 0.12.0\n        \n            graphql-subscriptions : 2.0.0\n        \n            handlebars : ^4.7.8\n        \n            moment : ^2.29.4\n        \n            mysql2 : ^3.5.2\n        \n            nest-winston : ^1.9.3\n        \n            nestjs-i18n : ^10.2.6\n        \n            nodemailer : ^6.9.4\n        \n            passport : ^0.6.0\n        \n            passport-http : ^0.3.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            rand-token : ^1.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            sharp : ^0.32.4\n        \n            typeorm : ^0.3.17\n        \n            uuid : ^9.0.0\n        \n            winston : ^3.10.0\n        \n            winston-daily-rotate-file : ^4.7.1\n        \n            xlsx : ^0.18.5\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArticleTypeEnum   (src/.../article-type.enum.ts)\n                        \n                        \n                            CacheKeyEnum   (src/.../cache-key.enum.ts)\n                        \n                        \n                            LanguageEnum   (src/.../language.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/models/enums/article-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ArticleTypeEnum\n                    \n                \n                        \n                            \n                                 NEWS\n                            \n                        \n                        \n                            \n                                Value : news\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n            \n        \n\n    src/models/enums/cache-key.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CacheKeyEnum\n                    \n                \n                        \n                            \n                                 TAGS\n                            \n                        \n                        \n                            \n                                Value : tags\n                            \n                        \n                        \n                            \n                                 ARTICLES\n                            \n                        \n                        \n                            \n                                Value : articles\n                            \n                        \n                        \n                            \n                                 SEARCH\n                            \n                        \n                        \n                            \n                                Value : search\n                            \n                        \n            \n        \n\n    src/models/enums/language.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LanguageEnum\n                    \n                \n                        \n                            \n                                 CS\n                            \n                        \n                        \n                            \n                                Value : cs\n                            \n                        \n                        \n                            \n                                 EN\n                            \n                        \n                        \n                            \n                                Value : en\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNestJS backend for the News Mobile App\nAbout\nWelcome to the News App Backend project! This repository serves as the backend component for the News App, a Flutter application designed to deliver the latest news to users. The backend is built to provide data and functionality to support the app's features.\nBackend is built using NestJS, a NodeJS framework. It is a REST API that provides endpoints for the app to consume. For data storage, the backend uses MySQL and interacts with it using TypeORM.\nThis project is made as a sample project and implements some of the common features found in a typical backend application. List of features:\n\nREST Api (CRUD operations)\nGraphQL basics (query, mutation)\nAuthentication and Authorization (JWT, basic auth, username/password login)\nFirebase Cloud Messaging (FCM) push notifications (via firebase-admin)\nSending emails\nExporting data to Excel file\nFile uploads and downloads\nDockerization\nCron jobs\nSentry error logging\nServing static files\nMigration scripts\nException filters\nLogging to file and managing log files\n\nDemo\nA demo of the backend can be found at https://news.belligerator.cz/api/. The demo is running on a Docker container.\nFor that purpose I have created a docker image for the backend. The image can be found at https://hub.docker.com/r/belligerator/news-backend. The image is built using the Dockerfile in the root directory of this repository.\nOn the server, there is docker-compose file that is used to run the backend and MySQL database. The file can be found at https://github.com/Belligerator/news-docker.\nMobile application\nMobile application is built using Flutter (v3.7.1) and source codes can be found at https://github.com/Belligerator/news-app. It is connected to the demo backend and can be downloaded at https://belligerator.cz/downloads/ (news-.apk). It is available for Android only.\nGetting Started\nPrerequisites\nFor running the backend locally, you will need the following:\n\nNodeJS (v18)\nNestJS (v10)\nMySQL (v5.7)\nDocker (v20) - not required, it was used for creating the image and running the demo from the server.\n\nInstallation\n\nClone the repo news-backend\ngit clone git@github.com:Belligerator/news-backend.git\nInstall NPM packages\nnpm install\nCreate a .env file in the root directory and fill in the required environment variables. You can refer to the .env.example file for the required variables.\n\nCreate database schema news in database. Migration scripts will create the tables in the next step.\n\nRun the app\nnpm run start The app should be running on http://localhost:3000/.\n\nIn the root directory, there is a news.postman_collection.json file that contains a Postman collection with sample requests. You can import it into Postman and use it to test the endpoints.\n\n\nDocumentation\nDocumentation for the endpoints can be found at https://news.belligerator.cz/api/swagger.\nDocumentation for the backend can be found at https://news.belligerator.cz/api/documentation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CronJobModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExcelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PushNotificationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SentryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagGQLModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_providers\n\n\n\ncluster_ArticleSearchModule\n\n\n\ncluster_ArticleSearchModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CronJobModule\n\n\n\ncluster_CronJobModule_providers\n\n\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_exports\n\n\n\ncluster_EmailModule_providers\n\n\n\ncluster_ExcelModule\n\n\n\ncluster_ExcelModule_exports\n\n\n\ncluster_ExcelModule_providers\n\n\n\ncluster_FileModule\n\n\n\ncluster_FileModule_exports\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_PushNotificationModule\n\n\n\ncluster_PushNotificationModule_exports\n\n\n\ncluster_PushNotificationModule_providers\n\n\n\ncluster_SentryModule\n\n\n\ncluster_SentryModule_exports\n\n\n\ncluster_SentryModule_providers\n\n\n\ncluster_TagGQLModule\n\n\n\ncluster_TagGQLModule_providers\n\n\n\ncluster_TagModule\n\n\n\ncluster_TagModule_providers\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nArticleSearchModule\n\nArticleSearchModule\n\nAppModule -->\n\nArticleSearchModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCronJobModule\n\nCronJobModule\n\nAppModule -->\n\nCronJobModule->AppModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nArticleModule -->\n\nEmailModule->ArticleModule\n\n\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nEmailModule->EmailService \n\n\n\n\n\nExcelModule\n\nExcelModule\n\nArticleModule -->\n\nExcelModule->ArticleModule\n\n\n\nAppModule -->\n\nExcelModule->AppModule\n\n\n\n\n\nExcelService \n\nExcelService \n\nExcelService  -->\n\nExcelModule->ExcelService \n\n\n\n\n\nFileModule\n\nFileModule\n\nArticleModule -->\n\nFileModule->ArticleModule\n\n\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nFileService \n\nFileService \n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nPushNotificationModule\n\nPushNotificationModule\n\nArticleModule -->\n\nPushNotificationModule->ArticleModule\n\n\n\nCronJobModule -->\n\nPushNotificationModule->CronJobModule\n\n\n\nEmailModule -->\n\nPushNotificationModule->EmailModule\n\n\n\nAppModule -->\n\nPushNotificationModule->AppModule\n\n\n\n\n\nPushNotificationService \n\nPushNotificationService \n\nPushNotificationService  -->\n\nPushNotificationModule->PushNotificationService \n\n\n\n\n\nSentryModule\n\nSentryModule\n\nEmailModule -->\n\nSentryModule->EmailModule\n\n\n\nFileModule -->\n\nSentryModule->FileModule\n\n\n\nAppModule -->\n\nSentryModule->AppModule\n\n\n\n\n\nSentryService \n\nSentryService \n\nSentryService  -->\n\nSentryModule->SentryService \n\n\n\n\n\nTagGQLModule\n\nTagGQLModule\n\nAppModule -->\n\nTagGQLModule->AppModule\n\n\n\n\n\nTagModule\n\nTagModule\n\nAppModule -->\n\nTagModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBasicStrategy\n\nBasicStrategy\n\nAppModule -->\n\nBasicStrategy->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAppModule -->\n\nJwtStrategy->AppModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAppModule -->\n\nLocalStrategy->AppModule\n\n\n\n\n\nArticleService\n\nArticleService\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\nArticleSearchService\n\nArticleSearchService\n\nArticleSearchModule -->\n\nArticleSearchService->ArticleSearchModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCronJobService\n\nCronJobService\n\nCronJobModule -->\n\nCronJobService->CronJobModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\nExcelService\n\nExcelService\n\nExcelModule -->\n\nExcelService->ExcelModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\nPushNotificationService\n\nPushNotificationService\n\nPushNotificationModule -->\n\nPushNotificationService->PushNotificationModule\n\n\n\n\n\nSentryService\n\nSentryService\n\nSentryModule -->\n\nSentryService->SentryModule\n\n\n\n\n\nTagGQLService\n\nTagGQLService\n\nTagGQLModule -->\n\nTagGQLService->TagGQLModule\n\n\n\n\n\nTagService\n\nTagService\n\nTagModule -->\n\nTagService->TagModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.1\n        \n            Description : The backend for serving news.\n        \n            License : UNLICENSED\n        \n            Author : Dmitrij Buckovsky\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppDataSource   (src/.../data-source.ts)\n                        \n                        \n                            databaseConfig   (src/.../database-config.ts)\n                        \n                        \n                            DEFAULT_LANGUAGE   (src/.../constants.ts)\n                        \n                        \n                            DIRECTORY_IMAGES   (src/.../constants.ts)\n                        \n                        \n                            loggerConfig   (src/.../logger-config.ts)\n                        \n                        \n                            MAX_FILE_SIZE   (src/.../constants.ts)\n                        \n                        \n                            PAGE_COUNT   (src/.../constants.ts)\n                        \n                        \n                            REFRESH_TOKEN_SIZE   (src/.../constants.ts)\n                        \n                        \n                            SERVER_URL   (src/.../app.module.ts)\n                        \n                        \n                               (src/.../app.service.ts)\n                        \n                        \n                               (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataSource\n\n                    \n                \n                \n                    \n                        Default value : new DataSource(databaseConfig)\n                    \n                \n\n            \n                \n                    For migration purposes. Used in package.json.\n\n                \n            \n\n        \n    \n\n    src/config/database-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataSourceOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'mysql',\n    host: process.env.MYSQL_HOST,\n    port: 3306,\n    database: process.env.MYSQL_DATABASE,\n    username: process.env.MYSQL_USER,\n    password: process.env.MYSQL_PASSWORD,\n    entities: [\n        __dirname + '/../endpoints/**/*.entity{.ts,.js}',\n        __dirname + '/../entities/**/*.entity{.ts,.js}',\n    ],\n    synchronize: false,\n    logging: false,\n    charset: 'utf8_unicode_ci',\n    migrations: [__dirname + '/../migrations/*{.ts,.js}'],\n    migrationsRun: true\n}\n                    \n                \n\n\n        \n    \n\n    src/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_LANGUAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEnum\n\n                    \n                \n                \n                    \n                        Default value : LanguageEnum.EN\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DIRECTORY_IMAGES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'uploads/images'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MAX_FILE_SIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1024 * 1024 * 15\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PAGE_COUNT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_SIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 32\n                    \n                \n\n\n        \n    \n\n    src/config/logger-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WinstonModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    exitOnError: false,\n    transports: [\n        new DailyRotateFile({\n            filename: 'debug-%DATE%.log',\n            dirname: './logs',\n            datePattern: 'YYYY-MM-DD',\n            maxSize: '10m',\n            maxFiles: '7d',\n            level: 'debug',\n            format: format.combine(\n                format.uncolorize(),\n                format.timestamp(),\n                format.printf(msg => {\n                    return `${msg.timestamp} [${msg.level}] - ${msg.message}` + (msg.stack ? `\\n\\t${msg.stack}` : '');\n                }),\n            ),\n            handleExceptions: true,\n            handleRejections: true,\n        }),\n        new DailyRotateFile({\n            filename: 'error-%DATE%.log',\n            dirname: './logs',\n            datePattern: 'YYYY-MM-DD',\n            maxSize: '10m',\n            maxFiles: '7d',\n            level: 'error',\n            format: format.combine(\n                format.uncolorize(),\n                format.timestamp(),\n                format.printf(msg => {\n                    return `${msg.timestamp} [${msg.level}] - ${msg.message}` + (msg.stack ? `\\n\\t${msg.stack}` : '');\n                }),\n            ),\n            handleExceptions: true,\n            handleRejections: true,\n        }),\n        new transports.Console({\n            handleExceptions: true,\n            handleRejections: true,\n            format: format.combine(\n                format.colorize(),\n                format.timestamp(),\n                format.printf(msg => {\n                    return `${msg.timestamp} [${msg.level}] - ${msg.message}` + (msg.stack ? `\\n\\t${msg.stack}` : '');\n                }),\n            ),\n        }),\n    ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SERVER_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : process.env.SERVER_URL ?? ''\n                    \n                \n\n\n        \n    \n\n    src/app.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('../package.json')\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('../package.json')\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
